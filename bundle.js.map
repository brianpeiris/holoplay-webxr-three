{
  "version": 3,
  "sources": ["node_modules/cardboard-vr-display/dist/cardboard-vr-display.js", "node_modules/ws/browser.js", "node_modules/three/src/constants.js", "node_modules/three/src/core/EventDispatcher.js", "node_modules/three/src/math/MathUtils.js", "node_modules/three/src/math/Vector2.js", "node_modules/three/src/math/Matrix3.js", "node_modules/three/src/utils.js", "node_modules/three/src/extras/ImageUtils.js", "node_modules/three/src/textures/Texture.js", "node_modules/three/src/math/Vector4.js", "node_modules/three/src/renderers/WebGLRenderTarget.js", "node_modules/three/src/renderers/WebGLMultisampleRenderTarget.js", "node_modules/three/src/math/Quaternion.js", "node_modules/three/src/math/Vector3.js", "node_modules/three/src/math/Box3.js", "node_modules/three/src/math/Sphere.js", "node_modules/three/src/math/Ray.js", "node_modules/three/src/math/Matrix4.js", "node_modules/three/src/math/Euler.js", "node_modules/three/src/core/Layers.js", "node_modules/three/src/core/Object3D.js", "node_modules/three/src/math/Triangle.js", "node_modules/three/src/materials/Material.js", "node_modules/three/src/math/Color.js", "node_modules/three/src/materials/MeshBasicMaterial.js", "node_modules/three/src/core/BufferAttribute.js", "node_modules/three/src/core/BufferGeometry.js", "node_modules/three/src/objects/Mesh.js", "node_modules/three/src/geometries/BoxGeometry.js", "node_modules/three/src/renderers/shaders/UniformsUtils.js", "node_modules/three/src/renderers/shaders/ShaderChunk/default_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/default_fragment.glsl.js", "node_modules/three/src/materials/ShaderMaterial.js", "node_modules/three/src/cameras/Camera.js", "node_modules/three/src/cameras/PerspectiveCamera.js", "node_modules/three/src/cameras/CubeCamera.js", "node_modules/three/src/textures/CubeTexture.js", "node_modules/three/src/renderers/WebGLCubeRenderTarget.js", "node_modules/three/src/math/Plane.js", "node_modules/three/src/math/Frustum.js", "node_modules/three/src/renderers/webgl/WebGLAnimation.js", "node_modules/three/src/renderers/webgl/WebGLAttributes.js", "node_modules/three/src/geometries/PlaneGeometry.js", "node_modules/three/src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/alphatest_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/aomap_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/begin_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/bsdfs.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/color_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/color_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/common.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/encodings_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/envmap_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/envmap_common_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/envmap_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/fog_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/fog_pars_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/fog_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/gradientmap_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lights_pars_begin.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/envmap_physical_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lights_toon_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lights_toon_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_begin.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_maps.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_end.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/map_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/normal_fragment_begin.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/normal_fragment_maps.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/normal_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/normal_pars_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/normal_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_begin.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_maps.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/output_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/packing.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/project_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/dithering_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/dithering_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/skinning_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/transmission_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/transmission_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/uv_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/uv2_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/background.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/cube.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/depth.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/distanceRGBA.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/equirect.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/linedashed.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/meshbasic.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/meshlambert.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/meshmatcap.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/meshnormal.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/meshphong.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/meshphysical.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/meshtoon.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/points.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/shadow.glsl.js", "node_modules/three/src/renderers/shaders/ShaderLib/sprite.glsl.js", "node_modules/three/src/renderers/shaders/ShaderChunk.js", "node_modules/three/src/renderers/shaders/UniformsLib.js", "node_modules/three/src/renderers/shaders/ShaderLib.js", "node_modules/three/src/renderers/webgl/WebGLBackground.js", "node_modules/three/src/renderers/webgl/WebGLBindingStates.js", "node_modules/three/src/renderers/webgl/WebGLBufferRenderer.js", "node_modules/three/src/renderers/webgl/WebGLCapabilities.js", "node_modules/three/src/renderers/webgl/WebGLClipping.js", "node_modules/three/src/renderers/webgl/WebGLCubeMaps.js", "node_modules/three/src/cameras/OrthographicCamera.js", "node_modules/three/src/materials/RawShaderMaterial.js", "node_modules/three/src/extras/PMREMGenerator.js", "node_modules/three/src/renderers/webgl/WebGLCubeUVMaps.js", "node_modules/three/src/renderers/webgl/WebGLExtensions.js", "node_modules/three/src/renderers/webgl/WebGLGeometries.js", "node_modules/three/src/renderers/webgl/WebGLIndexedBufferRenderer.js", "node_modules/three/src/renderers/webgl/WebGLInfo.js", "node_modules/three/src/textures/DataTexture2DArray.js", "node_modules/three/src/renderers/webgl/WebGLMorphtargets.js", "node_modules/three/src/renderers/webgl/WebGLObjects.js", "node_modules/three/src/textures/DataTexture3D.js", "node_modules/three/src/renderers/webgl/WebGLUniforms.js", "node_modules/three/src/renderers/webgl/WebGLShader.js", "node_modules/three/src/renderers/webgl/WebGLProgram.js", "node_modules/three/src/renderers/webgl/WebGLPrograms.js", "node_modules/three/src/renderers/webgl/WebGLProperties.js", "node_modules/three/src/renderers/webgl/WebGLRenderLists.js", "node_modules/three/src/renderers/webgl/WebGLLights.js", "node_modules/three/src/renderers/webgl/WebGLRenderStates.js", "node_modules/three/src/materials/MeshDepthMaterial.js", "node_modules/three/src/materials/MeshDistanceMaterial.js", "node_modules/three/src/renderers/shaders/ShaderLib/vsm.glsl.js", "node_modules/three/src/renderers/webgl/WebGLShadowMap.js", "node_modules/three/src/renderers/webgl/WebGLState.js", "node_modules/three/src/renderers/webgl/WebGLTextures.js", "node_modules/three/src/renderers/webgl/WebGLUtils.js", "node_modules/three/src/cameras/ArrayCamera.js", "node_modules/three/src/objects/Group.js", "node_modules/three/src/renderers/webxr/WebXRController.js", "node_modules/three/src/renderers/webxr/WebXRManager.js", "node_modules/three/src/renderers/webgl/WebGLMaterials.js", "node_modules/three/src/renderers/WebGLRenderer.js", "node_modules/three/src/scenes/Scene.js", "node_modules/three/src/materials/MeshStandardMaterial.js", "node_modules/three/src/lights/Light.js", "node_modules/three/src/lights/LightShadow.js", "node_modules/three/src/lights/DirectionalLightShadow.js", "node_modules/three/src/lights/DirectionalLight.js", "node_modules/three/src/lights/AmbientLight.js", "node_modules/three/src/Three.js", "node_modules/three/examples/jsm/webxr/VRButton.js", "node_modules/webxr-polyfill/src/lib/global.js", "node_modules/webxr-polyfill/src/lib/EventTarget.js", "node_modules/gl-matrix/src/gl-matrix/common.js", "node_modules/gl-matrix/src/gl-matrix/mat4.js", "node_modules/gl-matrix/src/gl-matrix/vec3.js", "node_modules/gl-matrix/src/gl-matrix/mat3.js", "node_modules/gl-matrix/src/gl-matrix/vec4.js", "node_modules/gl-matrix/src/gl-matrix/quat.js", "node_modules/webxr-polyfill/src/api/XRRigidTransform.js", "node_modules/webxr-polyfill/src/api/XRSpace.js", "node_modules/webxr-polyfill/src/api/XRReferenceSpace.js", "node_modules/webxr-polyfill/src/api/XRSystem.js", "node_modules/webxr-polyfill/src/lib/now.js", "node_modules/webxr-polyfill/src/api/XRPose.js", "node_modules/webxr-polyfill/src/api/XRViewerPose.js", "node_modules/webxr-polyfill/src/api/XRViewport.js", "node_modules/webxr-polyfill/src/api/XRView.js", "node_modules/webxr-polyfill/src/api/XRFrame.js", "node_modules/webxr-polyfill/src/api/XRRenderState.js", "node_modules/webxr-polyfill/src/api/XRInputSourceEvent.js", "node_modules/webxr-polyfill/src/api/XRSessionEvent.js", "node_modules/webxr-polyfill/src/api/XRInputSourcesChangeEvent.js", "node_modules/webxr-polyfill/src/api/XRSession.js", "node_modules/webxr-polyfill/src/api/XRInputSource.js", "node_modules/webxr-polyfill/src/constants.js", "node_modules/webxr-polyfill/src/api/XRWebGLLayer.js", "node_modules/webxr-polyfill/src/api/XRReferenceSpaceEvent.js", "node_modules/webxr-polyfill/src/api/index.js", "node_modules/webxr-polyfill/src/polyfill-globals.js", "node_modules/webxr-polyfill/src/utils.js", "node_modules/webxr-polyfill/src/devices/CardboardXRDevice.js", "node_modules/webxr-polyfill/src/devices/XRDevice.js", "node_modules/webxr-polyfill/src/devices/GamepadMappings.js", "node_modules/webxr-polyfill/src/lib/OrientationArmModel.js", "node_modules/webxr-polyfill/src/devices/GamepadXRInputSource.js", "node_modules/webxr-polyfill/src/devices/WebVRDevice.js", "node_modules/webxr-polyfill/src/devices/InlineDevice.js", "node_modules/webxr-polyfill/src/devices.js", "node_modules/webxr-polyfill/src/WebXRPolyfill.js", "node_modules/gl-matrix/lib/gl-matrix/common.js", "node_modules/gl-matrix/lib/gl-matrix/mat4.js", "node_modules/holoplay-core/dist/holoplaycore.module.js", "node_modules/holoplay-webxr/src/HoloPlayConfig.js", "node_modules/holoplay-webxr/src/HoloPlayXRWebGLLayer.js", "node_modules/holoplay-webxr/src/HoloPlayXRDevice.js", "node_modules/holoplay-webxr/src/HoloPlayWebXRPolyfill.js", "index.js"],
  "sourcesContent": ["/**\n * @license\n * cardboard-vr-display\n * Copyright (c) 2015-2017 Google\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * gl-preserve-state\n * Copyright (c) 2016, Brandon Jones.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @license\n * webvr-polyfill-dpdb\n * Copyright (c) 2015-2017 Google\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * nosleep.js\n * Copyright (c) 2017, Rich Tibbett\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.CardboardVRDisplay = factory());\n}(this, (function () { 'use strict';\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar MIN_TIMESTEP = 0.001;\nvar MAX_TIMESTEP = 1;\nvar dataUri = function dataUri(mimeType, svg) {\n  return 'data:' + mimeType + ',' + encodeURIComponent(svg);\n};\n\nvar lerp = function lerp(a, b, t) {\n  return a + (b - a) * t;\n};\nvar isIOS = function () {\n  var isIOS = /iPad|iPhone|iPod/.test(navigator.platform);\n  return function () {\n    return isIOS;\n  };\n}();\nvar isWebViewAndroid = function () {\n  var isWebViewAndroid = navigator.userAgent.indexOf('Version') !== -1 && navigator.userAgent.indexOf('Android') !== -1 && navigator.userAgent.indexOf('Chrome') !== -1;\n  return function () {\n    return isWebViewAndroid;\n  };\n}();\nvar isSafari = function () {\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  return function () {\n    return isSafari;\n  };\n}();\nvar isFirefoxAndroid = function () {\n  var isFirefoxAndroid = navigator.userAgent.indexOf('Firefox') !== -1 && navigator.userAgent.indexOf('Android') !== -1;\n  return function () {\n    return isFirefoxAndroid;\n  };\n}();\nvar getChromeVersion = function () {\n  var match = navigator.userAgent.match(/.*Chrome\\/([0-9]+)/);\n  var value = match ? parseInt(match[1], 10) : null;\n  return function () {\n    return value;\n  };\n}();\nvar isSafariWithoutDeviceMotion = function () {\n  var value = false;\n  value = isIOS() && isSafari() && navigator.userAgent.indexOf('13_4') !== -1;\n  return function () {\n    return value;\n  };\n}();\nvar isChromeWithoutDeviceMotion = function () {\n  var value = false;\n  if (getChromeVersion() === 65) {\n    var match = navigator.userAgent.match(/.*Chrome\\/([0-9\\.]*)/);\n    if (match) {\n      var _match$1$split = match[1].split('.'),\n          _match$1$split2 = slicedToArray(_match$1$split, 4),\n          major = _match$1$split2[0],\n          minor = _match$1$split2[1],\n          branch = _match$1$split2[2],\n          build = _match$1$split2[3];\n      value = parseInt(branch, 10) === 3325 && parseInt(build, 10) < 148;\n    }\n  }\n  return function () {\n    return value;\n  };\n}();\nvar isR7 = function () {\n  var isR7 = navigator.userAgent.indexOf('R7 Build') !== -1;\n  return function () {\n    return isR7;\n  };\n}();\nvar isLandscapeMode = function isLandscapeMode() {\n  var rtn = window.orientation == 90 || window.orientation == -90;\n  return isR7() ? !rtn : rtn;\n};\nvar isTimestampDeltaValid = function isTimestampDeltaValid(timestampDeltaS) {\n  if (isNaN(timestampDeltaS)) {\n    return false;\n  }\n  if (timestampDeltaS <= MIN_TIMESTEP) {\n    return false;\n  }\n  if (timestampDeltaS > MAX_TIMESTEP) {\n    return false;\n  }\n  return true;\n};\nvar getScreenWidth = function getScreenWidth() {\n  return Math.max(window.screen.width, window.screen.height) * window.devicePixelRatio;\n};\nvar getScreenHeight = function getScreenHeight() {\n  return Math.min(window.screen.width, window.screen.height) * window.devicePixelRatio;\n};\nvar requestFullscreen = function requestFullscreen(element) {\n  if (isWebViewAndroid()) {\n    return false;\n  }\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else {\n    return false;\n  }\n  return true;\n};\nvar exitFullscreen = function exitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else {\n    return false;\n  }\n  return true;\n};\nvar getFullscreenElement = function getFullscreenElement() {\n  return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n};\nvar linkProgram = function linkProgram(gl, vertexSource, fragmentSource, attribLocationMap) {\n  var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vertexSource);\n  gl.compileShader(vertexShader);\n  var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, fragmentSource);\n  gl.compileShader(fragmentShader);\n  var program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  for (var attribName in attribLocationMap) {\n    gl.bindAttribLocation(program, attribLocationMap[attribName], attribName);\n  }gl.linkProgram(program);\n  gl.deleteShader(vertexShader);\n  gl.deleteShader(fragmentShader);\n  return program;\n};\nvar getProgramUniforms = function getProgramUniforms(gl, program) {\n  var uniforms = {};\n  var uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformName = '';\n  for (var i = 0; i < uniformCount; i++) {\n    var uniformInfo = gl.getActiveUniform(program, i);\n    uniformName = uniformInfo.name.replace('[0]', '');\n    uniforms[uniformName] = gl.getUniformLocation(program, uniformName);\n  }\n  return uniforms;\n};\nvar orthoMatrix = function orthoMatrix(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right),\n      bt = 1 / (bottom - top),\n      nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n};\n\nvar isMobile = function isMobile() {\n  var check = false;\n  (function (a) {\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n  })(navigator.userAgent || navigator.vendor || window.opera);\n  return check;\n};\nvar extend = function extend(dest, src) {\n  for (var key in src) {\n    if (src.hasOwnProperty(key)) {\n      dest[key] = src[key];\n    }\n  }\n  return dest;\n};\nvar safariCssSizeWorkaround = function safariCssSizeWorkaround(canvas) {\n  if (isIOS()) {\n    var width = canvas.style.width;\n    var height = canvas.style.height;\n    canvas.style.width = parseInt(width) + 1 + 'px';\n    canvas.style.height = parseInt(height) + 'px';\n    setTimeout(function () {\n      canvas.style.width = width;\n      canvas.style.height = height;\n    }, 100);\n  }\n  window.canvas = canvas;\n};\nvar frameDataFromPose = function () {\n  var piOver180 = Math.PI / 180.0;\n  var rad45 = Math.PI * 0.25;\n  function mat4_perspectiveFromFieldOfView(out, fov, near, far) {\n    var upTan = Math.tan(fov ? fov.upDegrees * piOver180 : rad45),\n        downTan = Math.tan(fov ? fov.downDegrees * piOver180 : rad45),\n        leftTan = Math.tan(fov ? fov.leftDegrees * piOver180 : rad45),\n        rightTan = Math.tan(fov ? fov.rightDegrees * piOver180 : rad45),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = (upTan - downTan) * yScale * 0.5;\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = far * near / (near - far);\n    out[15] = 0.0;\n    return out;\n  }\n  function mat4_fromRotationTranslation(out, q, v) {\n    var x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  function mat4_translate(out, a, v) {\n    var x = v[0],\n        y = v[1],\n        z = v[2],\n        a00,\n        a01,\n        a02,\n        a03,\n        a10,\n        a11,\n        a12,\n        a13,\n        a20,\n        a21,\n        a22,\n        a23;\n    if (a === out) {\n      out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n      out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n      out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n      out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n      a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n      a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n      a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n      out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\n      out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\n      out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\n      out[12] = a00 * x + a10 * y + a20 * z + a[12];\n      out[13] = a01 * x + a11 * y + a21 * z + a[13];\n      out[14] = a02 * x + a12 * y + a22 * z + a[14];\n      out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n    return out;\n  }\n  function mat4_invert(out, a) {\n    var a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11],\n        a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15],\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n    det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) {\n      return null;\n    }\n    det = 1.0 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n    return out;\n  }\n  var defaultOrientation = new Float32Array([0, 0, 0, 1]);\n  var defaultPosition = new Float32Array([0, 0, 0]);\n  function updateEyeMatrices(projection, view, pose, fov, offset, vrDisplay) {\n    mat4_perspectiveFromFieldOfView(projection, fov || null, vrDisplay.depthNear, vrDisplay.depthFar);\n    var orientation = pose.orientation || defaultOrientation;\n    var position = pose.position || defaultPosition;\n    mat4_fromRotationTranslation(view, orientation, position);\n    if (offset) mat4_translate(view, view, offset);\n    mat4_invert(view, view);\n  }\n  return function (frameData, pose, vrDisplay) {\n    if (!frameData || !pose) return false;\n    frameData.pose = pose;\n    frameData.timestamp = pose.timestamp;\n    updateEyeMatrices(frameData.leftProjectionMatrix, frameData.leftViewMatrix, pose, vrDisplay._getFieldOfView(\"left\"), vrDisplay._getEyeOffset(\"left\"), vrDisplay);\n    updateEyeMatrices(frameData.rightProjectionMatrix, frameData.rightViewMatrix, pose, vrDisplay._getFieldOfView(\"right\"), vrDisplay._getEyeOffset(\"right\"), vrDisplay);\n    return true;\n  };\n}();\nvar isInsideCrossOriginIFrame = function isInsideCrossOriginIFrame() {\n  var isFramed = window.self !== window.top;\n  var refOrigin = getOriginFromUrl(document.referrer);\n  var thisOrigin = getOriginFromUrl(window.location.href);\n  return isFramed && refOrigin !== thisOrigin;\n};\nvar getOriginFromUrl = function getOriginFromUrl(url) {\n  var domainIdx;\n  var protoSepIdx = url.indexOf(\"://\");\n  if (protoSepIdx !== -1) {\n    domainIdx = protoSepIdx + 3;\n  } else {\n    domainIdx = 0;\n  }\n  var domainEndIdx = url.indexOf('/', domainIdx);\n  if (domainEndIdx === -1) {\n    domainEndIdx = url.length;\n  }\n  return url.substring(0, domainEndIdx);\n};\nvar getQuaternionAngle = function getQuaternionAngle(quat) {\n  if (quat.w > 1) {\n    console.warn('getQuaternionAngle: w > 1');\n    return 0;\n  }\n  var angle = 2 * Math.acos(quat.w);\n  return angle;\n};\nvar warnOnce = function () {\n  var observedWarnings = {};\n  return function (key, message) {\n    if (observedWarnings[key] === undefined) {\n      console.warn('webvr-polyfill: ' + message);\n      observedWarnings[key] = true;\n    }\n  };\n}();\nvar deprecateWarning = function deprecateWarning(deprecated, suggested) {\n  var alternative = suggested ? 'Please use ' + suggested + ' instead.' : '';\n  warnOnce(deprecated, deprecated + ' has been deprecated. ' + 'This may not work on native WebVR displays. ' + alternative);\n};\n\nfunction WGLUPreserveGLState(gl, bindings, callback) {\n  if (!bindings) {\n    callback(gl);\n    return;\n  }\n  var boundValues = [];\n  var activeTexture = null;\n  for (var i = 0; i < bindings.length; ++i) {\n    var binding = bindings[i];\n    switch (binding) {\n      case gl.TEXTURE_BINDING_2D:\n      case gl.TEXTURE_BINDING_CUBE_MAP:\n        var textureUnit = bindings[++i];\n        if (textureUnit < gl.TEXTURE0 || textureUnit > gl.TEXTURE31) {\n          console.error(\"TEXTURE_BINDING_2D or TEXTURE_BINDING_CUBE_MAP must be followed by a valid texture unit\");\n          boundValues.push(null, null);\n          break;\n        }\n        if (!activeTexture) {\n          activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\n        }\n        gl.activeTexture(textureUnit);\n        boundValues.push(gl.getParameter(binding), null);\n        break;\n      case gl.ACTIVE_TEXTURE:\n        activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\n        boundValues.push(null);\n        break;\n      default:\n        boundValues.push(gl.getParameter(binding));\n        break;\n    }\n  }\n  callback(gl);\n  for (var i = 0; i < bindings.length; ++i) {\n    var binding = bindings[i];\n    var boundValue = boundValues[i];\n    switch (binding) {\n      case gl.ACTIVE_TEXTURE:\n        break;\n      case gl.ARRAY_BUFFER_BINDING:\n        gl.bindBuffer(gl.ARRAY_BUFFER, boundValue);\n        break;\n      case gl.COLOR_CLEAR_VALUE:\n        gl.clearColor(boundValue[0], boundValue[1], boundValue[2], boundValue[3]);\n        break;\n      case gl.COLOR_WRITEMASK:\n        gl.colorMask(boundValue[0], boundValue[1], boundValue[2], boundValue[3]);\n        break;\n      case gl.CURRENT_PROGRAM:\n        gl.useProgram(boundValue);\n        break;\n      case gl.ELEMENT_ARRAY_BUFFER_BINDING:\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, boundValue);\n        break;\n      case gl.FRAMEBUFFER_BINDING:\n        gl.bindFramebuffer(gl.FRAMEBUFFER, boundValue);\n        break;\n      case gl.RENDERBUFFER_BINDING:\n        gl.bindRenderbuffer(gl.RENDERBUFFER, boundValue);\n        break;\n      case gl.TEXTURE_BINDING_2D:\n        var textureUnit = bindings[++i];\n        if (textureUnit < gl.TEXTURE0 || textureUnit > gl.TEXTURE31)\n          break;\n        gl.activeTexture(textureUnit);\n        gl.bindTexture(gl.TEXTURE_2D, boundValue);\n        break;\n      case gl.TEXTURE_BINDING_CUBE_MAP:\n        var textureUnit = bindings[++i];\n        if (textureUnit < gl.TEXTURE0 || textureUnit > gl.TEXTURE31)\n          break;\n        gl.activeTexture(textureUnit);\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, boundValue);\n        break;\n      case gl.VIEWPORT:\n        gl.viewport(boundValue[0], boundValue[1], boundValue[2], boundValue[3]);\n        break;\n      case gl.BLEND:\n      case gl.CULL_FACE:\n      case gl.DEPTH_TEST:\n      case gl.SCISSOR_TEST:\n      case gl.STENCIL_TEST:\n        if (boundValue) {\n          gl.enable(binding);\n        } else {\n          gl.disable(binding);\n        }\n        break;\n      default:\n        console.log(\"No GL restore behavior for 0x\" + binding.toString(16));\n        break;\n    }\n    if (activeTexture) {\n      gl.activeTexture(activeTexture);\n    }\n  }\n}\nvar glPreserveState = WGLUPreserveGLState;\n\nvar distortionVS = ['attribute vec2 position;', 'attribute vec3 texCoord;', 'varying vec2 vTexCoord;', 'uniform vec4 viewportOffsetScale[2];', 'void main() {', '  vec4 viewport = viewportOffsetScale[int(texCoord.z)];', '  vTexCoord = (texCoord.xy * viewport.zw) + viewport.xy;', '  gl_Position = vec4( position, 1.0, 1.0 );', '}'].join('\\n');\nvar distortionFS = ['precision mediump float;', 'uniform sampler2D diffuse;', 'varying vec2 vTexCoord;', 'void main() {', '  gl_FragColor = texture2D(diffuse, vTexCoord);', '}'].join('\\n');\nfunction CardboardDistorter(gl, cardboardUI, bufferScale, dirtySubmitFrameBindings) {\n  this.gl = gl;\n  this.cardboardUI = cardboardUI;\n  this.bufferScale = bufferScale;\n  this.dirtySubmitFrameBindings = dirtySubmitFrameBindings;\n  this.ctxAttribs = gl.getContextAttributes();\n  this.instanceExt = gl.getExtension('ANGLE_instanced_arrays');\n  this.meshWidth = 20;\n  this.meshHeight = 20;\n  this.bufferWidth = gl.drawingBufferWidth;\n  this.bufferHeight = gl.drawingBufferHeight;\n  this.realBindFramebuffer = gl.bindFramebuffer;\n  this.realEnable = gl.enable;\n  this.realDisable = gl.disable;\n  this.realColorMask = gl.colorMask;\n  this.realClearColor = gl.clearColor;\n  this.realViewport = gl.viewport;\n  if (!isIOS()) {\n    this.realCanvasWidth = Object.getOwnPropertyDescriptor(gl.canvas.__proto__, 'width');\n    this.realCanvasHeight = Object.getOwnPropertyDescriptor(gl.canvas.__proto__, 'height');\n  }\n  this.isPatched = false;\n  this.lastBoundFramebuffer = null;\n  this.cullFace = false;\n  this.depthTest = false;\n  this.blend = false;\n  this.scissorTest = false;\n  this.stencilTest = false;\n  this.viewport = [0, 0, 0, 0];\n  this.colorMask = [true, true, true, true];\n  this.clearColor = [0, 0, 0, 0];\n  this.attribs = {\n    position: 0,\n    texCoord: 1\n  };\n  this.program = linkProgram(gl, distortionVS, distortionFS, this.attribs);\n  this.uniforms = getProgramUniforms(gl, this.program);\n  this.viewportOffsetScale = new Float32Array(8);\n  this.setTextureBounds();\n  this.vertexBuffer = gl.createBuffer();\n  this.indexBuffer = gl.createBuffer();\n  this.indexCount = 0;\n  this.renderTarget = gl.createTexture();\n  this.framebuffer = gl.createFramebuffer();\n  this.depthStencilBuffer = null;\n  this.depthBuffer = null;\n  this.stencilBuffer = null;\n  if (this.ctxAttribs.depth && this.ctxAttribs.stencil) {\n    this.depthStencilBuffer = gl.createRenderbuffer();\n  } else if (this.ctxAttribs.depth) {\n    this.depthBuffer = gl.createRenderbuffer();\n  } else if (this.ctxAttribs.stencil) {\n    this.stencilBuffer = gl.createRenderbuffer();\n  }\n  this.patch();\n  this.onResize();\n}\nCardboardDistorter.prototype.destroy = function () {\n  var gl = this.gl;\n  this.unpatch();\n  gl.deleteProgram(this.program);\n  gl.deleteBuffer(this.vertexBuffer);\n  gl.deleteBuffer(this.indexBuffer);\n  gl.deleteTexture(this.renderTarget);\n  gl.deleteFramebuffer(this.framebuffer);\n  if (this.depthStencilBuffer) {\n    gl.deleteRenderbuffer(this.depthStencilBuffer);\n  }\n  if (this.depthBuffer) {\n    gl.deleteRenderbuffer(this.depthBuffer);\n  }\n  if (this.stencilBuffer) {\n    gl.deleteRenderbuffer(this.stencilBuffer);\n  }\n  if (this.cardboardUI) {\n    this.cardboardUI.destroy();\n  }\n};\nCardboardDistorter.prototype.onResize = function () {\n  var gl = this.gl;\n  var self = this;\n  var glState = [gl.RENDERBUFFER_BINDING, gl.TEXTURE_BINDING_2D, gl.TEXTURE0];\n  glPreserveState(gl, glState, function (gl) {\n    self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, null);\n    if (self.scissorTest) {\n      self.realDisable.call(gl, gl.SCISSOR_TEST);\n    }\n    self.realColorMask.call(gl, true, true, true, true);\n    self.realViewport.call(gl, 0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    self.realClearColor.call(gl, 0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, self.framebuffer);\n    gl.bindTexture(gl.TEXTURE_2D, self.renderTarget);\n    gl.texImage2D(gl.TEXTURE_2D, 0, self.ctxAttribs.alpha ? gl.RGBA : gl.RGB, self.bufferWidth, self.bufferHeight, 0, self.ctxAttribs.alpha ? gl.RGBA : gl.RGB, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, self.renderTarget, 0);\n    if (self.ctxAttribs.depth && self.ctxAttribs.stencil) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, self.depthStencilBuffer);\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, self.bufferWidth, self.bufferHeight);\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, self.depthStencilBuffer);\n    } else if (self.ctxAttribs.depth) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, self.depthBuffer);\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, self.bufferWidth, self.bufferHeight);\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, self.depthBuffer);\n    } else if (self.ctxAttribs.stencil) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, self.stencilBuffer);\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.STENCIL_INDEX8, self.bufferWidth, self.bufferHeight);\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.RENDERBUFFER, self.stencilBuffer);\n    }\n    if (!gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE) {\n      console.error('Framebuffer incomplete!');\n    }\n    self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, self.lastBoundFramebuffer);\n    if (self.scissorTest) {\n      self.realEnable.call(gl, gl.SCISSOR_TEST);\n    }\n    self.realColorMask.apply(gl, self.colorMask);\n    self.realViewport.apply(gl, self.viewport);\n    self.realClearColor.apply(gl, self.clearColor);\n  });\n  if (this.cardboardUI) {\n    this.cardboardUI.onResize();\n  }\n};\nCardboardDistorter.prototype.patch = function () {\n  if (this.isPatched) {\n    return;\n  }\n  var self = this;\n  var canvas = this.gl.canvas;\n  var gl = this.gl;\n  if (!isIOS()) {\n    canvas.width = getScreenWidth() * this.bufferScale;\n    canvas.height = getScreenHeight() * this.bufferScale;\n    Object.defineProperty(canvas, 'width', {\n      configurable: true,\n      enumerable: true,\n      get: function get() {\n        return self.bufferWidth;\n      },\n      set: function set(value) {\n        self.bufferWidth = value;\n        self.realCanvasWidth.set.call(canvas, value);\n        self.onResize();\n      }\n    });\n    Object.defineProperty(canvas, 'height', {\n      configurable: true,\n      enumerable: true,\n      get: function get() {\n        return self.bufferHeight;\n      },\n      set: function set(value) {\n        self.bufferHeight = value;\n        self.realCanvasHeight.set.call(canvas, value);\n        self.onResize();\n      }\n    });\n  }\n  this.lastBoundFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n  if (this.lastBoundFramebuffer == null) {\n    this.lastBoundFramebuffer = this.framebuffer;\n    this.gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n  }\n  this.gl.bindFramebuffer = function (target, framebuffer) {\n    self.lastBoundFramebuffer = framebuffer ? framebuffer : self.framebuffer;\n    self.realBindFramebuffer.call(gl, target, self.lastBoundFramebuffer);\n  };\n  this.cullFace = gl.getParameter(gl.CULL_FACE);\n  this.depthTest = gl.getParameter(gl.DEPTH_TEST);\n  this.blend = gl.getParameter(gl.BLEND);\n  this.scissorTest = gl.getParameter(gl.SCISSOR_TEST);\n  this.stencilTest = gl.getParameter(gl.STENCIL_TEST);\n  gl.enable = function (pname) {\n    switch (pname) {\n      case gl.CULL_FACE:\n        self.cullFace = true;break;\n      case gl.DEPTH_TEST:\n        self.depthTest = true;break;\n      case gl.BLEND:\n        self.blend = true;break;\n      case gl.SCISSOR_TEST:\n        self.scissorTest = true;break;\n      case gl.STENCIL_TEST:\n        self.stencilTest = true;break;\n    }\n    self.realEnable.call(gl, pname);\n  };\n  gl.disable = function (pname) {\n    switch (pname) {\n      case gl.CULL_FACE:\n        self.cullFace = false;break;\n      case gl.DEPTH_TEST:\n        self.depthTest = false;break;\n      case gl.BLEND:\n        self.blend = false;break;\n      case gl.SCISSOR_TEST:\n        self.scissorTest = false;break;\n      case gl.STENCIL_TEST:\n        self.stencilTest = false;break;\n    }\n    self.realDisable.call(gl, pname);\n  };\n  this.colorMask = gl.getParameter(gl.COLOR_WRITEMASK);\n  gl.colorMask = function (r, g, b, a) {\n    self.colorMask[0] = r;\n    self.colorMask[1] = g;\n    self.colorMask[2] = b;\n    self.colorMask[3] = a;\n    self.realColorMask.call(gl, r, g, b, a);\n  };\n  this.clearColor = gl.getParameter(gl.COLOR_CLEAR_VALUE);\n  gl.clearColor = function (r, g, b, a) {\n    self.clearColor[0] = r;\n    self.clearColor[1] = g;\n    self.clearColor[2] = b;\n    self.clearColor[3] = a;\n    self.realClearColor.call(gl, r, g, b, a);\n  };\n  this.viewport = gl.getParameter(gl.VIEWPORT);\n  gl.viewport = function (x, y, w, h) {\n    self.viewport[0] = x;\n    self.viewport[1] = y;\n    self.viewport[2] = w;\n    self.viewport[3] = h;\n    self.realViewport.call(gl, x, y, w, h);\n  };\n  this.isPatched = true;\n  safariCssSizeWorkaround(canvas);\n};\nCardboardDistorter.prototype.unpatch = function () {\n  if (!this.isPatched) {\n    return;\n  }\n  var gl = this.gl;\n  var canvas = this.gl.canvas;\n  if (!isIOS()) {\n    Object.defineProperty(canvas, 'width', this.realCanvasWidth);\n    Object.defineProperty(canvas, 'height', this.realCanvasHeight);\n  }\n  canvas.width = this.bufferWidth;\n  canvas.height = this.bufferHeight;\n  gl.bindFramebuffer = this.realBindFramebuffer;\n  gl.enable = this.realEnable;\n  gl.disable = this.realDisable;\n  gl.colorMask = this.realColorMask;\n  gl.clearColor = this.realClearColor;\n  gl.viewport = this.realViewport;\n  if (this.lastBoundFramebuffer == this.framebuffer) {\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n  this.isPatched = false;\n  setTimeout(function () {\n    safariCssSizeWorkaround(canvas);\n  }, 1);\n};\nCardboardDistorter.prototype.setTextureBounds = function (leftBounds, rightBounds) {\n  if (!leftBounds) {\n    leftBounds = [0, 0, 0.5, 1];\n  }\n  if (!rightBounds) {\n    rightBounds = [0.5, 0, 0.5, 1];\n  }\n  this.viewportOffsetScale[0] = leftBounds[0];\n  this.viewportOffsetScale[1] = leftBounds[1];\n  this.viewportOffsetScale[2] = leftBounds[2];\n  this.viewportOffsetScale[3] = leftBounds[3];\n  this.viewportOffsetScale[4] = rightBounds[0];\n  this.viewportOffsetScale[5] = rightBounds[1];\n  this.viewportOffsetScale[6] = rightBounds[2];\n  this.viewportOffsetScale[7] = rightBounds[3];\n};\nCardboardDistorter.prototype.submitFrame = function () {\n  var gl = this.gl;\n  var self = this;\n  var glState = [];\n  if (!this.dirtySubmitFrameBindings) {\n    glState.push(gl.CURRENT_PROGRAM, gl.ARRAY_BUFFER_BINDING, gl.ELEMENT_ARRAY_BUFFER_BINDING, gl.TEXTURE_BINDING_2D, gl.TEXTURE0);\n  }\n  glPreserveState(gl, glState, function (gl) {\n    self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, null);\n    var positionDivisor = 0;\n    var texCoordDivisor = 0;\n    if (self.instanceExt) {\n      positionDivisor = gl.getVertexAttrib(self.attribs.position, self.instanceExt.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE);\n      texCoordDivisor = gl.getVertexAttrib(self.attribs.texCoord, self.instanceExt.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE);\n    }\n    if (self.cullFace) {\n      self.realDisable.call(gl, gl.CULL_FACE);\n    }\n    if (self.depthTest) {\n      self.realDisable.call(gl, gl.DEPTH_TEST);\n    }\n    if (self.blend) {\n      self.realDisable.call(gl, gl.BLEND);\n    }\n    if (self.scissorTest) {\n      self.realDisable.call(gl, gl.SCISSOR_TEST);\n    }\n    if (self.stencilTest) {\n      self.realDisable.call(gl, gl.STENCIL_TEST);\n    }\n    self.realColorMask.call(gl, true, true, true, true);\n    self.realViewport.call(gl, 0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    if (self.ctxAttribs.alpha || isIOS()) {\n      self.realClearColor.call(gl, 0, 0, 0, 1);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    gl.useProgram(self.program);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, self.indexBuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, self.vertexBuffer);\n    gl.enableVertexAttribArray(self.attribs.position);\n    gl.enableVertexAttribArray(self.attribs.texCoord);\n    gl.vertexAttribPointer(self.attribs.position, 2, gl.FLOAT, false, 20, 0);\n    gl.vertexAttribPointer(self.attribs.texCoord, 3, gl.FLOAT, false, 20, 8);\n    if (self.instanceExt) {\n      if (positionDivisor != 0) {\n        self.instanceExt.vertexAttribDivisorANGLE(self.attribs.position, 0);\n      }\n      if (texCoordDivisor != 0) {\n        self.instanceExt.vertexAttribDivisorANGLE(self.attribs.texCoord, 0);\n      }\n    }\n    gl.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(self.uniforms.diffuse, 0);\n    gl.bindTexture(gl.TEXTURE_2D, self.renderTarget);\n    gl.uniform4fv(self.uniforms.viewportOffsetScale, self.viewportOffsetScale);\n    gl.drawElements(gl.TRIANGLES, self.indexCount, gl.UNSIGNED_SHORT, 0);\n    if (self.cardboardUI) {\n      self.cardboardUI.renderNoState();\n    }\n    self.realBindFramebuffer.call(self.gl, gl.FRAMEBUFFER, self.framebuffer);\n    if (!self.ctxAttribs.preserveDrawingBuffer) {\n      self.realClearColor.call(gl, 0, 0, 0, 0);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    if (!self.dirtySubmitFrameBindings) {\n      self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, self.lastBoundFramebuffer);\n    }\n    if (self.cullFace) {\n      self.realEnable.call(gl, gl.CULL_FACE);\n    }\n    if (self.depthTest) {\n      self.realEnable.call(gl, gl.DEPTH_TEST);\n    }\n    if (self.blend) {\n      self.realEnable.call(gl, gl.BLEND);\n    }\n    if (self.scissorTest) {\n      self.realEnable.call(gl, gl.SCISSOR_TEST);\n    }\n    if (self.stencilTest) {\n      self.realEnable.call(gl, gl.STENCIL_TEST);\n    }\n    self.realColorMask.apply(gl, self.colorMask);\n    self.realViewport.apply(gl, self.viewport);\n    if (self.ctxAttribs.alpha || !self.ctxAttribs.preserveDrawingBuffer) {\n      self.realClearColor.apply(gl, self.clearColor);\n    }\n    if (self.instanceExt) {\n      if (positionDivisor != 0) {\n        self.instanceExt.vertexAttribDivisorANGLE(self.attribs.position, positionDivisor);\n      }\n      if (texCoordDivisor != 0) {\n        self.instanceExt.vertexAttribDivisorANGLE(self.attribs.texCoord, texCoordDivisor);\n      }\n    }\n  });\n  if (isIOS()) {\n    var canvas = gl.canvas;\n    if (canvas.width != self.bufferWidth || canvas.height != self.bufferHeight) {\n      self.bufferWidth = canvas.width;\n      self.bufferHeight = canvas.height;\n      self.onResize();\n    }\n  }\n};\nCardboardDistorter.prototype.updateDeviceInfo = function (deviceInfo) {\n  var gl = this.gl;\n  var self = this;\n  var glState = [gl.ARRAY_BUFFER_BINDING, gl.ELEMENT_ARRAY_BUFFER_BINDING];\n  glPreserveState(gl, glState, function (gl) {\n    var vertices = self.computeMeshVertices_(self.meshWidth, self.meshHeight, deviceInfo);\n    gl.bindBuffer(gl.ARRAY_BUFFER, self.vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    if (!self.indexCount) {\n      var indices = self.computeMeshIndices_(self.meshWidth, self.meshHeight);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, self.indexBuffer);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n      self.indexCount = indices.length;\n    }\n  });\n};\nCardboardDistorter.prototype.computeMeshVertices_ = function (width, height, deviceInfo) {\n  var vertices = new Float32Array(2 * width * height * 5);\n  var lensFrustum = deviceInfo.getLeftEyeVisibleTanAngles();\n  var noLensFrustum = deviceInfo.getLeftEyeNoLensTanAngles();\n  var viewport = deviceInfo.getLeftEyeVisibleScreenRect(noLensFrustum);\n  var vidx = 0;\n  for (var e = 0; e < 2; e++) {\n    for (var j = 0; j < height; j++) {\n      for (var i = 0; i < width; i++, vidx++) {\n        var u = i / (width - 1);\n        var v = j / (height - 1);\n        var s = u;\n        var t = v;\n        var x = lerp(lensFrustum[0], lensFrustum[2], u);\n        var y = lerp(lensFrustum[3], lensFrustum[1], v);\n        var d = Math.sqrt(x * x + y * y);\n        var r = deviceInfo.distortion.distortInverse(d);\n        var p = x * r / d;\n        var q = y * r / d;\n        u = (p - noLensFrustum[0]) / (noLensFrustum[2] - noLensFrustum[0]);\n        v = (q - noLensFrustum[3]) / (noLensFrustum[1] - noLensFrustum[3]);\n        u = (viewport.x + u * viewport.width - 0.5) * 2.0;\n        v = (viewport.y + v * viewport.height - 0.5) * 2.0;\n        vertices[vidx * 5 + 0] = u;\n        vertices[vidx * 5 + 1] = v;\n        vertices[vidx * 5 + 2] = s;\n        vertices[vidx * 5 + 3] = t;\n        vertices[vidx * 5 + 4] = e;\n      }\n    }\n    var w = lensFrustum[2] - lensFrustum[0];\n    lensFrustum[0] = -(w + lensFrustum[0]);\n    lensFrustum[2] = w - lensFrustum[2];\n    w = noLensFrustum[2] - noLensFrustum[0];\n    noLensFrustum[0] = -(w + noLensFrustum[0]);\n    noLensFrustum[2] = w - noLensFrustum[2];\n    viewport.x = 1 - (viewport.x + viewport.width);\n  }\n  return vertices;\n};\nCardboardDistorter.prototype.computeMeshIndices_ = function (width, height) {\n  var indices = new Uint16Array(2 * (width - 1) * (height - 1) * 6);\n  var halfwidth = width / 2;\n  var halfheight = height / 2;\n  var vidx = 0;\n  var iidx = 0;\n  for (var e = 0; e < 2; e++) {\n    for (var j = 0; j < height; j++) {\n      for (var i = 0; i < width; i++, vidx++) {\n        if (i == 0 || j == 0) continue;\n        if (i <= halfwidth == j <= halfheight) {\n          indices[iidx++] = vidx;\n          indices[iidx++] = vidx - width - 1;\n          indices[iidx++] = vidx - width;\n          indices[iidx++] = vidx - width - 1;\n          indices[iidx++] = vidx;\n          indices[iidx++] = vidx - 1;\n        } else {\n          indices[iidx++] = vidx - 1;\n          indices[iidx++] = vidx - width;\n          indices[iidx++] = vidx;\n          indices[iidx++] = vidx - width;\n          indices[iidx++] = vidx - 1;\n          indices[iidx++] = vidx - width - 1;\n        }\n      }\n    }\n  }\n  return indices;\n};\nCardboardDistorter.prototype.getOwnPropertyDescriptor_ = function (proto, attrName) {\n  var descriptor = Object.getOwnPropertyDescriptor(proto, attrName);\n  if (descriptor.get === undefined || descriptor.set === undefined) {\n    descriptor.configurable = true;\n    descriptor.enumerable = true;\n    descriptor.get = function () {\n      return this.getAttribute(attrName);\n    };\n    descriptor.set = function (val) {\n      this.setAttribute(attrName, val);\n    };\n  }\n  return descriptor;\n};\n\nvar uiVS = ['attribute vec2 position;', 'uniform mat4 projectionMat;', 'void main() {', '  gl_Position = projectionMat * vec4( position, -1.0, 1.0 );', '}'].join('\\n');\nvar uiFS = ['precision mediump float;', 'uniform vec4 color;', 'void main() {', '  gl_FragColor = color;', '}'].join('\\n');\nvar DEG2RAD = Math.PI / 180.0;\nvar kAnglePerGearSection = 60;\nvar kOuterRimEndAngle = 12;\nvar kInnerRimBeginAngle = 20;\nvar kOuterRadius = 1;\nvar kMiddleRadius = 0.75;\nvar kInnerRadius = 0.3125;\nvar kCenterLineThicknessDp = 4;\nvar kButtonWidthDp = 28;\nvar kTouchSlopFactor = 1.5;\nfunction CardboardUI(gl) {\n  this.gl = gl;\n  this.attribs = {\n    position: 0\n  };\n  this.program = linkProgram(gl, uiVS, uiFS, this.attribs);\n  this.uniforms = getProgramUniforms(gl, this.program);\n  this.vertexBuffer = gl.createBuffer();\n  this.gearOffset = 0;\n  this.gearVertexCount = 0;\n  this.arrowOffset = 0;\n  this.arrowVertexCount = 0;\n  this.projMat = new Float32Array(16);\n  this.listener = null;\n  this.onResize();\n}\nCardboardUI.prototype.destroy = function () {\n  var gl = this.gl;\n  if (this.listener) {\n    gl.canvas.removeEventListener('click', this.listener, false);\n  }\n  gl.deleteProgram(this.program);\n  gl.deleteBuffer(this.vertexBuffer);\n};\nCardboardUI.prototype.listen = function (optionsCallback, backCallback) {\n  var canvas = this.gl.canvas;\n  this.listener = function (event) {\n    var midline = canvas.clientWidth / 2;\n    var buttonSize = kButtonWidthDp * kTouchSlopFactor;\n    if (event.clientX > midline - buttonSize && event.clientX < midline + buttonSize && event.clientY > canvas.clientHeight - buttonSize) {\n      optionsCallback(event);\n    }\n    else if (event.clientX < buttonSize && event.clientY < buttonSize) {\n        backCallback(event);\n      }\n  };\n  canvas.addEventListener('click', this.listener, false);\n};\nCardboardUI.prototype.onResize = function () {\n  var gl = this.gl;\n  var self = this;\n  var glState = [gl.ARRAY_BUFFER_BINDING];\n  glPreserveState(gl, glState, function (gl) {\n    var vertices = [];\n    var midline = gl.drawingBufferWidth / 2;\n    var physicalPixels = Math.max(screen.width, screen.height) * window.devicePixelRatio;\n    var scalingRatio = gl.drawingBufferWidth / physicalPixels;\n    var dps = scalingRatio * window.devicePixelRatio;\n    var lineWidth = kCenterLineThicknessDp * dps / 2;\n    var buttonSize = kButtonWidthDp * kTouchSlopFactor * dps;\n    var buttonScale = kButtonWidthDp * dps / 2;\n    var buttonBorder = (kButtonWidthDp * kTouchSlopFactor - kButtonWidthDp) * dps;\n    vertices.push(midline - lineWidth, buttonSize);\n    vertices.push(midline - lineWidth, gl.drawingBufferHeight);\n    vertices.push(midline + lineWidth, buttonSize);\n    vertices.push(midline + lineWidth, gl.drawingBufferHeight);\n    self.gearOffset = vertices.length / 2;\n    function addGearSegment(theta, r) {\n      var angle = (90 - theta) * DEG2RAD;\n      var x = Math.cos(angle);\n      var y = Math.sin(angle);\n      vertices.push(kInnerRadius * x * buttonScale + midline, kInnerRadius * y * buttonScale + buttonScale);\n      vertices.push(r * x * buttonScale + midline, r * y * buttonScale + buttonScale);\n    }\n    for (var i = 0; i <= 6; i++) {\n      var segmentTheta = i * kAnglePerGearSection;\n      addGearSegment(segmentTheta, kOuterRadius);\n      addGearSegment(segmentTheta + kOuterRimEndAngle, kOuterRadius);\n      addGearSegment(segmentTheta + kInnerRimBeginAngle, kMiddleRadius);\n      addGearSegment(segmentTheta + (kAnglePerGearSection - kInnerRimBeginAngle), kMiddleRadius);\n      addGearSegment(segmentTheta + (kAnglePerGearSection - kOuterRimEndAngle), kOuterRadius);\n    }\n    self.gearVertexCount = vertices.length / 2 - self.gearOffset;\n    self.arrowOffset = vertices.length / 2;\n    function addArrowVertex(x, y) {\n      vertices.push(buttonBorder + x, gl.drawingBufferHeight - buttonBorder - y);\n    }\n    var angledLineWidth = lineWidth / Math.sin(45 * DEG2RAD);\n    addArrowVertex(0, buttonScale);\n    addArrowVertex(buttonScale, 0);\n    addArrowVertex(buttonScale + angledLineWidth, angledLineWidth);\n    addArrowVertex(angledLineWidth, buttonScale + angledLineWidth);\n    addArrowVertex(angledLineWidth, buttonScale - angledLineWidth);\n    addArrowVertex(0, buttonScale);\n    addArrowVertex(buttonScale, buttonScale * 2);\n    addArrowVertex(buttonScale + angledLineWidth, buttonScale * 2 - angledLineWidth);\n    addArrowVertex(angledLineWidth, buttonScale - angledLineWidth);\n    addArrowVertex(0, buttonScale);\n    addArrowVertex(angledLineWidth, buttonScale - lineWidth);\n    addArrowVertex(kButtonWidthDp * dps, buttonScale - lineWidth);\n    addArrowVertex(angledLineWidth, buttonScale + lineWidth);\n    addArrowVertex(kButtonWidthDp * dps, buttonScale + lineWidth);\n    self.arrowVertexCount = vertices.length / 2 - self.arrowOffset;\n    gl.bindBuffer(gl.ARRAY_BUFFER, self.vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n  });\n};\nCardboardUI.prototype.render = function () {\n  var gl = this.gl;\n  var self = this;\n  var glState = [gl.CULL_FACE, gl.DEPTH_TEST, gl.BLEND, gl.SCISSOR_TEST, gl.STENCIL_TEST, gl.COLOR_WRITEMASK, gl.VIEWPORT, gl.CURRENT_PROGRAM, gl.ARRAY_BUFFER_BINDING];\n  glPreserveState(gl, glState, function (gl) {\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.BLEND);\n    gl.disable(gl.SCISSOR_TEST);\n    gl.disable(gl.STENCIL_TEST);\n    gl.colorMask(true, true, true, true);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    self.renderNoState();\n  });\n};\nCardboardUI.prototype.renderNoState = function () {\n  var gl = this.gl;\n  gl.useProgram(this.program);\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n  gl.enableVertexAttribArray(this.attribs.position);\n  gl.vertexAttribPointer(this.attribs.position, 2, gl.FLOAT, false, 8, 0);\n  gl.uniform4f(this.uniforms.color, 1.0, 1.0, 1.0, 1.0);\n  orthoMatrix(this.projMat, 0, gl.drawingBufferWidth, 0, gl.drawingBufferHeight, 0.1, 1024.0);\n  gl.uniformMatrix4fv(this.uniforms.projectionMat, false, this.projMat);\n  gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  gl.drawArrays(gl.TRIANGLE_STRIP, this.gearOffset, this.gearVertexCount);\n  gl.drawArrays(gl.TRIANGLE_STRIP, this.arrowOffset, this.arrowVertexCount);\n};\n\nfunction Distortion(coefficients) {\n  this.coefficients = coefficients;\n}\nDistortion.prototype.distortInverse = function (radius) {\n  var r0 = 0;\n  var r1 = 1;\n  var dr0 = radius - this.distort(r0);\n  while (Math.abs(r1 - r0) > 0.0001             ) {\n    var dr1 = radius - this.distort(r1);\n    var r2 = r1 - dr1 * ((r1 - r0) / (dr1 - dr0));\n    r0 = r1;\n    r1 = r2;\n    dr0 = dr1;\n  }\n  return r1;\n};\nDistortion.prototype.distort = function (radius) {\n  var r2 = radius * radius;\n  var ret = 0;\n  for (var i = 0; i < this.coefficients.length; i++) {\n    ret = r2 * (ret + this.coefficients[i]);\n  }\n  return (ret + 1) * radius;\n};\n\nvar degToRad = Math.PI / 180;\nvar radToDeg = 180 / Math.PI;\n\nvar Vector3 = function Vector3(x, y, z) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\nVector3.prototype = {\n  constructor: Vector3,\n  set: function set(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  },\n  copy: function copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  },\n  length: function length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  normalize: function normalize() {\n    var scalar = this.length();\n    if (scalar !== 0) {\n      var invScalar = 1 / scalar;\n      this.multiplyScalar(invScalar);\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n    return this;\n  },\n  multiplyScalar: function multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n  },\n  applyQuaternion: function applyQuaternion(q) {\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n    var qx = q.x;\n    var qy = q.y;\n    var qz = q.z;\n    var qw = q.w;\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z;\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return this;\n  },\n  dot: function dot(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  crossVectors: function crossVectors(a, b) {\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  }\n};\nvar Quaternion = function Quaternion(x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = w !== undefined ? w : 1;\n};\nQuaternion.prototype = {\n  constructor: Quaternion,\n  set: function set(x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  },\n  copy: function copy(quaternion) {\n    this.x = quaternion.x;\n    this.y = quaternion.y;\n    this.z = quaternion.z;\n    this.w = quaternion.w;\n    return this;\n  },\n  setFromEulerXYZ: function setFromEulerXYZ(x, y, z) {\n    var c1 = Math.cos(x / 2);\n    var c2 = Math.cos(y / 2);\n    var c3 = Math.cos(z / 2);\n    var s1 = Math.sin(x / 2);\n    var s2 = Math.sin(y / 2);\n    var s3 = Math.sin(z / 2);\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 + s1 * s2 * c3;\n    this.w = c1 * c2 * c3 - s1 * s2 * s3;\n    return this;\n  },\n  setFromEulerYXZ: function setFromEulerYXZ(x, y, z) {\n    var c1 = Math.cos(x / 2);\n    var c2 = Math.cos(y / 2);\n    var c3 = Math.cos(z / 2);\n    var s1 = Math.sin(x / 2);\n    var s2 = Math.sin(y / 2);\n    var s3 = Math.sin(z / 2);\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 - s1 * s2 * c3;\n    this.w = c1 * c2 * c3 + s1 * s2 * s3;\n    return this;\n  },\n  setFromAxisAngle: function setFromAxisAngle(axis, angle) {\n    var halfAngle = angle / 2,\n        s = Math.sin(halfAngle);\n    this.x = axis.x * s;\n    this.y = axis.y * s;\n    this.z = axis.z * s;\n    this.w = Math.cos(halfAngle);\n    return this;\n  },\n  multiply: function multiply(q) {\n    return this.multiplyQuaternions(this, q);\n  },\n  multiplyQuaternions: function multiplyQuaternions(a, b) {\n    var qax = a.x,\n        qay = a.y,\n        qaz = a.z,\n        qaw = a.w;\n    var qbx = b.x,\n        qby = b.y,\n        qbz = b.z,\n        qbw = b.w;\n    this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    return this;\n  },\n  inverse: function inverse() {\n    this.x *= -1;\n    this.y *= -1;\n    this.z *= -1;\n    this.normalize();\n    return this;\n  },\n  normalize: function normalize() {\n    var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    if (l === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 1;\n    } else {\n      l = 1 / l;\n      this.x = this.x * l;\n      this.y = this.y * l;\n      this.z = this.z * l;\n      this.w = this.w * l;\n    }\n    return this;\n  },\n  slerp: function slerp(qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    var x = this.x,\n        y = this.y,\n        z = this.z,\n        w = this.w;\n    var cosHalfTheta = w * qb.w + x * qb.x + y * qb.y + z * qb.z;\n    if (cosHalfTheta < 0) {\n      this.w = -qb.w;\n      this.x = -qb.x;\n      this.y = -qb.y;\n      this.z = -qb.z;\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n    if (cosHalfTheta >= 1.0) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      return this;\n    }\n    var halfTheta = Math.acos(cosHalfTheta);\n    var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n    if (Math.abs(sinHalfTheta) < 0.001) {\n      this.w = 0.5 * (w + this.w);\n      this.x = 0.5 * (x + this.x);\n      this.y = 0.5 * (y + this.y);\n      this.z = 0.5 * (z + this.z);\n      return this;\n    }\n    var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n        ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this.w = w * ratioA + this.w * ratioB;\n    this.x = x * ratioA + this.x * ratioB;\n    this.y = y * ratioA + this.y * ratioB;\n    this.z = z * ratioA + this.z * ratioB;\n    return this;\n  },\n  setFromUnitVectors: function () {\n    var v1, r;\n    var EPS = 0.000001;\n    return function (vFrom, vTo) {\n      if (v1 === undefined) v1 = new Vector3();\n      r = vFrom.dot(vTo) + 1;\n      if (r < EPS) {\n        r = 0;\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          v1.set(-vFrom.y, vFrom.x, 0);\n        } else {\n          v1.set(0, -vFrom.z, vFrom.y);\n        }\n      } else {\n        v1.crossVectors(vFrom, vTo);\n      }\n      this.x = v1.x;\n      this.y = v1.y;\n      this.z = v1.z;\n      this.w = r;\n      this.normalize();\n      return this;\n    };\n  }()\n};\n\nfunction Device(params) {\n  this.width = params.width || getScreenWidth();\n  this.height = params.height || getScreenHeight();\n  this.widthMeters = params.widthMeters;\n  this.heightMeters = params.heightMeters;\n  this.bevelMeters = params.bevelMeters;\n}\nvar DEFAULT_ANDROID = new Device({\n  widthMeters: 0.110,\n  heightMeters: 0.062,\n  bevelMeters: 0.004\n});\nvar DEFAULT_IOS = new Device({\n  widthMeters: 0.1038,\n  heightMeters: 0.0584,\n  bevelMeters: 0.004\n});\nvar Viewers = {\n  CardboardV1: new CardboardViewer({\n    id: 'CardboardV1',\n    label: 'Cardboard I/O 2014',\n    fov: 40,\n    interLensDistance: 0.060,\n    baselineLensDistance: 0.035,\n    screenLensDistance: 0.042,\n    distortionCoefficients: [0.441, 0.156],\n    inverseCoefficients: [-0.4410035, 0.42756155, -0.4804439, 0.5460139, -0.58821183, 0.5733938, -0.48303202, 0.33299083, -0.17573841, 0.0651772, -0.01488963, 0.001559834]\n  }),\n  CardboardV2: new CardboardViewer({\n    id: 'CardboardV2',\n    label: 'Cardboard I/O 2015',\n    fov: 60,\n    interLensDistance: 0.064,\n    baselineLensDistance: 0.035,\n    screenLensDistance: 0.039,\n    distortionCoefficients: [0.34, 0.55],\n    inverseCoefficients: [-0.33836704, -0.18162185, 0.862655, -1.2462051, 1.0560602, -0.58208317, 0.21609078, -0.05444823, 0.009177956, -9.904169E-4, 6.183535E-5, -1.6981803E-6]\n  })\n};\nfunction DeviceInfo(deviceParams, additionalViewers) {\n  this.viewer = Viewers.CardboardV2;\n  this.updateDeviceParams(deviceParams);\n  this.distortion = new Distortion(this.viewer.distortionCoefficients);\n  for (var i = 0; i < additionalViewers.length; i++) {\n    var viewer = additionalViewers[i];\n    Viewers[viewer.id] = new CardboardViewer(viewer);\n  }\n}\nDeviceInfo.prototype.updateDeviceParams = function (deviceParams) {\n  this.device = this.determineDevice_(deviceParams) || this.device;\n};\nDeviceInfo.prototype.getDevice = function () {\n  return this.device;\n};\nDeviceInfo.prototype.setViewer = function (viewer) {\n  this.viewer = viewer;\n  this.distortion = new Distortion(this.viewer.distortionCoefficients);\n};\nDeviceInfo.prototype.determineDevice_ = function (deviceParams) {\n  if (!deviceParams) {\n    if (isIOS()) {\n      console.warn('Using fallback iOS device measurements.');\n      return DEFAULT_IOS;\n    } else {\n      console.warn('Using fallback Android device measurements.');\n      return DEFAULT_ANDROID;\n    }\n  }\n  var METERS_PER_INCH = 0.0254;\n  var metersPerPixelX = METERS_PER_INCH / deviceParams.xdpi;\n  var metersPerPixelY = METERS_PER_INCH / deviceParams.ydpi;\n  var width = getScreenWidth();\n  var height = getScreenHeight();\n  return new Device({\n    widthMeters: metersPerPixelX * width,\n    heightMeters: metersPerPixelY * height,\n    bevelMeters: deviceParams.bevelMm * 0.001\n  });\n};\nDeviceInfo.prototype.getDistortedFieldOfViewLeftEye = function () {\n  var viewer = this.viewer;\n  var device = this.device;\n  var distortion = this.distortion;\n  var eyeToScreenDistance = viewer.screenLensDistance;\n  var outerDist = (device.widthMeters - viewer.interLensDistance) / 2;\n  var innerDist = viewer.interLensDistance / 2;\n  var bottomDist = viewer.baselineLensDistance - device.bevelMeters;\n  var topDist = device.heightMeters - bottomDist;\n  var outerAngle = radToDeg * Math.atan(distortion.distort(outerDist / eyeToScreenDistance));\n  var innerAngle = radToDeg * Math.atan(distortion.distort(innerDist / eyeToScreenDistance));\n  var bottomAngle = radToDeg * Math.atan(distortion.distort(bottomDist / eyeToScreenDistance));\n  var topAngle = radToDeg * Math.atan(distortion.distort(topDist / eyeToScreenDistance));\n  return {\n    leftDegrees: Math.min(outerAngle, viewer.fov),\n    rightDegrees: Math.min(innerAngle, viewer.fov),\n    downDegrees: Math.min(bottomAngle, viewer.fov),\n    upDegrees: Math.min(topAngle, viewer.fov)\n  };\n};\nDeviceInfo.prototype.getLeftEyeVisibleTanAngles = function () {\n  var viewer = this.viewer;\n  var device = this.device;\n  var distortion = this.distortion;\n  var fovLeft = Math.tan(-degToRad * viewer.fov);\n  var fovTop = Math.tan(degToRad * viewer.fov);\n  var fovRight = Math.tan(degToRad * viewer.fov);\n  var fovBottom = Math.tan(-degToRad * viewer.fov);\n  var halfWidth = device.widthMeters / 4;\n  var halfHeight = device.heightMeters / 2;\n  var verticalLensOffset = viewer.baselineLensDistance - device.bevelMeters - halfHeight;\n  var centerX = viewer.interLensDistance / 2 - halfWidth;\n  var centerY = -verticalLensOffset;\n  var centerZ = viewer.screenLensDistance;\n  var screenLeft = distortion.distort((centerX - halfWidth) / centerZ);\n  var screenTop = distortion.distort((centerY + halfHeight) / centerZ);\n  var screenRight = distortion.distort((centerX + halfWidth) / centerZ);\n  var screenBottom = distortion.distort((centerY - halfHeight) / centerZ);\n  var result = new Float32Array(4);\n  result[0] = Math.max(fovLeft, screenLeft);\n  result[1] = Math.min(fovTop, screenTop);\n  result[2] = Math.min(fovRight, screenRight);\n  result[3] = Math.max(fovBottom, screenBottom);\n  return result;\n};\nDeviceInfo.prototype.getLeftEyeNoLensTanAngles = function () {\n  var viewer = this.viewer;\n  var device = this.device;\n  var distortion = this.distortion;\n  var result = new Float32Array(4);\n  var fovLeft = distortion.distortInverse(Math.tan(-degToRad * viewer.fov));\n  var fovTop = distortion.distortInverse(Math.tan(degToRad * viewer.fov));\n  var fovRight = distortion.distortInverse(Math.tan(degToRad * viewer.fov));\n  var fovBottom = distortion.distortInverse(Math.tan(-degToRad * viewer.fov));\n  var halfWidth = device.widthMeters / 4;\n  var halfHeight = device.heightMeters / 2;\n  var verticalLensOffset = viewer.baselineLensDistance - device.bevelMeters - halfHeight;\n  var centerX = viewer.interLensDistance / 2 - halfWidth;\n  var centerY = -verticalLensOffset;\n  var centerZ = viewer.screenLensDistance;\n  var screenLeft = (centerX - halfWidth) / centerZ;\n  var screenTop = (centerY + halfHeight) / centerZ;\n  var screenRight = (centerX + halfWidth) / centerZ;\n  var screenBottom = (centerY - halfHeight) / centerZ;\n  result[0] = Math.max(fovLeft, screenLeft);\n  result[1] = Math.min(fovTop, screenTop);\n  result[2] = Math.min(fovRight, screenRight);\n  result[3] = Math.max(fovBottom, screenBottom);\n  return result;\n};\nDeviceInfo.prototype.getLeftEyeVisibleScreenRect = function (undistortedFrustum) {\n  var viewer = this.viewer;\n  var device = this.device;\n  var dist = viewer.screenLensDistance;\n  var eyeX = (device.widthMeters - viewer.interLensDistance) / 2;\n  var eyeY = viewer.baselineLensDistance - device.bevelMeters;\n  var left = (undistortedFrustum[0] * dist + eyeX) / device.widthMeters;\n  var top = (undistortedFrustum[1] * dist + eyeY) / device.heightMeters;\n  var right = (undistortedFrustum[2] * dist + eyeX) / device.widthMeters;\n  var bottom = (undistortedFrustum[3] * dist + eyeY) / device.heightMeters;\n  return {\n    x: left,\n    y: bottom,\n    width: right - left,\n    height: top - bottom\n  };\n};\nDeviceInfo.prototype.getFieldOfViewLeftEye = function (opt_isUndistorted) {\n  return opt_isUndistorted ? this.getUndistortedFieldOfViewLeftEye() : this.getDistortedFieldOfViewLeftEye();\n};\nDeviceInfo.prototype.getFieldOfViewRightEye = function (opt_isUndistorted) {\n  var fov = this.getFieldOfViewLeftEye(opt_isUndistorted);\n  return {\n    leftDegrees: fov.rightDegrees,\n    rightDegrees: fov.leftDegrees,\n    upDegrees: fov.upDegrees,\n    downDegrees: fov.downDegrees\n  };\n};\nDeviceInfo.prototype.getUndistortedFieldOfViewLeftEye = function () {\n  var p = this.getUndistortedParams_();\n  return {\n    leftDegrees: radToDeg * Math.atan(p.outerDist),\n    rightDegrees: radToDeg * Math.atan(p.innerDist),\n    downDegrees: radToDeg * Math.atan(p.bottomDist),\n    upDegrees: radToDeg * Math.atan(p.topDist)\n  };\n};\nDeviceInfo.prototype.getUndistortedViewportLeftEye = function () {\n  var p = this.getUndistortedParams_();\n  var viewer = this.viewer;\n  var device = this.device;\n  var eyeToScreenDistance = viewer.screenLensDistance;\n  var screenWidth = device.widthMeters / eyeToScreenDistance;\n  var screenHeight = device.heightMeters / eyeToScreenDistance;\n  var xPxPerTanAngle = device.width / screenWidth;\n  var yPxPerTanAngle = device.height / screenHeight;\n  var x = Math.round((p.eyePosX - p.outerDist) * xPxPerTanAngle);\n  var y = Math.round((p.eyePosY - p.bottomDist) * yPxPerTanAngle);\n  return {\n    x: x,\n    y: y,\n    width: Math.round((p.eyePosX + p.innerDist) * xPxPerTanAngle) - x,\n    height: Math.round((p.eyePosY + p.topDist) * yPxPerTanAngle) - y\n  };\n};\nDeviceInfo.prototype.getUndistortedParams_ = function () {\n  var viewer = this.viewer;\n  var device = this.device;\n  var distortion = this.distortion;\n  var eyeToScreenDistance = viewer.screenLensDistance;\n  var halfLensDistance = viewer.interLensDistance / 2 / eyeToScreenDistance;\n  var screenWidth = device.widthMeters / eyeToScreenDistance;\n  var screenHeight = device.heightMeters / eyeToScreenDistance;\n  var eyePosX = screenWidth / 2 - halfLensDistance;\n  var eyePosY = (viewer.baselineLensDistance - device.bevelMeters) / eyeToScreenDistance;\n  var maxFov = viewer.fov;\n  var viewerMax = distortion.distortInverse(Math.tan(degToRad * maxFov));\n  var outerDist = Math.min(eyePosX, viewerMax);\n  var innerDist = Math.min(halfLensDistance, viewerMax);\n  var bottomDist = Math.min(eyePosY, viewerMax);\n  var topDist = Math.min(screenHeight - eyePosY, viewerMax);\n  return {\n    outerDist: outerDist,\n    innerDist: innerDist,\n    topDist: topDist,\n    bottomDist: bottomDist,\n    eyePosX: eyePosX,\n    eyePosY: eyePosY\n  };\n};\nfunction CardboardViewer(params) {\n  this.id = params.id;\n  this.label = params.label;\n  this.fov = params.fov;\n  this.interLensDistance = params.interLensDistance;\n  this.baselineLensDistance = params.baselineLensDistance;\n  this.screenLensDistance = params.screenLensDistance;\n  this.distortionCoefficients = params.distortionCoefficients;\n  this.inverseCoefficients = params.inverseCoefficients;\n}\nDeviceInfo.Viewers = Viewers;\n\nvar format = 1;\nvar last_updated = \"2019-11-09T17:36:14Z\";\nvar devices = [{\"type\":\"android\",\"rules\":[{\"mdmh\":\"asus/*/Nexus 7/*\"},{\"ua\":\"Nexus 7\"}],\"dpi\":[320.8,323],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"asus/*/ASUS_X00PD/*\"},{\"ua\":\"ASUS_X00PD\"}],\"dpi\":245,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"asus/*/ASUS_X008D/*\"},{\"ua\":\"ASUS_X008D\"}],\"dpi\":282,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"asus/*/ASUS_Z00AD/*\"},{\"ua\":\"ASUS_Z00AD\"}],\"dpi\":[403,404.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel 2 XL/*\"},{\"ua\":\"Pixel 2 XL\"}],\"dpi\":537.9,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel 3 XL/*\"},{\"ua\":\"Pixel 3 XL\"}],\"dpi\":[558.5,553.8],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel XL/*\"},{\"ua\":\"Pixel XL\"}],\"dpi\":[537.9,533],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel 3/*\"},{\"ua\":\"Pixel 3\"}],\"dpi\":442.4,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel 2/*\"},{\"ua\":\"Pixel 2\"}],\"dpi\":441,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel/*\"},{\"ua\":\"Pixel\"}],\"dpi\":[432.6,436.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC6435LVW/*\"},{\"ua\":\"HTC6435LVW\"}],\"dpi\":[449.7,443.3],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC One XL/*\"},{\"ua\":\"HTC One XL\"}],\"dpi\":[315.3,314.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"htc/*/Nexus 9/*\"},{\"ua\":\"Nexus 9\"}],\"dpi\":289,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC One M9/*\"},{\"ua\":\"HTC One M9\"}],\"dpi\":[442.5,443.3],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC One_M8/*\"},{\"ua\":\"HTC One_M8\"}],\"dpi\":[449.7,447.4],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC One/*\"},{\"ua\":\"HTC One\"}],\"dpi\":472.8,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Huawei/*/Nexus 6P/*\"},{\"ua\":\"Nexus 6P\"}],\"dpi\":[515.1,518],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Huawei/*/BLN-L24/*\"},{\"ua\":\"HONORBLN-L24\"}],\"dpi\":480,\"bw\":4,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Huawei/*/BKL-L09/*\"},{\"ua\":\"BKL-L09\"}],\"dpi\":403,\"bw\":3.47,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LENOVO/*/Lenovo PB2-690Y/*\"},{\"ua\":\"Lenovo PB2-690Y\"}],\"dpi\":[457.2,454.713],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/Nexus 5X/*\"},{\"ua\":\"Nexus 5X\"}],\"dpi\":[422,419.9],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LGMS345/*\"},{\"ua\":\"LGMS345\"}],\"dpi\":[221.7,219.1],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LG-D800/*\"},{\"ua\":\"LG-D800\"}],\"dpi\":[422,424.1],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LG-D850/*\"},{\"ua\":\"LG-D850\"}],\"dpi\":[537.9,541.9],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/VS985 4G/*\"},{\"ua\":\"VS985 4G\"}],\"dpi\":[537.9,535.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/Nexus 5/*\"},{\"ua\":\"Nexus 5 B\"}],\"dpi\":[442.4,444.8],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/Nexus 4/*\"},{\"ua\":\"Nexus 4\"}],\"dpi\":[319.8,318.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LG-P769/*\"},{\"ua\":\"LG-P769\"}],\"dpi\":[240.6,247.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LGMS323/*\"},{\"ua\":\"LGMS323\"}],\"dpi\":[206.6,204.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LGLS996/*\"},{\"ua\":\"LGLS996\"}],\"dpi\":[403.4,401.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Micromax/*/4560MMX/*\"},{\"ua\":\"4560MMX\"}],\"dpi\":[240,219.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Micromax/*/A250/*\"},{\"ua\":\"Micromax A250\"}],\"dpi\":[480,446.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Micromax/*/Micromax AQ4501/*\"},{\"ua\":\"Micromax AQ4501\"}],\"dpi\":240,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/G5/*\"},{\"ua\":\"Moto G (5) Plus\"}],\"dpi\":[403.4,403],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/DROID RAZR/*\"},{\"ua\":\"DROID RAZR\"}],\"dpi\":[368.1,256.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT830C/*\"},{\"ua\":\"XT830C\"}],\"dpi\":[254,255.9],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1021/*\"},{\"ua\":\"XT1021\"}],\"dpi\":[254,256.7],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1023/*\"},{\"ua\":\"XT1023\"}],\"dpi\":[254,256.7],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1028/*\"},{\"ua\":\"XT1028\"}],\"dpi\":[326.6,327.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1034/*\"},{\"ua\":\"XT1034\"}],\"dpi\":[326.6,328.4],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1053/*\"},{\"ua\":\"XT1053\"}],\"dpi\":[315.3,316.1],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1562/*\"},{\"ua\":\"XT1562\"}],\"dpi\":[403.4,402.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/Nexus 6/*\"},{\"ua\":\"Nexus 6 B\"}],\"dpi\":[494.3,489.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1063/*\"},{\"ua\":\"XT1063\"}],\"dpi\":[295,296.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1064/*\"},{\"ua\":\"XT1064\"}],\"dpi\":[295,295.6],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1092/*\"},{\"ua\":\"XT1092\"}],\"dpi\":[422,424.1],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1095/*\"},{\"ua\":\"XT1095\"}],\"dpi\":[422,423.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/G4/*\"},{\"ua\":\"Moto G (4)\"}],\"dpi\":401,\"bw\":4,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/A0001/*\"},{\"ua\":\"A0001\"}],\"dpi\":[403.4,401],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE E1001/*\"},{\"ua\":\"ONE E1001\"}],\"dpi\":[442.4,441.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE E1003/*\"},{\"ua\":\"ONE E1003\"}],\"dpi\":[442.4,441.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE E1005/*\"},{\"ua\":\"ONE E1005\"}],\"dpi\":[442.4,441.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE A2001/*\"},{\"ua\":\"ONE A2001\"}],\"dpi\":[391.9,405.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE A2003/*\"},{\"ua\":\"ONE A2003\"}],\"dpi\":[391.9,405.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE A2005/*\"},{\"ua\":\"ONE A2005\"}],\"dpi\":[391.9,405.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONEPLUS A3000/*\"},{\"ua\":\"ONEPLUS A3000\"}],\"dpi\":401,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONEPLUS A3003/*\"},{\"ua\":\"ONEPLUS A3003\"}],\"dpi\":401,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONEPLUS A3010/*\"},{\"ua\":\"ONEPLUS A3010\"}],\"dpi\":401,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONEPLUS A5000/*\"},{\"ua\":\"ONEPLUS A5000 \"}],\"dpi\":[403.411,399.737],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE A5010/*\"},{\"ua\":\"ONEPLUS A5010\"}],\"dpi\":[403,400],\"bw\":2,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONEPLUS A6000/*\"},{\"ua\":\"ONEPLUS A6000\"}],\"dpi\":401,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONEPLUS A6003/*\"},{\"ua\":\"ONEPLUS A6003\"}],\"dpi\":401,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONEPLUS A6010/*\"},{\"ua\":\"ONEPLUS A6010\"}],\"dpi\":401,\"bw\":2,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONEPLUS A6013/*\"},{\"ua\":\"ONEPLUS A6013\"}],\"dpi\":401,\"bw\":2,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OPPO/*/X909/*\"},{\"ua\":\"X909\"}],\"dpi\":[442.4,444.1],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9082/*\"},{\"ua\":\"GT-I9082\"}],\"dpi\":[184.7,185.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G360P/*\"},{\"ua\":\"SM-G360P\"}],\"dpi\":[196.7,205.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/Nexus S/*\"},{\"ua\":\"Nexus S\"}],\"dpi\":[234.5,229.8],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9300/*\"},{\"ua\":\"GT-I9300\"}],\"dpi\":[304.8,303.9],\"bw\":5,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-T230NU/*\"},{\"ua\":\"SM-T230NU\"}],\"dpi\":216,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SGH-T399/*\"},{\"ua\":\"SGH-T399\"}],\"dpi\":[217.7,231.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SGH-M919/*\"},{\"ua\":\"SGH-M919\"}],\"dpi\":[440.8,437.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N9005/*\"},{\"ua\":\"SM-N9005\"}],\"dpi\":[386.4,387],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SAMSUNG-SM-N900A/*\"},{\"ua\":\"SAMSUNG-SM-N900A\"}],\"dpi\":[386.4,387.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9500/*\"},{\"ua\":\"GT-I9500\"}],\"dpi\":[442.5,443.3],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9505/*\"},{\"ua\":\"GT-I9505\"}],\"dpi\":439.4,\"bw\":4,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G900F/*\"},{\"ua\":\"SM-G900F\"}],\"dpi\":[415.6,431.6],\"bw\":5,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G900M/*\"},{\"ua\":\"SM-G900M\"}],\"dpi\":[415.6,431.6],\"bw\":5,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G800F/*\"},{\"ua\":\"SM-G800F\"}],\"dpi\":326.8,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G906S/*\"},{\"ua\":\"SM-G906S\"}],\"dpi\":[562.7,572.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9300/*\"},{\"ua\":\"GT-I9300\"}],\"dpi\":[306.7,304.8],\"bw\":5,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-T535/*\"},{\"ua\":\"SM-T535\"}],\"dpi\":[142.6,136.4],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N920C/*\"},{\"ua\":\"SM-N920C\"}],\"dpi\":[515.1,518.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N920P/*\"},{\"ua\":\"SM-N920P\"}],\"dpi\":[386.3655,390.144],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N920W8/*\"},{\"ua\":\"SM-N920W8\"}],\"dpi\":[515.1,518.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9300I/*\"},{\"ua\":\"GT-I9300I\"}],\"dpi\":[304.8,305.8],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9195/*\"},{\"ua\":\"GT-I9195\"}],\"dpi\":[249.4,256.7],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SPH-L520/*\"},{\"ua\":\"SPH-L520\"}],\"dpi\":[249.4,255.9],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SAMSUNG-SGH-I717/*\"},{\"ua\":\"SAMSUNG-SGH-I717\"}],\"dpi\":285.8,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SPH-D710/*\"},{\"ua\":\"SPH-D710\"}],\"dpi\":[217.7,204.2],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-N7100/*\"},{\"ua\":\"GT-N7100\"}],\"dpi\":265.1,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SCH-I605/*\"},{\"ua\":\"SCH-I605\"}],\"dpi\":265.1,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/Galaxy Nexus/*\"},{\"ua\":\"Galaxy Nexus\"}],\"dpi\":[315.3,314.2],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N910H/*\"},{\"ua\":\"SM-N910H\"}],\"dpi\":[515.1,518],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N910C/*\"},{\"ua\":\"SM-N910C\"}],\"dpi\":[515.2,520.2],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G130M/*\"},{\"ua\":\"SM-G130M\"}],\"dpi\":[165.9,164.8],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G928I/*\"},{\"ua\":\"SM-G928I\"}],\"dpi\":[515.1,518.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G920F/*\"},{\"ua\":\"SM-G920F\"}],\"dpi\":580.6,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G920P/*\"},{\"ua\":\"SM-G920P\"}],\"dpi\":[522.5,577],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G925F/*\"},{\"ua\":\"SM-G925F\"}],\"dpi\":580.6,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G925V/*\"},{\"ua\":\"SM-G925V\"}],\"dpi\":[522.5,576.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G930F/*\"},{\"ua\":\"SM-G930F\"}],\"dpi\":576.6,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G935F/*\"},{\"ua\":\"SM-G935F\"}],\"dpi\":533,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G950F/*\"},{\"ua\":\"SM-G950F\"}],\"dpi\":[562.707,565.293],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G955U/*\"},{\"ua\":\"SM-G955U\"}],\"dpi\":[522.514,525.762],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G955F/*\"},{\"ua\":\"SM-G955F\"}],\"dpi\":[522.514,525.762],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G960F/*\"},{\"ua\":\"SM-G960F\"}],\"dpi\":[569.575,571.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G9600/*\"},{\"ua\":\"SM-G9600\"}],\"dpi\":[569.575,571.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G960T/*\"},{\"ua\":\"SM-G960T\"}],\"dpi\":[569.575,571.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G960N/*\"},{\"ua\":\"SM-G960N\"}],\"dpi\":[569.575,571.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G960U/*\"},{\"ua\":\"SM-G960U\"}],\"dpi\":[569.575,571.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G9608/*\"},{\"ua\":\"SM-G9608\"}],\"dpi\":[569.575,571.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G960FD/*\"},{\"ua\":\"SM-G960FD\"}],\"dpi\":[569.575,571.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G960W/*\"},{\"ua\":\"SM-G960W\"}],\"dpi\":[569.575,571.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G965F/*\"},{\"ua\":\"SM-G965F\"}],\"dpi\":529,\"bw\":2,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/C6903/*\"},{\"ua\":\"C6903\"}],\"dpi\":[442.5,443.3],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/D6653/*\"},{\"ua\":\"D6653\"}],\"dpi\":[428.6,427.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/E6653/*\"},{\"ua\":\"E6653\"}],\"dpi\":[428.6,425.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/E6853/*\"},{\"ua\":\"E6853\"}],\"dpi\":[403.4,401.9],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/SGP321/*\"},{\"ua\":\"SGP321\"}],\"dpi\":[224.7,224.1],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"TCT/*/ALCATEL ONE TOUCH Fierce/*\"},{\"ua\":\"ALCATEL ONE TOUCH Fierce\"}],\"dpi\":[240,247.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"THL/*/thl 5000/*\"},{\"ua\":\"thl 5000\"}],\"dpi\":[480,443.3],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Fly/*/IQ4412/*\"},{\"ua\":\"IQ4412\"}],\"dpi\":307.9,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"ZTE/*/ZTE Blade L2/*\"},{\"ua\":\"ZTE Blade L2\"}],\"dpi\":240,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"BENEVE/*/VR518/*\"},{\"ua\":\"VR518\"}],\"dpi\":480,\"bw\":3,\"ac\":500},{\"type\":\"ios\",\"rules\":[{\"res\":[640,960]}],\"dpi\":[325.1,328.4],\"bw\":4,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[640,1136]}],\"dpi\":[317.1,320.2],\"bw\":3,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[750,1334]}],\"dpi\":326.4,\"bw\":4,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[1242,2208]}],\"dpi\":[453.6,458.4],\"bw\":4,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[1125,2001]}],\"dpi\":[410.9,415.4],\"bw\":4,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[1125,2436]}],\"dpi\":458,\"bw\":4,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Huawei/*/EML-L29/*\"},{\"ua\":\"EML-L29\"}],\"dpi\":428,\"bw\":3.45,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Nokia/*/Nokia 7.1/*\"},{\"ua\":\"Nokia 7.1\"}],\"dpi\":[432,431.9],\"bw\":3,\"ac\":500},{\"type\":\"ios\",\"rules\":[{\"res\":[1242,2688]}],\"dpi\":458,\"bw\":4,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G570M/*\"},{\"ua\":\"SM-G570M\"}],\"dpi\":320,\"bw\":3.684,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G970F/*\"},{\"ua\":\"SM-G970F\"}],\"dpi\":438,\"bw\":2.281,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G973F/*\"},{\"ua\":\"SM-G973F\"}],\"dpi\":550,\"bw\":2.002,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G975F/*\"},{\"ua\":\"SM-G975F\"}],\"dpi\":522,\"bw\":2.054,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G977F/*\"},{\"ua\":\"SM-G977F\"}],\"dpi\":505,\"bw\":2.334,\"ac\":500},{\"type\":\"ios\",\"rules\":[{\"res\":[828,1792]}],\"dpi\":326,\"bw\":5,\"ac\":500}];\nvar DPDB_CACHE = {\n\tformat: format,\n\tlast_updated: last_updated,\n\tdevices: devices\n};\n\nfunction Dpdb(url, onDeviceParamsUpdated) {\n  this.dpdb = DPDB_CACHE;\n  this.recalculateDeviceParams_();\n  if (url) {\n    this.onDeviceParamsUpdated = onDeviceParamsUpdated;\n    var xhr = new XMLHttpRequest();\n    var obj = this;\n    xhr.open('GET', url, true);\n    xhr.addEventListener('load', function () {\n      obj.loading = false;\n      if (xhr.status >= 200 && xhr.status <= 299) {\n        obj.dpdb = JSON.parse(xhr.response);\n        obj.recalculateDeviceParams_();\n      } else {\n        console.error('Error loading online DPDB!');\n      }\n    });\n    xhr.send();\n  }\n}\nDpdb.prototype.getDeviceParams = function () {\n  return this.deviceParams;\n};\nDpdb.prototype.recalculateDeviceParams_ = function () {\n  var newDeviceParams = this.calcDeviceParams_();\n  if (newDeviceParams) {\n    this.deviceParams = newDeviceParams;\n    if (this.onDeviceParamsUpdated) {\n      this.onDeviceParamsUpdated(this.deviceParams);\n    }\n  } else {\n    console.error('Failed to recalculate device parameters.');\n  }\n};\nDpdb.prototype.calcDeviceParams_ = function () {\n  var db = this.dpdb;\n  if (!db) {\n    console.error('DPDB not available.');\n    return null;\n  }\n  if (db.format != 1) {\n    console.error('DPDB has unexpected format version.');\n    return null;\n  }\n  if (!db.devices || !db.devices.length) {\n    console.error('DPDB does not have a devices section.');\n    return null;\n  }\n  var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  var width = getScreenWidth();\n  var height = getScreenHeight();\n  if (!db.devices) {\n    console.error('DPDB has no devices section.');\n    return null;\n  }\n  for (var i = 0; i < db.devices.length; i++) {\n    var device = db.devices[i];\n    if (!device.rules) {\n      console.warn('Device[' + i + '] has no rules section.');\n      continue;\n    }\n    if (device.type != 'ios' && device.type != 'android') {\n      console.warn('Device[' + i + '] has invalid type.');\n      continue;\n    }\n    if (isIOS() != (device.type == 'ios')) continue;\n    var matched = false;\n    for (var j = 0; j < device.rules.length; j++) {\n      var rule = device.rules[j];\n      if (this.ruleMatches_(rule, userAgent, width, height)) {\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) continue;\n    var xdpi = device.dpi[0] || device.dpi;\n    var ydpi = device.dpi[1] || device.dpi;\n    return new DeviceParams({ xdpi: xdpi, ydpi: ydpi, bevelMm: device.bw });\n  }\n  console.warn('No DPDB device match.');\n  return null;\n};\nDpdb.prototype.ruleMatches_ = function (rule, ua, screenWidth, screenHeight) {\n  if (!rule.ua && !rule.res) return false;\n  if (rule.ua && rule.ua.substring(0, 2) === 'SM') rule.ua = rule.ua.substring(0, 7);\n  if (rule.ua && ua.indexOf(rule.ua) < 0) return false;\n  if (rule.res) {\n    if (!rule.res[0] || !rule.res[1]) return false;\n    var resX = rule.res[0];\n    var resY = rule.res[1];\n    if (Math.min(screenWidth, screenHeight) != Math.min(resX, resY) || Math.max(screenWidth, screenHeight) != Math.max(resX, resY)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction DeviceParams(params) {\n  this.xdpi = params.xdpi;\n  this.ydpi = params.ydpi;\n  this.bevelMm = params.bevelMm;\n}\n\nfunction SensorSample(sample, timestampS) {\n  this.set(sample, timestampS);\n}\nSensorSample.prototype.set = function (sample, timestampS) {\n  this.sample = sample;\n  this.timestampS = timestampS;\n};\nSensorSample.prototype.copy = function (sensorSample) {\n  this.set(sensorSample.sample, sensorSample.timestampS);\n};\n\nfunction ComplementaryFilter(kFilter, isDebug) {\n  this.kFilter = kFilter;\n  this.isDebug = isDebug;\n  this.currentAccelMeasurement = new SensorSample();\n  this.currentGyroMeasurement = new SensorSample();\n  this.previousGyroMeasurement = new SensorSample();\n  if (isIOS()) {\n    this.filterQ = new Quaternion(-1, 0, 0, 1);\n  } else {\n    this.filterQ = new Quaternion(1, 0, 0, 1);\n  }\n  this.previousFilterQ = new Quaternion();\n  this.previousFilterQ.copy(this.filterQ);\n  this.accelQ = new Quaternion();\n  this.isOrientationInitialized = false;\n  this.estimatedGravity = new Vector3();\n  this.measuredGravity = new Vector3();\n  this.gyroIntegralQ = new Quaternion();\n}\nComplementaryFilter.prototype.addAccelMeasurement = function (vector, timestampS) {\n  this.currentAccelMeasurement.set(vector, timestampS);\n};\nComplementaryFilter.prototype.addGyroMeasurement = function (vector, timestampS) {\n  this.currentGyroMeasurement.set(vector, timestampS);\n  var deltaT = timestampS - this.previousGyroMeasurement.timestampS;\n  if (isTimestampDeltaValid(deltaT)) {\n    this.run_();\n  }\n  this.previousGyroMeasurement.copy(this.currentGyroMeasurement);\n};\nComplementaryFilter.prototype.run_ = function () {\n  if (!this.isOrientationInitialized) {\n    this.accelQ = this.accelToQuaternion_(this.currentAccelMeasurement.sample);\n    this.previousFilterQ.copy(this.accelQ);\n    this.isOrientationInitialized = true;\n    return;\n  }\n  var deltaT = this.currentGyroMeasurement.timestampS - this.previousGyroMeasurement.timestampS;\n  var gyroDeltaQ = this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample, deltaT);\n  this.gyroIntegralQ.multiply(gyroDeltaQ);\n  this.filterQ.copy(this.previousFilterQ);\n  this.filterQ.multiply(gyroDeltaQ);\n  var invFilterQ = new Quaternion();\n  invFilterQ.copy(this.filterQ);\n  invFilterQ.inverse();\n  this.estimatedGravity.set(0, 0, -1);\n  this.estimatedGravity.applyQuaternion(invFilterQ);\n  this.estimatedGravity.normalize();\n  this.measuredGravity.copy(this.currentAccelMeasurement.sample);\n  this.measuredGravity.normalize();\n  var deltaQ = new Quaternion();\n  deltaQ.setFromUnitVectors(this.estimatedGravity, this.measuredGravity);\n  deltaQ.inverse();\n  if (this.isDebug) {\n    console.log('Delta: %d deg, G_est: (%s, %s, %s), G_meas: (%s, %s, %s)', radToDeg * getQuaternionAngle(deltaQ), this.estimatedGravity.x.toFixed(1), this.estimatedGravity.y.toFixed(1), this.estimatedGravity.z.toFixed(1), this.measuredGravity.x.toFixed(1), this.measuredGravity.y.toFixed(1), this.measuredGravity.z.toFixed(1));\n  }\n  var targetQ = new Quaternion();\n  targetQ.copy(this.filterQ);\n  targetQ.multiply(deltaQ);\n  this.filterQ.slerp(targetQ, 1 - this.kFilter);\n  this.previousFilterQ.copy(this.filterQ);\n};\nComplementaryFilter.prototype.getOrientation = function () {\n  return this.filterQ;\n};\nComplementaryFilter.prototype.accelToQuaternion_ = function (accel) {\n  var normAccel = new Vector3();\n  normAccel.copy(accel);\n  normAccel.normalize();\n  var quat = new Quaternion();\n  quat.setFromUnitVectors(new Vector3(0, 0, -1), normAccel);\n  quat.inverse();\n  return quat;\n};\nComplementaryFilter.prototype.gyroToQuaternionDelta_ = function (gyro, dt) {\n  var quat = new Quaternion();\n  var axis = new Vector3();\n  axis.copy(gyro);\n  axis.normalize();\n  quat.setFromAxisAngle(axis, gyro.length() * dt);\n  return quat;\n};\n\nfunction PosePredictor(predictionTimeS, isDebug) {\n  this.predictionTimeS = predictionTimeS;\n  this.isDebug = isDebug;\n  this.previousQ = new Quaternion();\n  this.previousTimestampS = null;\n  this.deltaQ = new Quaternion();\n  this.outQ = new Quaternion();\n}\nPosePredictor.prototype.getPrediction = function (currentQ, gyro, timestampS) {\n  if (!this.previousTimestampS) {\n    this.previousQ.copy(currentQ);\n    this.previousTimestampS = timestampS;\n    return currentQ;\n  }\n  var axis = new Vector3();\n  axis.copy(gyro);\n  axis.normalize();\n  var angularSpeed = gyro.length();\n  if (angularSpeed < degToRad * 20) {\n    if (this.isDebug) {\n      console.log('Moving slowly, at %s deg/s: no prediction', (radToDeg * angularSpeed).toFixed(1));\n    }\n    this.outQ.copy(currentQ);\n    this.previousQ.copy(currentQ);\n    return this.outQ;\n  }\n  var predictAngle = angularSpeed * this.predictionTimeS;\n  this.deltaQ.setFromAxisAngle(axis, predictAngle);\n  this.outQ.copy(this.previousQ);\n  this.outQ.multiply(this.deltaQ);\n  this.previousQ.copy(currentQ);\n  this.previousTimestampS = timestampS;\n  return this.outQ;\n};\n\nfunction FusionPoseSensor(kFilter, predictionTime, yawOnly, isDebug) {\n  this.yawOnly = yawOnly;\n  this.accelerometer = new Vector3();\n  this.gyroscope = new Vector3();\n  this.filter = new ComplementaryFilter(kFilter, isDebug);\n  this.posePredictor = new PosePredictor(predictionTime, isDebug);\n  this.isFirefoxAndroid = isFirefoxAndroid();\n  this.isIOS = isIOS();\n  var chromeVersion = getChromeVersion();\n  this.isDeviceMotionInRadians = !this.isIOS && chromeVersion && chromeVersion < 66;\n  this.isWithoutDeviceMotion = isChromeWithoutDeviceMotion() || isSafariWithoutDeviceMotion();\n  this.filterToWorldQ = new Quaternion();\n  if (isIOS()) {\n    this.filterToWorldQ.setFromAxisAngle(new Vector3(1, 0, 0), Math.PI / 2);\n  } else {\n    this.filterToWorldQ.setFromAxisAngle(new Vector3(1, 0, 0), -Math.PI / 2);\n  }\n  this.inverseWorldToScreenQ = new Quaternion();\n  this.worldToScreenQ = new Quaternion();\n  this.originalPoseAdjustQ = new Quaternion();\n  this.originalPoseAdjustQ.setFromAxisAngle(new Vector3(0, 0, 1), -window.orientation * Math.PI / 180);\n  this.setScreenTransform_();\n  if (isLandscapeMode()) {\n    this.filterToWorldQ.multiply(this.inverseWorldToScreenQ);\n  }\n  this.resetQ = new Quaternion();\n  this.orientationOut_ = new Float32Array(4);\n  this.start();\n}\nFusionPoseSensor.prototype.getPosition = function () {\n  return null;\n};\nFusionPoseSensor.prototype.getOrientation = function () {\n  var orientation = void 0;\n  if (this.isWithoutDeviceMotion && this._deviceOrientationQ) {\n    this.deviceOrientationFixQ = this.deviceOrientationFixQ || function () {\n      var z = new Quaternion().setFromAxisAngle(new Vector3(0, 0, -1), 0);\n      var y = new Quaternion();\n      if (window.orientation === -90) {\n        y.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI / -2);\n      } else {\n        y.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI / 2);\n      }\n      return z.multiply(y);\n    }();\n    this.deviceOrientationFilterToWorldQ = this.deviceOrientationFilterToWorldQ || function () {\n      var q = new Quaternion();\n      q.setFromAxisAngle(new Vector3(1, 0, 0), -Math.PI / 2);\n      return q;\n    }();\n    orientation = this._deviceOrientationQ;\n    var out = new Quaternion();\n    out.copy(orientation);\n    out.multiply(this.deviceOrientationFilterToWorldQ);\n    out.multiply(this.resetQ);\n    out.multiply(this.worldToScreenQ);\n    out.multiplyQuaternions(this.deviceOrientationFixQ, out);\n    if (this.yawOnly) {\n      out.x = 0;\n      out.z = 0;\n      out.normalize();\n    }\n    this.orientationOut_[0] = out.x;\n    this.orientationOut_[1] = out.y;\n    this.orientationOut_[2] = out.z;\n    this.orientationOut_[3] = out.w;\n    return this.orientationOut_;\n  } else {\n    var filterOrientation = this.filter.getOrientation();\n    orientation = this.posePredictor.getPrediction(filterOrientation, this.gyroscope, this.previousTimestampS);\n  }\n  var out = new Quaternion();\n  out.copy(this.filterToWorldQ);\n  out.multiply(this.resetQ);\n  out.multiply(orientation);\n  out.multiply(this.worldToScreenQ);\n  if (this.yawOnly) {\n    out.x = 0;\n    out.z = 0;\n    out.normalize();\n  }\n  this.orientationOut_[0] = out.x;\n  this.orientationOut_[1] = out.y;\n  this.orientationOut_[2] = out.z;\n  this.orientationOut_[3] = out.w;\n  return this.orientationOut_;\n};\nFusionPoseSensor.prototype.resetPose = function () {\n  this.resetQ.copy(this.filter.getOrientation());\n  this.resetQ.x = 0;\n  this.resetQ.y = 0;\n  this.resetQ.z *= -1;\n  this.resetQ.normalize();\n  if (isLandscapeMode()) {\n    this.resetQ.multiply(this.inverseWorldToScreenQ);\n  }\n  this.resetQ.multiply(this.originalPoseAdjustQ);\n};\nFusionPoseSensor.prototype.onDeviceOrientation_ = function (e) {\n  this._deviceOrientationQ = this._deviceOrientationQ || new Quaternion();\n  var alpha = e.alpha,\n      beta = e.beta,\n      gamma = e.gamma;\n  alpha = (alpha || 0) * Math.PI / 180;\n  beta = (beta || 0) * Math.PI / 180;\n  gamma = (gamma || 0) * Math.PI / 180;\n  this._deviceOrientationQ.setFromEulerYXZ(beta, alpha, -gamma);\n};\nFusionPoseSensor.prototype.onDeviceMotion_ = function (deviceMotion) {\n  this.updateDeviceMotion_(deviceMotion);\n};\nFusionPoseSensor.prototype.updateDeviceMotion_ = function (deviceMotion) {\n  var accGravity = deviceMotion.accelerationIncludingGravity;\n  var rotRate = deviceMotion.rotationRate;\n  var timestampS = deviceMotion.timeStamp / 1000;\n  var deltaS = timestampS - this.previousTimestampS;\n  if (deltaS < 0) {\n    warnOnce('fusion-pose-sensor:invalid:non-monotonic', 'Invalid timestamps detected: non-monotonic timestamp from devicemotion');\n    this.previousTimestampS = timestampS;\n    return;\n  } else if (deltaS <= MIN_TIMESTEP || deltaS > MAX_TIMESTEP) {\n    warnOnce('fusion-pose-sensor:invalid:outside-threshold', 'Invalid timestamps detected: Timestamp from devicemotion outside expected range.');\n    this.previousTimestampS = timestampS;\n    return;\n  }\n  this.accelerometer.set(-accGravity.x, -accGravity.y, -accGravity.z);\n  if (rotRate) {\n    if (isR7()) {\n      this.gyroscope.set(-rotRate.beta, rotRate.alpha, rotRate.gamma);\n    } else {\n      this.gyroscope.set(rotRate.alpha, rotRate.beta, rotRate.gamma);\n    }\n    if (!this.isDeviceMotionInRadians) {\n      this.gyroscope.multiplyScalar(Math.PI / 180);\n    }\n    this.filter.addGyroMeasurement(this.gyroscope, timestampS);\n  }\n  this.filter.addAccelMeasurement(this.accelerometer, timestampS);\n  this.previousTimestampS = timestampS;\n};\nFusionPoseSensor.prototype.onOrientationChange_ = function (screenOrientation) {\n  this.setScreenTransform_();\n};\nFusionPoseSensor.prototype.onMessage_ = function (event) {\n  var message = event.data;\n  if (!message || !message.type) {\n    return;\n  }\n  var type = message.type.toLowerCase();\n  if (type !== 'devicemotion') {\n    return;\n  }\n  this.updateDeviceMotion_(message.deviceMotionEvent);\n};\nFusionPoseSensor.prototype.setScreenTransform_ = function () {\n  this.worldToScreenQ.set(0, 0, 0, 1);\n  switch (window.orientation) {\n    case 0:\n      break;\n    case 90:\n      this.worldToScreenQ.setFromAxisAngle(new Vector3(0, 0, 1), -Math.PI / 2);\n      break;\n    case -90:\n      this.worldToScreenQ.setFromAxisAngle(new Vector3(0, 0, 1), Math.PI / 2);\n      break;\n    case 180:\n      break;\n  }\n  this.inverseWorldToScreenQ.copy(this.worldToScreenQ);\n  this.inverseWorldToScreenQ.inverse();\n};\nFusionPoseSensor.prototype.start = function () {\n  this.onDeviceMotionCallback_ = this.onDeviceMotion_.bind(this);\n  this.onOrientationChangeCallback_ = this.onOrientationChange_.bind(this);\n  this.onMessageCallback_ = this.onMessage_.bind(this);\n  this.onDeviceOrientationCallback_ = this.onDeviceOrientation_.bind(this);\n  if (isIOS() && isInsideCrossOriginIFrame()) {\n    window.addEventListener('message', this.onMessageCallback_);\n  }\n  window.addEventListener('orientationchange', this.onOrientationChangeCallback_);\n  if (this.isWithoutDeviceMotion) {\n    window.addEventListener('deviceorientation', this.onDeviceOrientationCallback_);\n  } else {\n    window.addEventListener('devicemotion', this.onDeviceMotionCallback_);\n  }\n};\nFusionPoseSensor.prototype.stop = function () {\n  window.removeEventListener('devicemotion', this.onDeviceMotionCallback_);\n  window.removeEventListener('deviceorientation', this.onDeviceOrientationCallback_);\n  window.removeEventListener('orientationchange', this.onOrientationChangeCallback_);\n  window.removeEventListener('message', this.onMessageCallback_);\n};\n\nvar SENSOR_FREQUENCY = 60;\nvar X_AXIS = new Vector3(1, 0, 0);\nvar Z_AXIS = new Vector3(0, 0, 1);\nvar SENSOR_TO_VR = new Quaternion();\nSENSOR_TO_VR.setFromAxisAngle(X_AXIS, -Math.PI / 2);\nSENSOR_TO_VR.multiply(new Quaternion().setFromAxisAngle(Z_AXIS, Math.PI / 2));\nvar PoseSensor = function () {\n  function PoseSensor(config) {\n    classCallCheck(this, PoseSensor);\n    this.config = config;\n    this.sensor = null;\n    this.fusionSensor = null;\n    this._out = new Float32Array(4);\n    this.api = null;\n    this.errors = [];\n    this._sensorQ = new Quaternion();\n    this._outQ = new Quaternion();\n    this._onSensorRead = this._onSensorRead.bind(this);\n    this._onSensorError = this._onSensorError.bind(this);\n    this.init();\n  }\n  createClass(PoseSensor, [{\n    key: 'init',\n    value: function init() {\n      var sensor = null;\n      try {\n        sensor = new RelativeOrientationSensor({\n          frequency: SENSOR_FREQUENCY,\n          referenceFrame: 'screen'\n        });\n        sensor.addEventListener('error', this._onSensorError);\n      } catch (error) {\n        this.errors.push(error);\n        if (error.name === 'SecurityError') {\n          console.error('Cannot construct sensors due to the Feature Policy');\n          console.warn('Attempting to fall back using \"devicemotion\"; however this will ' + 'fail in the future without correct permissions.');\n          this.useDeviceMotion();\n        } else if (error.name === 'ReferenceError') {\n          this.useDeviceMotion();\n        } else {\n          console.error(error);\n        }\n      }\n      if (sensor) {\n        this.api = 'sensor';\n        this.sensor = sensor;\n        this.sensor.addEventListener('reading', this._onSensorRead);\n        this.sensor.start();\n      }\n    }\n  }, {\n    key: 'useDeviceMotion',\n    value: function useDeviceMotion() {\n      this.api = 'devicemotion';\n      this.fusionSensor = new FusionPoseSensor(this.config.K_FILTER, this.config.PREDICTION_TIME_S, this.config.YAW_ONLY, this.config.DEBUG);\n      if (this.sensor) {\n        this.sensor.removeEventListener('reading', this._onSensorRead);\n        this.sensor.removeEventListener('error', this._onSensorError);\n        this.sensor = null;\n      }\n    }\n  }, {\n    key: 'getOrientation',\n    value: function getOrientation() {\n      if (this.fusionSensor) {\n        return this.fusionSensor.getOrientation();\n      }\n      if (!this.sensor || !this.sensor.quaternion) {\n        this._out[0] = this._out[1] = this._out[2] = 0;\n        this._out[3] = 1;\n        return this._out;\n      }\n      var q = this.sensor.quaternion;\n      this._sensorQ.set(q[0], q[1], q[2], q[3]);\n      var out = this._outQ;\n      out.copy(SENSOR_TO_VR);\n      out.multiply(this._sensorQ);\n      if (this.config.YAW_ONLY) {\n        out.x = out.z = 0;\n        out.normalize();\n      }\n      this._out[0] = out.x;\n      this._out[1] = out.y;\n      this._out[2] = out.z;\n      this._out[3] = out.w;\n      return this._out;\n    }\n  }, {\n    key: '_onSensorError',\n    value: function _onSensorError(event) {\n      this.errors.push(event.error);\n      if (event.error.name === 'NotAllowedError') {\n        console.error('Permission to access sensor was denied');\n      } else if (event.error.name === 'NotReadableError') {\n        console.error('Sensor could not be read');\n      } else {\n        console.error(event.error);\n      }\n      this.useDeviceMotion();\n    }\n  }, {\n    key: '_onSensorRead',\n    value: function _onSensorRead() {}\n  }]);\n  return PoseSensor;\n}();\n\nvar rotateInstructionsAsset = \"<svg width='198' height='240' viewBox='0 0 198 240' xmlns='http://www.w3.org/2000/svg'><g fill='none' fill-rule='evenodd'><path d='M149.625 109.527l6.737 3.891v.886c0 .177.013.36.038.549.01.081.02.162.027.242.14 1.415.974 2.998 2.105 3.999l5.72 5.062.081-.09s4.382-2.53 5.235-3.024l25.97 14.993v54.001c0 .771-.386 1.217-.948 1.217-.233 0-.495-.076-.772-.236l-23.967-13.838-.014.024-27.322 15.775-.85-1.323c-4.731-1.529-9.748-2.74-14.951-3.61a.27.27 0 0 0-.007.024l-5.067 16.961-7.891 4.556-.037-.063v27.59c0 .772-.386 1.217-.948 1.217-.232 0-.495-.076-.772-.236l-42.473-24.522c-.95-.549-1.72-1.877-1.72-2.967v-1.035l-.021.047a5.111 5.111 0 0 0-1.816-.399 5.682 5.682 0 0 0-.546.001 13.724 13.724 0 0 1-1.918-.041c-1.655-.153-3.2-.6-4.404-1.296l-46.576-26.89.005.012-10.278-18.75c-1.001-1.827-.241-4.216 1.698-5.336l56.011-32.345a4.194 4.194 0 0 1 2.099-.572c1.326 0 2.572.659 3.227 1.853l.005-.003.227.413-.006.004a9.63 9.63 0 0 0 1.477 2.018l.277.27c1.914 1.85 4.468 2.801 7.113 2.801 1.949 0 3.948-.517 5.775-1.572.013 0 7.319-4.219 7.319-4.219a4.194 4.194 0 0 1 2.099-.572c1.326 0 2.572.658 3.226 1.853l3.25 5.928.022-.018 6.785 3.917-.105-.182 46.881-26.965m0-1.635c-.282 0-.563.073-.815.218l-46.169 26.556-5.41-3.124-3.005-5.481c-.913-1.667-2.699-2.702-4.66-2.703-1.011 0-2.02.274-2.917.792a3825 3825 0 0 1-7.275 4.195l-.044.024a9.937 9.937 0 0 1-4.957 1.353c-2.292 0-4.414-.832-5.976-2.342l-.252-.245a7.992 7.992 0 0 1-1.139-1.534 1.379 1.379 0 0 0-.06-.122l-.227-.414a1.718 1.718 0 0 0-.095-.154c-.938-1.574-2.673-2.545-4.571-2.545-1.011 0-2.02.274-2.917.792L3.125 155.502c-2.699 1.559-3.738 4.94-2.314 7.538l10.278 18.75c.177.323.448.563.761.704l46.426 26.804c1.403.81 3.157 1.332 5.072 1.508a15.661 15.661 0 0 0 2.146.046 4.766 4.766 0 0 1 .396 0c.096.004.19.011.283.022.109 1.593 1.159 3.323 2.529 4.114l42.472 24.522c.524.302 1.058.455 1.59.455 1.497 0 2.583-1.2 2.583-2.852v-26.562l7.111-4.105a1.64 1.64 0 0 0 .749-.948l4.658-15.593c4.414.797 8.692 1.848 12.742 3.128l.533.829a1.634 1.634 0 0 0 2.193.531l26.532-15.317L193 192.433c.523.302 1.058.455 1.59.455 1.497 0 2.583-1.199 2.583-2.852v-54.001c0-.584-.312-1.124-.818-1.416l-25.97-14.993a1.633 1.633 0 0 0-1.636.001c-.606.351-2.993 1.73-4.325 2.498l-4.809-4.255c-.819-.725-1.461-1.933-1.561-2.936a7.776 7.776 0 0 0-.033-.294 2.487 2.487 0 0 1-.023-.336v-.886c0-.584-.312-1.123-.817-1.416l-6.739-3.891a1.633 1.633 0 0 0-.817-.219' fill='#455A64'/><path d='M96.027 132.636l46.576 26.891c1.204.695 1.979 1.587 2.242 2.541l-.01.007-81.374 46.982h-.001c-1.654-.152-3.199-.6-4.403-1.295l-46.576-26.891 83.546-48.235' fill='#FAFAFA'/><path d='M63.461 209.174c-.008 0-.015 0-.022-.002-1.693-.156-3.228-.609-4.441-1.309l-46.576-26.89a.118.118 0 0 1 0-.203l83.546-48.235a.117.117 0 0 1 .117 0l46.576 26.891c1.227.708 2.021 1.612 2.296 2.611a.116.116 0 0 1-.042.124l-.021.016-81.375 46.981a.11.11 0 0 1-.058.016zm-50.747-28.303l46.401 26.79c1.178.68 2.671 1.121 4.32 1.276l81.272-46.922c-.279-.907-1.025-1.73-2.163-2.387l-46.517-26.857-83.313 48.1z' fill='#607D8B'/><path d='M148.327 165.471a5.85 5.85 0 0 1-.546.001c-1.894-.083-3.302-1.038-3.145-2.132a2.693 2.693 0 0 0-.072-1.105l-81.103 46.822c.628.058 1.272.073 1.918.042.182-.009.364-.009.546-.001 1.894.083 3.302 1.038 3.145 2.132l79.257-45.759' fill='#FFF'/><path d='M69.07 211.347a.118.118 0 0 1-.115-.134c.045-.317-.057-.637-.297-.925-.505-.61-1.555-1.022-2.738-1.074a5.966 5.966 0 0 0-.535.001 14.03 14.03 0 0 1-1.935-.041.117.117 0 0 1-.103-.092.116.116 0 0 1 .055-.126l81.104-46.822a.117.117 0 0 1 .171.07c.104.381.129.768.074 1.153-.045.316.057.637.296.925.506.61 1.555 1.021 2.739 1.073.178.008.357.008.535-.001a.117.117 0 0 1 .064.218l-79.256 45.759a.114.114 0 0 1-.059.016zm-3.405-2.372c.089 0 .177.002.265.006 1.266.056 2.353.488 2.908 1.158.227.274.35.575.36.882l78.685-45.429c-.036 0-.072-.001-.107-.003-1.267-.056-2.354-.489-2.909-1.158-.282-.34-.402-.724-.347-1.107a2.604 2.604 0 0 0-.032-.91L63.846 208.97a13.91 13.91 0 0 0 1.528.012c.097-.005.194-.007.291-.007z' fill='#607D8B'/><path d='M2.208 162.134c-1.001-1.827-.241-4.217 1.698-5.337l56.011-32.344c1.939-1.12 4.324-.546 5.326 1.281l.232.41a9.344 9.344 0 0 0 1.47 2.021l.278.27c3.325 3.214 8.583 3.716 12.888 1.23l7.319-4.22c1.94-1.119 4.324-.546 5.325 1.282l3.25 5.928-83.519 48.229-10.278-18.75z' fill='#FAFAFA'/><path d='M12.486 181.001a.112.112 0 0 1-.031-.005.114.114 0 0 1-.071-.056L2.106 162.19c-1.031-1.88-.249-4.345 1.742-5.494l56.01-32.344a4.328 4.328 0 0 1 2.158-.588c1.415 0 2.65.702 3.311 1.882.01.008.018.017.024.028l.227.414a.122.122 0 0 1 .013.038 9.508 9.508 0 0 0 1.439 1.959l.275.266c1.846 1.786 4.344 2.769 7.031 2.769 1.977 0 3.954-.538 5.717-1.557a.148.148 0 0 1 .035-.013l7.284-4.206a4.321 4.321 0 0 1 2.157-.588c1.427 0 2.672.716 3.329 1.914l3.249 5.929a.116.116 0 0 1-.044.157l-83.518 48.229a.116.116 0 0 1-.059.016zm49.53-57.004c-.704 0-1.41.193-2.041.557l-56.01 32.345c-1.882 1.086-2.624 3.409-1.655 5.179l10.221 18.645 83.317-48.112-3.195-5.829c-.615-1.122-1.783-1.792-3.124-1.792a4.08 4.08 0 0 0-2.04.557l-7.317 4.225a.148.148 0 0 1-.035.013 11.7 11.7 0 0 1-5.801 1.569c-2.748 0-5.303-1.007-7.194-2.835l-.278-.27a9.716 9.716 0 0 1-1.497-2.046.096.096 0 0 1-.013-.037l-.191-.347a.11.11 0 0 1-.023-.029c-.615-1.123-1.783-1.793-3.124-1.793z' fill='#607D8B'/><path d='M42.434 155.808c-2.51-.001-4.697-1.258-5.852-3.365-1.811-3.304-.438-7.634 3.059-9.654l12.291-7.098a7.599 7.599 0 0 1 3.789-1.033c2.51 0 4.697 1.258 5.852 3.365 1.811 3.304.439 7.634-3.059 9.654l-12.291 7.098a7.606 7.606 0 0 1-3.789 1.033zm13.287-20.683a7.128 7.128 0 0 0-3.555.971l-12.291 7.098c-3.279 1.893-4.573 5.942-2.883 9.024 1.071 1.955 3.106 3.122 5.442 3.122a7.13 7.13 0 0 0 3.556-.97l12.291-7.098c3.279-1.893 4.572-5.942 2.883-9.024-1.072-1.955-3.106-3.123-5.443-3.123z' fill='#607D8B'/><path d='M149.588 109.407l6.737 3.89v.887c0 .176.013.36.037.549.011.081.02.161.028.242.14 1.415.973 2.998 2.105 3.999l7.396 6.545c.177.156.358.295.541.415 1.579 1.04 2.95.466 3.062-1.282.049-.784.057-1.595.023-2.429l-.003-.16v-1.151l25.987 15.003v54c0 1.09-.77 1.53-1.72.982l-42.473-24.523c-.95-.548-1.72-1.877-1.72-2.966v-34.033' fill='#FAFAFA'/><path d='M194.553 191.25c-.257 0-.54-.085-.831-.253l-42.472-24.521c-.981-.567-1.779-1.943-1.779-3.068v-34.033h.234v34.033c0 1.051.745 2.336 1.661 2.866l42.473 24.521c.424.245.816.288 1.103.122.285-.164.442-.52.442-1.002v-53.933l-25.753-14.868.003 1.106c.034.832.026 1.654-.024 2.439-.054.844-.396 1.464-.963 1.746-.619.309-1.45.173-2.28-.373a5.023 5.023 0 0 1-.553-.426l-7.397-6.544c-1.158-1.026-1.999-2.625-2.143-4.076a9.624 9.624 0 0 0-.027-.238 4.241 4.241 0 0 1-.038-.564v-.82l-6.68-3.856.117-.202 6.738 3.89.058.034v.954c0 .171.012.351.036.533.011.083.021.165.029.246.138 1.395.948 2.935 2.065 3.923l7.397 6.545c.173.153.35.289.527.406.758.499 1.504.63 2.047.359.49-.243.786-.795.834-1.551.05-.778.057-1.591.024-2.417l-.004-.163v-1.355l.175.1 25.987 15.004.059.033v54.068c0 .569-.198.996-.559 1.204a1.002 1.002 0 0 1-.506.131' fill='#607D8B'/><path d='M145.685 163.161l24.115 13.922-25.978 14.998-1.462-.307c-6.534-2.17-13.628-3.728-21.019-4.616-4.365-.524-8.663 1.096-9.598 3.62a2.746 2.746 0 0 0-.011 1.928c1.538 4.267 4.236 8.363 7.995 12.135l.532.845-25.977 14.997-24.115-13.922 75.518-43.6' fill='#FFF'/><path d='M94.282 220.818l-.059-.033-24.29-14.024.175-.101 75.577-43.634.058.033 24.29 14.024-26.191 15.122-.045-.01-1.461-.307c-6.549-2.174-13.613-3.725-21.009-4.614a13.744 13.744 0 0 0-1.638-.097c-3.758 0-7.054 1.531-7.837 3.642a2.62 2.62 0 0 0-.01 1.848c1.535 4.258 4.216 8.326 7.968 12.091l.016.021.526.835.006.01.064.102-.105.061-25.977 14.998-.058.033zm-23.881-14.057l23.881 13.788 24.802-14.32c.546-.315.846-.489 1.017-.575l-.466-.74c-3.771-3.787-6.467-7.881-8.013-12.168a2.851 2.851 0 0 1 .011-2.008c.815-2.199 4.203-3.795 8.056-3.795.557 0 1.117.033 1.666.099 7.412.891 14.491 2.445 21.041 4.621.836.175 1.215.254 1.39.304l25.78-14.884-23.881-13.788-75.284 43.466z' fill='#607D8B'/><path d='M167.23 125.979v50.871l-27.321 15.773-6.461-14.167c-.91-1.996-3.428-1.738-5.624.574a10.238 10.238 0 0 0-2.33 4.018l-6.46 21.628-27.322 15.774v-50.871l75.518-43.6' fill='#FFF'/><path d='M91.712 220.567a.127.127 0 0 1-.059-.016.118.118 0 0 1-.058-.101v-50.871c0-.042.023-.08.058-.101l75.519-43.6a.117.117 0 0 1 .175.101v50.871c0 .041-.023.08-.059.1l-27.321 15.775a.118.118 0 0 1-.094.01.12.12 0 0 1-.071-.063l-6.46-14.168c-.375-.822-1.062-1.275-1.934-1.275-1.089 0-2.364.686-3.5 1.881a10.206 10.206 0 0 0-2.302 3.972l-6.46 21.627a.118.118 0 0 1-.054.068L91.77 220.551a.12.12 0 0 1-.058.016zm.117-50.92v50.601l27.106-15.65 6.447-21.583a10.286 10.286 0 0 1 2.357-4.065c1.18-1.242 2.517-1.954 3.669-1.954.969 0 1.731.501 2.146 1.411l6.407 14.051 27.152-15.676v-50.601l-75.284 43.466z' fill='#607D8B'/><path d='M168.543 126.213v50.87l-27.322 15.774-6.46-14.168c-.91-1.995-3.428-1.738-5.624.574a10.248 10.248 0 0 0-2.33 4.019l-6.461 21.627-27.321 15.774v-50.87l75.518-43.6' fill='#FFF'/><path d='M93.025 220.8a.123.123 0 0 1-.059-.015.12.12 0 0 1-.058-.101v-50.871c0-.042.023-.08.058-.101l75.518-43.6a.112.112 0 0 1 .117 0c.036.02.059.059.059.1v50.871a.116.116 0 0 1-.059.101l-27.321 15.774a.111.111 0 0 1-.094.01.115.115 0 0 1-.071-.062l-6.46-14.168c-.375-.823-1.062-1.275-1.935-1.275-1.088 0-2.363.685-3.499 1.881a10.19 10.19 0 0 0-2.302 3.971l-6.461 21.628a.108.108 0 0 1-.053.067l-27.322 15.775a.12.12 0 0 1-.058.015zm.117-50.919v50.6l27.106-15.649 6.447-21.584a10.293 10.293 0 0 1 2.357-4.065c1.179-1.241 2.516-1.954 3.668-1.954.969 0 1.732.502 2.147 1.412l6.407 14.051 27.152-15.676v-50.601l-75.284 43.466z' fill='#607D8B'/><path d='M169.8 177.083l-27.322 15.774-6.46-14.168c-.91-1.995-3.428-1.738-5.625.574a10.246 10.246 0 0 0-2.329 4.019l-6.461 21.627-27.321 15.774v-50.87l75.518-43.6v50.87z' fill='#FAFAFA'/><path d='M94.282 220.917a.234.234 0 0 1-.234-.233v-50.871c0-.083.045-.161.117-.202l75.518-43.601a.234.234 0 1 1 .35.202v50.871a.233.233 0 0 1-.116.202l-27.322 15.775a.232.232 0 0 1-.329-.106l-6.461-14.168c-.36-.789-.992-1.206-1.828-1.206-1.056 0-2.301.672-3.415 1.844a10.099 10.099 0 0 0-2.275 3.924l-6.46 21.628a.235.235 0 0 1-.107.136l-27.322 15.774a.23.23 0 0 1-.116.031zm.233-50.969v50.331l26.891-15.525 6.434-21.539a10.41 10.41 0 0 1 2.384-4.112c1.201-1.265 2.569-1.991 3.753-1.991 1.018 0 1.818.526 2.253 1.48l6.354 13.934 26.982-15.578v-50.331l-75.051 43.331z' fill='#607D8B'/><path d='M109.894 199.943c-1.774 0-3.241-.725-4.244-2.12a.224.224 0 0 1 .023-.294.233.233 0 0 1 .301-.023c.78.547 1.705.827 2.75.827 1.323 0 2.754-.439 4.256-1.306 5.311-3.067 9.631-10.518 9.631-16.611 0-1.927-.442-3.56-1.278-4.724a.232.232 0 0 1 .323-.327c1.671 1.172 2.591 3.381 2.591 6.219 0 6.242-4.426 13.863-9.865 17.003-1.574.908-3.084 1.356-4.488 1.356zm-2.969-1.542c.813.651 1.82.877 2.968.877h.001c1.321 0 2.753-.327 4.254-1.194 5.311-3.067 9.632-10.463 9.632-16.556 0-1.979-.463-3.599-1.326-4.761.411 1.035.625 2.275.625 3.635 0 6.243-4.426 13.883-9.865 17.023-1.574.909-3.084 1.317-4.49 1.317-.641 0-1.243-.149-1.799-.341z' fill='#607D8B'/><path d='M113.097 197.23c5.384-3.108 9.748-10.636 9.748-16.814 0-2.051-.483-3.692-1.323-4.86-1.784-1.252-4.374-1.194-7.257.47-5.384 3.108-9.748 10.636-9.748 16.814 0 2.051.483 3.692 1.323 4.86 1.784 1.252 4.374 1.194 7.257-.47' fill='#FAFAFA'/><path d='M108.724 198.614c-1.142 0-2.158-.213-3.019-.817-.021-.014-.04.014-.055-.007-.894-1.244-1.367-2.948-1.367-4.973 0-6.242 4.426-13.864 9.865-17.005 1.574-.908 3.084-1.363 4.49-1.363 1.142 0 2.158.309 3.018.913a.23.23 0 0 1 .056.056c.894 1.244 1.367 2.972 1.367 4.997 0 6.243-4.426 13.783-9.865 16.923-1.574.909-3.084 1.276-4.49 1.276zm-2.718-1.109c.774.532 1.688.776 2.718.776 1.323 0 2.754-.413 4.256-1.28 5.311-3.066 9.631-10.505 9.631-16.598 0-1.909-.434-3.523-1.255-4.685-.774-.533-1.688-.799-2.718-.799-1.323 0-2.755.441-4.256 1.308-5.311 3.066-9.631 10.506-9.631 16.599 0 1.909.434 3.517 1.255 4.679z' fill='#607D8B'/><path d='M149.318 114.262l-9.984 8.878 15.893 11.031 5.589-6.112-11.498-13.797' fill='#FAFAFA'/><path d='M169.676 120.84l-9.748 5.627c-3.642 2.103-9.528 2.113-13.147.024-3.62-2.089-3.601-5.488.041-7.591l9.495-5.608-6.729-3.885-81.836 47.071 45.923 26.514 3.081-1.779c.631-.365.869-.898.618-1.39-2.357-4.632-2.593-9.546-.683-14.262 5.638-13.92 24.509-24.815 48.618-28.07 8.169-1.103 16.68-.967 24.704.394.852.145 1.776.008 2.407-.357l3.081-1.778-25.825-14.91' fill='#FAFAFA'/><path d='M113.675 183.459a.47.47 0 0 1-.233-.062l-45.924-26.515a.468.468 0 0 1 .001-.809l81.836-47.071a.467.467 0 0 1 .466 0l6.729 3.885a.467.467 0 0 1-.467.809l-6.496-3.75-80.9 46.533 44.988 25.973 2.848-1.644c.192-.111.62-.409.435-.773-2.416-4.748-2.658-9.814-.7-14.65 2.806-6.927 8.885-13.242 17.582-18.263 8.657-4.998 19.518-8.489 31.407-10.094 8.198-1.107 16.79-.97 24.844.397.739.125 1.561.007 2.095-.301l2.381-1.374-25.125-14.506a.467.467 0 0 1 .467-.809l25.825 14.91a.467.467 0 0 1 0 .809l-3.081 1.779c-.721.417-1.763.575-2.718.413-7.963-1.351-16.457-1.486-24.563-.392-11.77 1.589-22.512 5.039-31.065 9.977-8.514 4.916-14.456 11.073-17.183 17.805-1.854 4.578-1.623 9.376.666 13.875.37.725.055 1.513-.8 2.006l-3.081 1.78a.476.476 0 0 1-.234.062' fill='#455A64'/><path d='M153.316 128.279c-2.413 0-4.821-.528-6.652-1.586-1.818-1.049-2.82-2.461-2.82-3.975 0-1.527 1.016-2.955 2.861-4.02l9.493-5.607a.233.233 0 1 1 .238.402l-9.496 5.609c-1.696.979-2.628 2.263-2.628 3.616 0 1.34.918 2.608 2.585 3.571 3.549 2.049 9.343 2.038 12.914-.024l9.748-5.628a.234.234 0 0 1 .234.405l-9.748 5.628c-1.858 1.072-4.296 1.609-6.729 1.609' fill='#607D8B'/><path d='M113.675 182.992l-45.913-26.508M113.675 183.342a.346.346 0 0 1-.175-.047l-45.913-26.508a.35.35 0 1 1 .35-.607l45.913 26.508a.35.35 0 0 1-.175.654' fill='#455A64'/><path d='M67.762 156.484v54.001c0 1.09.77 2.418 1.72 2.967l42.473 24.521c.95.549 1.72.11 1.72-.98v-54.001' fill='#FAFAFA'/><path d='M112.727 238.561c-.297 0-.62-.095-.947-.285l-42.473-24.521c-1.063-.613-1.895-2.05-1.895-3.27v-54.001a.35.35 0 1 1 .701 0v54.001c0 .96.707 2.18 1.544 2.663l42.473 24.522c.344.198.661.243.87.122.206-.119.325-.411.325-.799v-54.001a.35.35 0 1 1 .7 0v54.001c0 .655-.239 1.154-.675 1.406a1.235 1.235 0 0 1-.623.162' fill='#455A64'/><path d='M112.86 147.512h-.001c-2.318 0-4.499-.522-6.142-1.471-1.705-.984-2.643-2.315-2.643-3.749 0-1.445.952-2.791 2.68-3.788l12.041-6.953c1.668-.962 3.874-1.493 6.212-1.493 2.318 0 4.499.523 6.143 1.472 1.704.984 2.643 2.315 2.643 3.748 0 1.446-.952 2.791-2.68 3.789l-12.042 6.952c-1.668.963-3.874 1.493-6.211 1.493zm12.147-16.753c-2.217 0-4.298.497-5.861 1.399l-12.042 6.952c-1.502.868-2.33 1.998-2.33 3.182 0 1.173.815 2.289 2.293 3.142 1.538.889 3.596 1.378 5.792 1.378h.001c2.216 0 4.298-.497 5.861-1.399l12.041-6.953c1.502-.867 2.33-1.997 2.33-3.182 0-1.172-.814-2.288-2.292-3.142-1.539-.888-3.596-1.377-5.793-1.377z' fill='#607D8B'/><path d='M165.63 123.219l-5.734 3.311c-3.167 1.828-8.286 1.837-11.433.02-3.147-1.817-3.131-4.772.036-6.601l5.734-3.31 11.397 6.58' fill='#FAFAFA'/><path d='M154.233 117.448l9.995 5.771-4.682 2.704c-1.434.827-3.352 1.283-5.399 1.283-2.029 0-3.923-.449-5.333-1.263-1.29-.744-2-1.694-2-2.674 0-.991.723-1.955 2.036-2.713l5.383-3.108m0-.809l-5.734 3.31c-3.167 1.829-3.183 4.784-.036 6.601 1.568.905 3.623 1.357 5.684 1.357 2.077 0 4.159-.46 5.749-1.377l5.734-3.311-11.397-6.58M145.445 179.667c-1.773 0-3.241-.85-4.243-2.245-.067-.092-.057-.275.023-.356.08-.081.207-.12.3-.055.781.548 1.706.812 2.751.811 1.322 0 2.754-.446 4.256-1.313 5.31-3.066 9.631-10.522 9.631-16.615 0-1.927-.442-3.562-1.279-4.726a.235.235 0 0 1 .024-.301.232.232 0 0 1 .3-.027c1.67 1.172 2.59 3.38 2.59 6.219 0 6.242-4.425 13.987-9.865 17.127-1.573.908-3.083 1.481-4.488 1.481zM142.476 178c.814.651 1.82 1.002 2.969 1.002 1.322 0 2.753-.452 4.255-1.32 5.31-3.065 9.631-10.523 9.631-16.617 0-1.98-.463-3.63-1.325-4.793.411 1.035.624 2.26.624 3.62 0 6.242-4.425 13.875-9.865 17.015-1.573.909-3.084 1.376-4.489 1.376a5.49 5.49 0 0 1-1.8-.283z' fill='#607D8B'/><path d='M148.648 176.704c5.384-3.108 9.748-10.636 9.748-16.813 0-2.052-.483-3.693-1.322-4.861-1.785-1.252-4.375-1.194-7.258.471-5.383 3.108-9.748 10.636-9.748 16.813 0 2.051.484 3.692 1.323 4.86 1.785 1.253 4.374 1.195 7.257-.47' fill='#FAFAFA'/><path d='M144.276 178.276c-1.143 0-2.158-.307-3.019-.911a.217.217 0 0 1-.055-.054c-.895-1.244-1.367-2.972-1.367-4.997 0-6.241 4.425-13.875 9.865-17.016 1.573-.908 3.084-1.369 4.489-1.369 1.143 0 2.158.307 3.019.91a.24.24 0 0 1 .055.055c.894 1.244 1.367 2.971 1.367 4.997 0 6.241-4.425 13.875-9.865 17.016-1.573.908-3.084 1.369-4.489 1.369zm-2.718-1.172c.773.533 1.687.901 2.718.901 1.322 0 2.754-.538 4.256-1.405 5.31-3.066 9.631-10.567 9.631-16.661 0-1.908-.434-3.554-1.256-4.716-.774-.532-1.688-.814-2.718-.814-1.322 0-2.754.433-4.256 1.3-5.31 3.066-9.631 10.564-9.631 16.657 0 1.91.434 3.576 1.256 4.738z' fill='#607D8B'/><path d='M150.72 172.361l-.363-.295a24.105 24.105 0 0 0 2.148-3.128 24.05 24.05 0 0 0 1.977-4.375l.443.149a24.54 24.54 0 0 1-2.015 4.46 24.61 24.61 0 0 1-2.19 3.189M115.917 191.514l-.363-.294a24.174 24.174 0 0 0 2.148-3.128 24.038 24.038 0 0 0 1.976-4.375l.443.148a24.48 24.48 0 0 1-2.015 4.461 24.662 24.662 0 0 1-2.189 3.188M114 237.476V182.584 237.476' fill='#607D8B'/><g><path d='M81.822 37.474c.017-.135-.075-.28-.267-.392-.327-.188-.826-.21-1.109-.045l-6.012 3.471c-.131.076-.194.178-.191.285.002.132.002.461.002.578v.043l-.007.128-6.591 3.779c-.001 0-2.077 1.046-2.787 5.192 0 0-.912 6.961-.898 19.745.015 12.57.606 17.07 1.167 21.351.22 1.684 3.001 2.125 3.001 2.125.331.04.698-.027 1.08-.248l75.273-43.551c1.808-1.069 2.667-3.719 3.056-6.284 1.213-7.99 1.675-32.978-.275-39.878-.196-.693-.51-1.083-.868-1.282l-2.086-.79c-.727.028-1.416.467-1.534.535L82.032 37.072l-.21.402' fill='#FFF'/><path d='M144.311 1.701l2.085.79c.358.199.672.589.868 1.282 1.949 6.9 1.487 31.887.275 39.878-.39 2.565-1.249 5.215-3.056 6.284L69.21 93.486a1.78 1.78 0 0 1-.896.258l-.183-.011c0 .001-2.782-.44-3.003-2.124-.56-4.282-1.151-8.781-1.165-21.351-.015-12.784.897-19.745.897-19.745.71-4.146 2.787-5.192 2.787-5.192l6.591-3.779.007-.128v-.043c0-.117 0-.446-.002-.578-.003-.107.059-.21.191-.285l6.012-3.472a.98.98 0 0 1 .481-.11c.218 0 .449.053.627.156.193.112.285.258.268.392l.211-.402 60.744-34.836c.117-.068.806-.507 1.534-.535m0-.997l-.039.001c-.618.023-1.283.244-1.974.656l-.021.012-60.519 34.706a2.358 2.358 0 0 0-.831-.15c-.365 0-.704.084-.98.244l-6.012 3.471c-.442.255-.699.69-.689 1.166l.001.15-6.08 3.487c-.373.199-2.542 1.531-3.29 5.898l-.006.039c-.009.07-.92 7.173-.906 19.875.014 12.62.603 17.116 1.172 21.465l.002.015c.308 2.355 3.475 2.923 3.836 2.98l.034.004c.101.013.204.019.305.019a2.77 2.77 0 0 0 1.396-.392l75.273-43.552c1.811-1.071 2.999-3.423 3.542-6.997 1.186-7.814 1.734-33.096-.301-40.299-.253-.893-.704-1.527-1.343-1.882l-.132-.062-2.085-.789a.973.973 0 0 0-.353-.065' fill='#455A64'/><path d='M128.267 11.565l1.495.434-56.339 32.326' fill='#FFF'/><path d='M74.202 90.545a.5.5 0 0 1-.25-.931l18.437-10.645a.499.499 0 1 1 .499.864L74.451 90.478l-.249.067M75.764 42.654l-.108-.062.046-.171 5.135-2.964.17.045-.045.171-5.135 2.964-.063.017M70.52 90.375V46.421l.063-.036L137.84 7.554v43.954l-.062.036L70.52 90.375zm.25-43.811v43.38l66.821-38.579V7.985L70.77 46.564z' fill='#607D8B'/><path d='M86.986 83.182c-.23.149-.612.384-.849.523l-11.505 6.701c-.237.139-.206.252.068.252h.565c.275 0 .693-.113.93-.252L87.7 83.705c.237-.139.428-.253.425-.256a11.29 11.29 0 0 1-.006-.503c0-.274-.188-.377-.418-.227l-.715.463' fill='#607D8B'/><path d='M75.266 90.782H74.7c-.2 0-.316-.056-.346-.166-.03-.11.043-.217.215-.317l11.505-6.702c.236-.138.615-.371.844-.519l.715-.464a.488.488 0 0 1 .266-.089c.172 0 .345.13.345.421 0 .214.001.363.003.437l.006.004-.004.069c-.003.075-.003.075-.486.356l-11.505 6.702a2.282 2.282 0 0 1-.992.268zm-.6-.25l.034.001h.566c.252 0 .649-.108.866-.234l11.505-6.702c.168-.098.294-.173.361-.214-.004-.084-.004-.218-.004-.437l-.095-.171-.131.049-.714.463c-.232.15-.616.386-.854.525l-11.505 6.702-.029.018z' fill='#607D8B'/><path d='M75.266 89.871H74.7c-.2 0-.316-.056-.346-.166-.03-.11.043-.217.215-.317l11.505-6.702c.258-.151.694-.268.993-.268h.565c.2 0 .316.056.346.166.03.11-.043.217-.215.317l-11.505 6.702a2.282 2.282 0 0 1-.992.268zm-.6-.25l.034.001h.566c.252 0 .649-.107.866-.234l11.505-6.702.03-.018-.035-.001h-.565c-.252 0-.649.108-.867.234l-11.505 6.702-.029.018zM74.37 90.801v-1.247 1.247' fill='#607D8B'/><path d='M68.13 93.901c-.751-.093-1.314-.737-1.439-1.376-.831-4.238-1.151-8.782-1.165-21.352-.015-12.784.897-19.745.897-19.745.711-4.146 2.787-5.192 2.787-5.192l74.859-43.219c.223-.129 2.487-1.584 3.195.923 1.95 6.9 1.488 31.887.275 39.878-.389 2.565-1.248 5.215-3.056 6.283L69.21 93.653c-.382.221-.749.288-1.08.248 0 0-2.781-.441-3.001-2.125-.561-4.281-1.152-8.781-1.167-21.351-.014-12.784.898-19.745.898-19.745.71-4.146 2.787-5.191 2.787-5.191l6.598-3.81.871-.119 6.599-3.83.046-.461L68.13 93.901' fill='#FAFAFA'/><path d='M68.317 94.161l-.215-.013h-.001l-.244-.047c-.719-.156-2.772-.736-2.976-2.292-.568-4.34-1.154-8.813-1.168-21.384-.014-12.654.891-19.707.9-19.777.725-4.231 2.832-5.338 2.922-5.382l6.628-3.827.87-.119 6.446-3.742.034-.334a.248.248 0 0 1 .273-.223.248.248 0 0 1 .223.272l-.059.589-6.752 3.919-.87.118-6.556 3.785c-.031.016-1.99 1.068-2.666 5.018-.007.06-.908 7.086-.894 19.702.014 12.539.597 16.996 1.161 21.305.091.691.689 1.154 1.309 1.452a1.95 1.95 0 0 1-.236-.609c-.781-3.984-1.155-8.202-1.17-21.399-.014-12.653.891-19.707.9-19.777.725-4.231 2.832-5.337 2.922-5.382-.004.001 74.444-42.98 74.846-43.212l.028-.017c.904-.538 1.72-.688 2.36-.433.555.221.949.733 1.172 1.52 2.014 7.128 1.46 32.219.281 39.983-.507 3.341-1.575 5.515-3.175 6.462L69.335 93.869a2.023 2.023 0 0 1-1.018.292zm-.147-.507c.293.036.604-.037.915-.217l75.273-43.551c1.823-1.078 2.602-3.915 2.934-6.106 1.174-7.731 1.731-32.695-.268-39.772-.178-.631-.473-1.032-.876-1.192-.484-.193-1.166-.052-1.921.397l-.034.021-74.858 43.218c-.031.017-1.989 1.069-2.666 5.019-.007.059-.908 7.085-.894 19.702.015 13.155.386 17.351 1.161 21.303.09.461.476.983 1.037 1.139.114.025.185.037.196.039h.001z' fill='#455A64'/><path d='M69.317 68.982c.489-.281.885-.056.885.505 0 .56-.396 1.243-.885 1.525-.488.282-.884.057-.884-.504 0-.56.396-1.243.884-1.526' fill='#FFF'/><path d='M68.92 71.133c-.289 0-.487-.228-.487-.625 0-.56.396-1.243.884-1.526a.812.812 0 0 1 .397-.121c.289 0 .488.229.488.626 0 .56-.396 1.243-.885 1.525a.812.812 0 0 1-.397.121m.794-2.459a.976.976 0 0 0-.49.147c-.548.317-.978 1.058-.978 1.687 0 .486.271.812.674.812a.985.985 0 0 0 .491-.146c.548-.317.978-1.057.978-1.687 0-.486-.272-.813-.675-.813' fill='#8097A2'/><path d='M68.92 70.947c-.271 0-.299-.307-.299-.439 0-.491.361-1.116.79-1.363a.632.632 0 0 1 .303-.096c.272 0 .301.306.301.438 0 .491-.363 1.116-.791 1.364a.629.629 0 0 1-.304.096m.794-2.086a.812.812 0 0 0-.397.121c-.488.283-.884.966-.884 1.526 0 .397.198.625.487.625a.812.812 0 0 0 .397-.121c.489-.282.885-.965.885-1.525 0-.397-.199-.626-.488-.626' fill='#8097A2'/><path d='M69.444 85.35c.264-.152.477-.031.477.272 0 .303-.213.67-.477.822-.263.153-.477.031-.477-.271 0-.302.214-.671.477-.823' fill='#FFF'/><path d='M69.23 86.51c-.156 0-.263-.123-.263-.337 0-.302.214-.671.477-.823a.431.431 0 0 1 .214-.066c.156 0 .263.124.263.338 0 .303-.213.67-.477.822a.431.431 0 0 1-.214.066m.428-1.412c-.1 0-.203.029-.307.09-.32.185-.57.618-.57.985 0 .309.185.524.449.524a.63.63 0 0 0 .308-.09c.32-.185.57-.618.57-.985 0-.309-.185-.524-.45-.524' fill='#8097A2'/><path d='M69.23 86.322l-.076-.149c0-.235.179-.544.384-.661l.12-.041.076.151c0 .234-.179.542-.383.66l-.121.04m.428-1.038a.431.431 0 0 0-.214.066c-.263.152-.477.521-.477.823 0 .214.107.337.263.337a.431.431 0 0 0 .214-.066c.264-.152.477-.519.477-.822 0-.214-.107-.338-.263-.338' fill='#8097A2'/><path d='M139.278 7.769v43.667L72.208 90.16V46.493l67.07-38.724' fill='#455A64'/><path d='M72.083 90.375V46.421l.063-.036 67.257-38.831v43.954l-.062.036-67.258 38.831zm.25-43.811v43.38l66.821-38.579V7.985L72.333 46.564z' fill='#607D8B'/></g><path d='M125.737 88.647l-7.639 3.334V84l-11.459 4.713v8.269L99 100.315l13.369 3.646 13.368-15.314' fill='#455A64'/></g></svg>\";\n\nfunction RotateInstructions() {\n  this.loadIcon_();\n  var overlay = document.createElement('div');\n  var s = overlay.style;\n  s.position = 'fixed';\n  s.top = 0;\n  s.right = 0;\n  s.bottom = 0;\n  s.left = 0;\n  s.backgroundColor = 'gray';\n  s.fontFamily = 'sans-serif';\n  s.zIndex = 1000000;\n  var img = document.createElement('img');\n  img.src = this.icon;\n  var s = img.style;\n  s.marginLeft = '25%';\n  s.marginTop = '25%';\n  s.width = '50%';\n  overlay.appendChild(img);\n  var text = document.createElement('div');\n  var s = text.style;\n  s.textAlign = 'center';\n  s.fontSize = '16px';\n  s.lineHeight = '24px';\n  s.margin = '24px 25%';\n  s.width = '50%';\n  text.innerHTML = 'Place your phone into your Cardboard viewer.';\n  overlay.appendChild(text);\n  var snackbar = document.createElement('div');\n  var s = snackbar.style;\n  s.backgroundColor = '#CFD8DC';\n  s.position = 'fixed';\n  s.bottom = 0;\n  s.width = '100%';\n  s.height = '48px';\n  s.padding = '14px 24px';\n  s.boxSizing = 'border-box';\n  s.color = '#656A6B';\n  overlay.appendChild(snackbar);\n  var snackbarText = document.createElement('div');\n  snackbarText.style.float = 'left';\n  snackbarText.innerHTML = 'No Cardboard viewer?';\n  var snackbarButton = document.createElement('a');\n  snackbarButton.href = 'https://www.google.com/get/cardboard/get-cardboard/';\n  snackbarButton.innerHTML = 'get one';\n  snackbarButton.target = '_blank';\n  var s = snackbarButton.style;\n  s.float = 'right';\n  s.fontWeight = 600;\n  s.textTransform = 'uppercase';\n  s.borderLeft = '1px solid gray';\n  s.paddingLeft = '24px';\n  s.textDecoration = 'none';\n  s.color = '#656A6B';\n  snackbar.appendChild(snackbarText);\n  snackbar.appendChild(snackbarButton);\n  this.overlay = overlay;\n  this.text = text;\n  this.hide();\n}\nRotateInstructions.prototype.show = function (parent) {\n  if (!parent && !this.overlay.parentElement) {\n    document.body.appendChild(this.overlay);\n  } else if (parent) {\n    if (this.overlay.parentElement && this.overlay.parentElement != parent) this.overlay.parentElement.removeChild(this.overlay);\n    parent.appendChild(this.overlay);\n  }\n  this.overlay.style.display = 'block';\n  var img = this.overlay.querySelector('img');\n  var s = img.style;\n  if (isLandscapeMode()) {\n    s.width = '20%';\n    s.marginLeft = '40%';\n    s.marginTop = '3%';\n  } else {\n    s.width = '50%';\n    s.marginLeft = '25%';\n    s.marginTop = '25%';\n  }\n};\nRotateInstructions.prototype.hide = function () {\n  this.overlay.style.display = 'none';\n};\nRotateInstructions.prototype.showTemporarily = function (ms, parent) {\n  this.show(parent);\n  this.timer = setTimeout(this.hide.bind(this), ms);\n};\nRotateInstructions.prototype.disableShowTemporarily = function () {\n  clearTimeout(this.timer);\n};\nRotateInstructions.prototype.update = function () {\n  this.disableShowTemporarily();\n  if (!isLandscapeMode() && isMobile()) {\n    this.show();\n  } else {\n    this.hide();\n  }\n};\nRotateInstructions.prototype.loadIcon_ = function () {\n  this.icon = dataUri('image/svg+xml', rotateInstructionsAsset);\n};\n\nvar DEFAULT_VIEWER = 'CardboardV1';\nvar VIEWER_KEY = 'WEBVR_CARDBOARD_VIEWER';\nvar CLASS_NAME = 'webvr-polyfill-viewer-selector';\nfunction ViewerSelector(defaultViewer) {\n  try {\n    this.selectedKey = localStorage.getItem(VIEWER_KEY);\n  } catch (error) {\n    console.error('Failed to load viewer profile: %s', error);\n  }\n  if (!this.selectedKey) {\n    this.selectedKey = defaultViewer || DEFAULT_VIEWER;\n  }\n  this.dialog = this.createDialog_(DeviceInfo.Viewers);\n  this.root = null;\n  this.onChangeCallbacks_ = [];\n}\nViewerSelector.prototype.show = function (root) {\n  this.root = root;\n  root.appendChild(this.dialog);\n  var selected = this.dialog.querySelector('#' + this.selectedKey);\n  selected.checked = true;\n  this.dialog.style.display = 'block';\n};\nViewerSelector.prototype.hide = function () {\n  if (this.root && this.root.contains(this.dialog)) {\n    this.root.removeChild(this.dialog);\n  }\n  this.dialog.style.display = 'none';\n};\nViewerSelector.prototype.getCurrentViewer = function () {\n  return DeviceInfo.Viewers[this.selectedKey];\n};\nViewerSelector.prototype.getSelectedKey_ = function () {\n  var input = this.dialog.querySelector('input[name=field]:checked');\n  if (input) {\n    return input.id;\n  }\n  return null;\n};\nViewerSelector.prototype.onChange = function (cb) {\n  this.onChangeCallbacks_.push(cb);\n};\nViewerSelector.prototype.fireOnChange_ = function (viewer) {\n  for (var i = 0; i < this.onChangeCallbacks_.length; i++) {\n    this.onChangeCallbacks_[i](viewer);\n  }\n};\nViewerSelector.prototype.onSave_ = function () {\n  this.selectedKey = this.getSelectedKey_();\n  if (!this.selectedKey || !DeviceInfo.Viewers[this.selectedKey]) {\n    console.error('ViewerSelector.onSave_: this should never happen!');\n    return;\n  }\n  this.fireOnChange_(DeviceInfo.Viewers[this.selectedKey]);\n  try {\n    localStorage.setItem(VIEWER_KEY, this.selectedKey);\n  } catch (error) {\n    console.error('Failed to save viewer profile: %s', error);\n  }\n  this.hide();\n};\nViewerSelector.prototype.createDialog_ = function (options) {\n  var container = document.createElement('div');\n  container.classList.add(CLASS_NAME);\n  container.style.display = 'none';\n  var overlay = document.createElement('div');\n  var s = overlay.style;\n  s.position = 'fixed';\n  s.left = 0;\n  s.top = 0;\n  s.width = '100%';\n  s.height = '100%';\n  s.background = 'rgba(0, 0, 0, 0.3)';\n  overlay.addEventListener('click', this.hide.bind(this));\n  var width = 280;\n  var dialog = document.createElement('div');\n  var s = dialog.style;\n  s.boxSizing = 'border-box';\n  s.position = 'fixed';\n  s.top = '24px';\n  s.left = '50%';\n  s.marginLeft = -width / 2 + 'px';\n  s.width = width + 'px';\n  s.padding = '24px';\n  s.overflow = 'hidden';\n  s.background = '#fafafa';\n  s.fontFamily = \"'Roboto', sans-serif\";\n  s.boxShadow = '0px 5px 20px #666';\n  dialog.appendChild(this.createH1_('Select your viewer'));\n  for (var id in options) {\n    dialog.appendChild(this.createChoice_(id, options[id].label));\n  }\n  dialog.appendChild(this.createButton_('Save', this.onSave_.bind(this)));\n  container.appendChild(overlay);\n  container.appendChild(dialog);\n  return container;\n};\nViewerSelector.prototype.createH1_ = function (name) {\n  var h1 = document.createElement('h1');\n  var s = h1.style;\n  s.color = 'black';\n  s.fontSize = '20px';\n  s.fontWeight = 'bold';\n  s.marginTop = 0;\n  s.marginBottom = '24px';\n  h1.innerHTML = name;\n  return h1;\n};\nViewerSelector.prototype.createChoice_ = function (id, name) {\n  var div = document.createElement('div');\n  div.style.marginTop = '8px';\n  div.style.color = 'black';\n  var input = document.createElement('input');\n  input.style.fontSize = '30px';\n  input.setAttribute('id', id);\n  input.setAttribute('type', 'radio');\n  input.setAttribute('value', id);\n  input.setAttribute('name', 'field');\n  var label = document.createElement('label');\n  label.style.marginLeft = '4px';\n  label.setAttribute('for', id);\n  label.innerHTML = name;\n  div.appendChild(input);\n  div.appendChild(label);\n  return div;\n};\nViewerSelector.prototype.createButton_ = function (label, onclick) {\n  var button = document.createElement('button');\n  button.innerHTML = label;\n  var s = button.style;\n  s.float = 'right';\n  s.textTransform = 'uppercase';\n  s.color = '#1094f7';\n  s.fontSize = '14px';\n  s.letterSpacing = 0;\n  s.border = 0;\n  s.background = 'none';\n  s.marginTop = '16px';\n  button.addEventListener('click', onclick);\n  return button;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar NoSleep = createCommonjsModule(function (module, exports) {\n(function webpackUniversalModuleDefinition(root, factory) {\n\tmodule.exports = factory();\n})(commonjsGlobal, function() {\nreturn          (function(modules) {\n         \tvar installedModules = {};\n         \tfunction __webpack_require__(moduleId) {\n         \t\tif(installedModules[moduleId]) {\n         \t\t\treturn installedModules[moduleId].exports;\n         \t\t}\n         \t\tvar module = installedModules[moduleId] = {\n         \t\t\ti: moduleId,\n         \t\t\tl: false,\n         \t\t\texports: {}\n         \t\t};\n         \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n         \t\tmodule.l = true;\n         \t\treturn module.exports;\n         \t}\n         \t__webpack_require__.m = modules;\n         \t__webpack_require__.c = installedModules;\n         \t__webpack_require__.d = function(exports, name, getter) {\n         \t\tif(!__webpack_require__.o(exports, name)) {\n         \t\t\tObject.defineProperty(exports, name, {\n         \t\t\t\tconfigurable: false,\n         \t\t\t\tenumerable: true,\n         \t\t\t\tget: getter\n         \t\t\t});\n         \t\t}\n         \t};\n         \t__webpack_require__.n = function(module) {\n         \t\tvar getter = module && module.__esModule ?\n         \t\t\tfunction getDefault() { return module['default']; } :\n         \t\t\tfunction getModuleExports() { return module; };\n         \t\t__webpack_require__.d(getter, 'a', getter);\n         \t\treturn getter;\n         \t};\n         \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n         \t__webpack_require__.p = \"\";\n         \treturn __webpack_require__(__webpack_require__.s = 0);\n         })\n         ([\n      (function(module, exports, __webpack_require__) {\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar mediaFile = __webpack_require__(1);\nvar oldIOS = typeof navigator !== 'undefined' && parseFloat(('' + (/CPU.*OS ([0-9_]{3,4})[0-9_]{0,1}|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent) || [0, ''])[1]).replace('undefined', '3_2').replace('_', '.').replace('_', '')) < 10 && !window.MSStream;\nvar NoSleep = function () {\n  function NoSleep() {\n    _classCallCheck(this, NoSleep);\n    if (oldIOS) {\n      this.noSleepTimer = null;\n    } else {\n      this.noSleepVideo = document.createElement('video');\n      this.noSleepVideo.setAttribute('playsinline', '');\n      this.noSleepVideo.setAttribute('src', mediaFile);\n      this.noSleepVideo.addEventListener('timeupdate', function (e) {\n        if (this.noSleepVideo.currentTime > 0.5) {\n          this.noSleepVideo.currentTime = Math.random();\n        }\n      }.bind(this));\n    }\n  }\n  _createClass(NoSleep, [{\n    key: 'enable',\n    value: function enable() {\n      if (oldIOS) {\n        this.disable();\n        this.noSleepTimer = window.setInterval(function () {\n          window.location.href = '/';\n          window.setTimeout(window.stop, 0);\n        }, 15000);\n      } else {\n        this.noSleepVideo.play();\n      }\n    }\n  }, {\n    key: 'disable',\n    value: function disable() {\n      if (oldIOS) {\n        if (this.noSleepTimer) {\n          window.clearInterval(this.noSleepTimer);\n          this.noSleepTimer = null;\n        }\n      } else {\n        this.noSleepVideo.pause();\n      }\n    }\n  }]);\n  return NoSleep;\n}();\n\nmodule.exports = NoSleep;\n      }),\n      (function(module, exports, __webpack_require__) {\n\"use strict\";\nmodule.exports = 'data:video/mp4;base64,AAAAIGZ0eXBtcDQyAAACAGlzb21pc28yYXZjMW1wNDEAAAAIZnJlZQAACKBtZGF0AAAC8wYF///v3EXpvebZSLeWLNgg2SPu73gyNjQgLSBjb3JlIDE0MiByMjQ3OSBkZDc5YTYxIC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENvcHlsZWZ0IDIwMDMtMjAxNCAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9wdGlvbnM6IGNhYmFjPTEgcmVmPTEgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MToweDExMSBtZT1oZXggc3VibWU9MiBwc3k9MSBwc3lfcmQ9MS4wMDowLjAwIG1peGVkX3JlZj0wIG1lX3JhbmdlPTE2IGNocm9tYV9tZT0xIHRyZWxsaXM9MCA4eDhkY3Q9MCBjcW09MCBkZWFkem9uZT0yMSwxMSBmYXN0X3Bza2lwPTEgY2hyb21hX3FwX29mZnNldD0wIHRocmVhZHM9NiBsb29rYWhlYWRfdGhyZWFkcz0xIHNsaWNlZF90aHJlYWRzPTAgbnI9MCBkZWNpbWF0ZT0xIGludGVybGFjZWQ9MCBibHVyYXlfY29tcGF0PTAgY29uc3RyYWluZWRfaW50cmE9MCBiZnJhbWVzPTMgYl9weXJhbWlkPTIgYl9hZGFwdD0xIGJfYmlhcz0wIGRpcmVjdD0xIHdlaWdodGI9MSBvcGVuX2dvcD0wIHdlaWdodHA9MSBrZXlpbnQ9MzAwIGtleWludF9taW49MzAgc2NlbmVjdXQ9NDAgaW50cmFfcmVmcmVzaD0wIHJjX2xvb2thaGVhZD0xMCByYz1jcmYgbWJ0cmVlPTEgY3JmPTIwLjAgcWNvbXA9MC42MCBxcG1pbj0wIHFwbWF4PTY5IHFwc3RlcD00IHZidl9tYXhyYXRlPTIwMDAwIHZidl9idWZzaXplPTI1MDAwIGNyZl9tYXg9MC4wIG5hbF9ocmQ9bm9uZSBmaWxsZXI9MCBpcF9yYXRpbz0xLjQwIGFxPTE6MS4wMACAAAAAOWWIhAA3//p+C7v8tDDSTjf97w55i3SbRPO4ZY+hkjD5hbkAkL3zpJ6h/LR1CAABzgB1kqqzUorlhQAAAAxBmiQYhn/+qZYADLgAAAAJQZ5CQhX/AAj5IQAD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';\n      })\n         ]);\n});\n});\nvar NoSleep$1 = unwrapExports(NoSleep);\n\nvar nextDisplayId = 1000;\nvar defaultLeftBounds = [0, 0, 0.5, 1];\nvar defaultRightBounds = [0.5, 0, 0.5, 1];\nvar raf = window.requestAnimationFrame;\nvar caf = window.cancelAnimationFrame;\nfunction VRFrameData() {\n  this.leftProjectionMatrix = new Float32Array(16);\n  this.leftViewMatrix = new Float32Array(16);\n  this.rightProjectionMatrix = new Float32Array(16);\n  this.rightViewMatrix = new Float32Array(16);\n  this.pose = null;\n}\nfunction VRDisplayCapabilities(config) {\n  Object.defineProperties(this, {\n    hasPosition: {\n      writable: false, enumerable: true, value: config.hasPosition\n    },\n    hasExternalDisplay: {\n      writable: false, enumerable: true, value: config.hasExternalDisplay\n    },\n    canPresent: {\n      writable: false, enumerable: true, value: config.canPresent\n    },\n    maxLayers: {\n      writable: false, enumerable: true, value: config.maxLayers\n    },\n    hasOrientation: {\n      enumerable: true, get: function get() {\n        deprecateWarning('VRDisplayCapabilities.prototype.hasOrientation', 'VRDisplay.prototype.getFrameData');\n        return config.hasOrientation;\n      }\n    }\n  });\n}\nfunction VRDisplay(config) {\n  config = config || {};\n  var USE_WAKELOCK = 'wakelock' in config ? config.wakelock : true;\n  this.isPolyfilled = true;\n  this.displayId = nextDisplayId++;\n  this.displayName = '';\n  this.depthNear = 0.01;\n  this.depthFar = 10000.0;\n  this.isPresenting = false;\n  Object.defineProperty(this, 'isConnected', {\n    get: function get() {\n      deprecateWarning('VRDisplay.prototype.isConnected', 'VRDisplayCapabilities.prototype.hasExternalDisplay');\n      return false;\n    }\n  });\n  this.capabilities = new VRDisplayCapabilities({\n    hasPosition: false,\n    hasOrientation: false,\n    hasExternalDisplay: false,\n    canPresent: false,\n    maxLayers: 1\n  });\n  this.stageParameters = null;\n  this.waitingForPresent_ = false;\n  this.layer_ = null;\n  this.originalParent_ = null;\n  this.fullscreenElement_ = null;\n  this.fullscreenWrapper_ = null;\n  this.fullscreenElementCachedStyle_ = null;\n  this.fullscreenEventTarget_ = null;\n  this.fullscreenChangeHandler_ = null;\n  this.fullscreenErrorHandler_ = null;\n  if (USE_WAKELOCK && isMobile()) {\n    this.wakelock_ = new NoSleep$1();\n  }\n}\nVRDisplay.prototype.getFrameData = function (frameData) {\n  return frameDataFromPose(frameData, this._getPose(), this);\n};\nVRDisplay.prototype.getPose = function () {\n  deprecateWarning('VRDisplay.prototype.getPose', 'VRDisplay.prototype.getFrameData');\n  return this._getPose();\n};\nVRDisplay.prototype.resetPose = function () {\n  deprecateWarning('VRDisplay.prototype.resetPose');\n  return this._resetPose();\n};\nVRDisplay.prototype.getImmediatePose = function () {\n  deprecateWarning('VRDisplay.prototype.getImmediatePose', 'VRDisplay.prototype.getFrameData');\n  return this._getPose();\n};\nVRDisplay.prototype.requestAnimationFrame = function (callback) {\n  return raf(callback);\n};\nVRDisplay.prototype.cancelAnimationFrame = function (id) {\n  return caf(id);\n};\nVRDisplay.prototype.wrapForFullscreen = function (element) {\n  if (isIOS()) {\n    return element;\n  }\n  if (!this.fullscreenWrapper_) {\n    this.fullscreenWrapper_ = document.createElement('div');\n    var cssProperties = ['height: ' + Math.min(screen.height, screen.width) + 'px !important', 'top: 0 !important', 'left: 0 !important', 'right: 0 !important', 'border: 0', 'margin: 0', 'padding: 0', 'z-index: 999999 !important', 'position: fixed'];\n    this.fullscreenWrapper_.setAttribute('style', cssProperties.join('; ') + ';');\n    this.fullscreenWrapper_.classList.add('webvr-polyfill-fullscreen-wrapper');\n  }\n  if (this.fullscreenElement_ == element) {\n    return this.fullscreenWrapper_;\n  }\n  if (this.fullscreenElement_) {\n    if (this.originalParent_) {\n      this.originalParent_.appendChild(this.fullscreenElement_);\n    } else {\n      this.fullscreenElement_.parentElement.removeChild(this.fullscreenElement_);\n    }\n  }\n  this.fullscreenElement_ = element;\n  this.originalParent_ = element.parentElement;\n  if (!this.originalParent_) {\n    document.body.appendChild(element);\n  }\n  if (!this.fullscreenWrapper_.parentElement) {\n    var parent = this.fullscreenElement_.parentElement;\n    parent.insertBefore(this.fullscreenWrapper_, this.fullscreenElement_);\n    parent.removeChild(this.fullscreenElement_);\n  }\n  this.fullscreenWrapper_.insertBefore(this.fullscreenElement_, this.fullscreenWrapper_.firstChild);\n  this.fullscreenElementCachedStyle_ = this.fullscreenElement_.getAttribute('style');\n  var self = this;\n  function applyFullscreenElementStyle() {\n    if (!self.fullscreenElement_) {\n      return;\n    }\n    var cssProperties = ['position: absolute', 'top: 0', 'left: 0', 'width: ' + Math.max(screen.width, screen.height) + 'px', 'height: ' + Math.min(screen.height, screen.width) + 'px', 'border: 0', 'margin: 0', 'padding: 0'];\n    self.fullscreenElement_.setAttribute('style', cssProperties.join('; ') + ';');\n  }\n  applyFullscreenElementStyle();\n  return this.fullscreenWrapper_;\n};\nVRDisplay.prototype.removeFullscreenWrapper = function () {\n  if (!this.fullscreenElement_) {\n    return;\n  }\n  var element = this.fullscreenElement_;\n  if (this.fullscreenElementCachedStyle_) {\n    element.setAttribute('style', this.fullscreenElementCachedStyle_);\n  } else {\n    element.removeAttribute('style');\n  }\n  this.fullscreenElement_ = null;\n  this.fullscreenElementCachedStyle_ = null;\n  var parent = this.fullscreenWrapper_.parentElement;\n  this.fullscreenWrapper_.removeChild(element);\n  if (this.originalParent_ === parent) {\n    parent.insertBefore(element, this.fullscreenWrapper_);\n  }\n  else if (this.originalParent_) {\n      this.originalParent_.appendChild(element);\n    }\n  parent.removeChild(this.fullscreenWrapper_);\n  return element;\n};\nVRDisplay.prototype.requestPresent = function (layers) {\n  var wasPresenting = this.isPresenting;\n  var self = this;\n  if (!(layers instanceof Array)) {\n    deprecateWarning('VRDisplay.prototype.requestPresent with non-array argument', 'an array of VRLayers as the first argument');\n    layers = [layers];\n  }\n  return new Promise(function (resolve, reject) {\n    if (!self.capabilities.canPresent) {\n      reject(new Error('VRDisplay is not capable of presenting.'));\n      return;\n    }\n    if (layers.length == 0 || layers.length > self.capabilities.maxLayers) {\n      reject(new Error('Invalid number of layers.'));\n      return;\n    }\n    var incomingLayer = layers[0];\n    if (!incomingLayer.source) {\n      resolve();\n      return;\n    }\n    var leftBounds = incomingLayer.leftBounds || defaultLeftBounds;\n    var rightBounds = incomingLayer.rightBounds || defaultRightBounds;\n    if (wasPresenting) {\n      var layer = self.layer_;\n      if (layer.source !== incomingLayer.source) {\n        layer.source = incomingLayer.source;\n      }\n      for (var i = 0; i < 4; i++) {\n        layer.leftBounds[i] = leftBounds[i];\n        layer.rightBounds[i] = rightBounds[i];\n      }\n      self.wrapForFullscreen(self.layer_.source);\n      self.updatePresent_();\n      resolve();\n      return;\n    }\n    self.layer_ = {\n      predistorted: incomingLayer.predistorted,\n      source: incomingLayer.source,\n      leftBounds: leftBounds.slice(0),\n      rightBounds: rightBounds.slice(0)\n    };\n    self.waitingForPresent_ = false;\n    if (self.layer_ && self.layer_.source) {\n      var fullscreenElement = self.wrapForFullscreen(self.layer_.source);\n      var onFullscreenChange = function onFullscreenChange() {\n        var actualFullscreenElement = getFullscreenElement();\n        self.isPresenting = fullscreenElement === actualFullscreenElement;\n        if (self.isPresenting) {\n          if (screen.orientation && screen.orientation.lock) {\n            screen.orientation.lock('landscape-primary').catch(function (error) {\n              console.error('screen.orientation.lock() failed due to', error.message);\n            });\n          }\n          self.waitingForPresent_ = false;\n          self.beginPresent_();\n          resolve();\n        } else {\n          if (screen.orientation && screen.orientation.unlock) {\n            screen.orientation.unlock();\n          }\n          self.removeFullscreenWrapper();\n          self.disableWakeLock();\n          self.endPresent_();\n          self.removeFullscreenListeners_();\n        }\n        self.fireVRDisplayPresentChange_();\n      };\n      var onFullscreenError = function onFullscreenError() {\n        if (!self.waitingForPresent_) {\n          return;\n        }\n        self.removeFullscreenWrapper();\n        self.removeFullscreenListeners_();\n        self.disableWakeLock();\n        self.waitingForPresent_ = false;\n        self.isPresenting = false;\n        reject(new Error('Unable to present.'));\n      };\n      self.addFullscreenListeners_(fullscreenElement, onFullscreenChange, onFullscreenError);\n      if (requestFullscreen(fullscreenElement)) {\n        self.enableWakeLock();\n        self.waitingForPresent_ = true;\n      } else if (isIOS() || isWebViewAndroid()) {\n        self.enableWakeLock();\n        self.isPresenting = true;\n        self.beginPresent_();\n        self.fireVRDisplayPresentChange_();\n        resolve();\n      }\n    }\n    if (!self.waitingForPresent_ && !isIOS()) {\n      exitFullscreen();\n      reject(new Error('Unable to present.'));\n    }\n  });\n};\nVRDisplay.prototype.exitPresent = function () {\n  var wasPresenting = this.isPresenting;\n  var self = this;\n  this.isPresenting = false;\n  this.layer_ = null;\n  this.disableWakeLock();\n  return new Promise(function (resolve, reject) {\n    if (wasPresenting) {\n      if (!exitFullscreen() && isIOS()) {\n        self.endPresent_();\n        self.fireVRDisplayPresentChange_();\n      }\n      if (isWebViewAndroid()) {\n        self.removeFullscreenWrapper();\n        self.removeFullscreenListeners_();\n        self.endPresent_();\n        self.fireVRDisplayPresentChange_();\n      }\n      resolve();\n    } else {\n      reject(new Error('Was not presenting to VRDisplay.'));\n    }\n  });\n};\nVRDisplay.prototype.getLayers = function () {\n  if (this.layer_) {\n    return [this.layer_];\n  }\n  return [];\n};\nVRDisplay.prototype.fireVRDisplayPresentChange_ = function () {\n  var event = new CustomEvent('vrdisplaypresentchange', { detail: { display: this } });\n  window.dispatchEvent(event);\n};\nVRDisplay.prototype.fireVRDisplayConnect_ = function () {\n  var event = new CustomEvent('vrdisplayconnect', { detail: { display: this } });\n  window.dispatchEvent(event);\n};\nVRDisplay.prototype.addFullscreenListeners_ = function (element, changeHandler, errorHandler) {\n  this.removeFullscreenListeners_();\n  this.fullscreenEventTarget_ = element;\n  this.fullscreenChangeHandler_ = changeHandler;\n  this.fullscreenErrorHandler_ = errorHandler;\n  if (changeHandler) {\n    if (document.fullscreenEnabled) {\n      element.addEventListener('fullscreenchange', changeHandler, false);\n    } else if (document.webkitFullscreenEnabled) {\n      element.addEventListener('webkitfullscreenchange', changeHandler, false);\n    } else if (document.mozFullScreenEnabled) {\n      document.addEventListener('mozfullscreenchange', changeHandler, false);\n    } else if (document.msFullscreenEnabled) {\n      element.addEventListener('msfullscreenchange', changeHandler, false);\n    }\n  }\n  if (errorHandler) {\n    if (document.fullscreenEnabled) {\n      element.addEventListener('fullscreenerror', errorHandler, false);\n    } else if (document.webkitFullscreenEnabled) {\n      element.addEventListener('webkitfullscreenerror', errorHandler, false);\n    } else if (document.mozFullScreenEnabled) {\n      document.addEventListener('mozfullscreenerror', errorHandler, false);\n    } else if (document.msFullscreenEnabled) {\n      element.addEventListener('msfullscreenerror', errorHandler, false);\n    }\n  }\n};\nVRDisplay.prototype.removeFullscreenListeners_ = function () {\n  if (!this.fullscreenEventTarget_) return;\n  var element = this.fullscreenEventTarget_;\n  if (this.fullscreenChangeHandler_) {\n    var changeHandler = this.fullscreenChangeHandler_;\n    element.removeEventListener('fullscreenchange', changeHandler, false);\n    element.removeEventListener('webkitfullscreenchange', changeHandler, false);\n    document.removeEventListener('mozfullscreenchange', changeHandler, false);\n    element.removeEventListener('msfullscreenchange', changeHandler, false);\n  }\n  if (this.fullscreenErrorHandler_) {\n    var errorHandler = this.fullscreenErrorHandler_;\n    element.removeEventListener('fullscreenerror', errorHandler, false);\n    element.removeEventListener('webkitfullscreenerror', errorHandler, false);\n    document.removeEventListener('mozfullscreenerror', errorHandler, false);\n    element.removeEventListener('msfullscreenerror', errorHandler, false);\n  }\n  this.fullscreenEventTarget_ = null;\n  this.fullscreenChangeHandler_ = null;\n  this.fullscreenErrorHandler_ = null;\n};\nVRDisplay.prototype.enableWakeLock = function () {\n  if (this.wakelock_) {\n    this.wakelock_.enable();\n  }\n};\nVRDisplay.prototype.disableWakeLock = function () {\n  if (this.wakelock_) {\n    this.wakelock_.disable();\n  }\n};\nVRDisplay.prototype.beginPresent_ = function () {\n};\nVRDisplay.prototype.endPresent_ = function () {\n};\nVRDisplay.prototype.submitFrame = function (pose) {\n};\nVRDisplay.prototype.getEyeParameters = function (whichEye) {\n  return null;\n};\n\nvar config = {\n  ADDITIONAL_VIEWERS: [],\n  DEFAULT_VIEWER: '',\n  MOBILE_WAKE_LOCK: true,\n  DEBUG: false,\n  DPDB_URL: 'https://dpdb.webvr.rocks/dpdb.json',\n  K_FILTER: 0.98,\n  PREDICTION_TIME_S: 0.040,\n  CARDBOARD_UI_DISABLED: false,\n  ROTATE_INSTRUCTIONS_DISABLED: false,\n  YAW_ONLY: false,\n  BUFFER_SCALE: 0.5,\n  DIRTY_SUBMIT_FRAME_BINDINGS: false\n};\n\nvar Eye = {\n  LEFT: 'left',\n  RIGHT: 'right'\n};\nfunction CardboardVRDisplay(config$$1) {\n  var defaults = extend({}, config);\n  config$$1 = extend(defaults, config$$1 || {});\n  VRDisplay.call(this, {\n    wakelock: config$$1.MOBILE_WAKE_LOCK\n  });\n  this.config = config$$1;\n  this.displayName = 'Cardboard VRDisplay';\n  this.capabilities = new VRDisplayCapabilities({\n    hasPosition: false,\n    hasOrientation: true,\n    hasExternalDisplay: false,\n    canPresent: true,\n    maxLayers: 1\n  });\n  this.stageParameters = null;\n  this.bufferScale_ = this.config.BUFFER_SCALE;\n  this.poseSensor_ = new PoseSensor(this.config);\n  this.distorter_ = null;\n  this.cardboardUI_ = null;\n  this.dpdb_ = new Dpdb(this.config.DPDB_URL, this.onDeviceParamsUpdated_.bind(this));\n  this.deviceInfo_ = new DeviceInfo(this.dpdb_.getDeviceParams(), config$$1.ADDITIONAL_VIEWERS);\n  this.viewerSelector_ = new ViewerSelector(config$$1.DEFAULT_VIEWER);\n  this.viewerSelector_.onChange(this.onViewerChanged_.bind(this));\n  this.deviceInfo_.setViewer(this.viewerSelector_.getCurrentViewer());\n  if (!this.config.ROTATE_INSTRUCTIONS_DISABLED) {\n    this.rotateInstructions_ = new RotateInstructions();\n  }\n  if (isIOS()) {\n    window.addEventListener('resize', this.onResize_.bind(this));\n  }\n}\nCardboardVRDisplay.prototype = Object.create(VRDisplay.prototype);\nCardboardVRDisplay.prototype._getPose = function () {\n  return {\n    position: null,\n    orientation: this.poseSensor_.getOrientation(),\n    linearVelocity: null,\n    linearAcceleration: null,\n    angularVelocity: null,\n    angularAcceleration: null\n  };\n};\nCardboardVRDisplay.prototype._resetPose = function () {\n  if (this.poseSensor_.resetPose) {\n    this.poseSensor_.resetPose();\n  }\n};\nCardboardVRDisplay.prototype._getFieldOfView = function (whichEye) {\n  var fieldOfView;\n  if (whichEye == Eye.LEFT) {\n    fieldOfView = this.deviceInfo_.getFieldOfViewLeftEye();\n  } else if (whichEye == Eye.RIGHT) {\n    fieldOfView = this.deviceInfo_.getFieldOfViewRightEye();\n  } else {\n    console.error('Invalid eye provided: %s', whichEye);\n    return null;\n  }\n  return fieldOfView;\n};\nCardboardVRDisplay.prototype._getEyeOffset = function (whichEye) {\n  var offset;\n  if (whichEye == Eye.LEFT) {\n    offset = [-this.deviceInfo_.viewer.interLensDistance * 0.5, 0.0, 0.0];\n  } else if (whichEye == Eye.RIGHT) {\n    offset = [this.deviceInfo_.viewer.interLensDistance * 0.5, 0.0, 0.0];\n  } else {\n    console.error('Invalid eye provided: %s', whichEye);\n    return null;\n  }\n  return offset;\n};\nCardboardVRDisplay.prototype.getEyeParameters = function (whichEye) {\n  var offset = this._getEyeOffset(whichEye);\n  var fieldOfView = this._getFieldOfView(whichEye);\n  var eyeParams = {\n    offset: offset,\n    renderWidth: this.deviceInfo_.device.width * 0.5 * this.bufferScale_,\n    renderHeight: this.deviceInfo_.device.height * this.bufferScale_\n  };\n  Object.defineProperty(eyeParams, 'fieldOfView', {\n    enumerable: true,\n    get: function get() {\n      deprecateWarning('VRFieldOfView', 'VRFrameData\\'s projection matrices');\n      return fieldOfView;\n    }\n  });\n  return eyeParams;\n};\nCardboardVRDisplay.prototype.onDeviceParamsUpdated_ = function (newParams) {\n  if (this.config.DEBUG) {\n    console.log('DPDB reported that device params were updated.');\n  }\n  this.deviceInfo_.updateDeviceParams(newParams);\n  if (this.distorter_) {\n    this.distorter_.updateDeviceInfo(this.deviceInfo_);\n  }\n};\nCardboardVRDisplay.prototype.updateBounds_ = function () {\n  if (this.layer_ && this.distorter_ && (this.layer_.leftBounds || this.layer_.rightBounds)) {\n    this.distorter_.setTextureBounds(this.layer_.leftBounds, this.layer_.rightBounds);\n  }\n};\nCardboardVRDisplay.prototype.beginPresent_ = function () {\n  var gl = this.layer_.source.getContext('webgl');\n  if (!gl) gl = this.layer_.source.getContext('experimental-webgl');\n  if (!gl) gl = this.layer_.source.getContext('webgl2');\n  if (!gl) return;\n  if (this.layer_.predistorted) {\n    if (!this.config.CARDBOARD_UI_DISABLED) {\n      gl.canvas.width = getScreenWidth() * this.bufferScale_;\n      gl.canvas.height = getScreenHeight() * this.bufferScale_;\n      this.cardboardUI_ = new CardboardUI(gl);\n    }\n  } else {\n    if (!this.config.CARDBOARD_UI_DISABLED) {\n      this.cardboardUI_ = new CardboardUI(gl);\n    }\n    this.distorter_ = new CardboardDistorter(gl, this.cardboardUI_, this.config.BUFFER_SCALE, this.config.DIRTY_SUBMIT_FRAME_BINDINGS);\n    this.distorter_.updateDeviceInfo(this.deviceInfo_);\n  }\n  if (this.cardboardUI_) {\n    this.cardboardUI_.listen(function (e) {\n      this.viewerSelector_.show(this.layer_.source.parentElement);\n      e.stopPropagation();\n      e.preventDefault();\n    }.bind(this), function (e) {\n      this.exitPresent();\n      e.stopPropagation();\n      e.preventDefault();\n    }.bind(this));\n  }\n  if (this.rotateInstructions_) {\n    if (isLandscapeMode() && isMobile()) {\n      this.rotateInstructions_.showTemporarily(3000, this.layer_.source.parentElement);\n    } else {\n      this.rotateInstructions_.update();\n    }\n  }\n  this.orientationHandler = this.onOrientationChange_.bind(this);\n  window.addEventListener('orientationchange', this.orientationHandler);\n  this.vrdisplaypresentchangeHandler = this.updateBounds_.bind(this);\n  window.addEventListener('vrdisplaypresentchange', this.vrdisplaypresentchangeHandler);\n  this.fireVRDisplayDeviceParamsChange_();\n};\nCardboardVRDisplay.prototype.endPresent_ = function () {\n  if (this.distorter_) {\n    this.distorter_.destroy();\n    this.distorter_ = null;\n  }\n  if (this.cardboardUI_) {\n    this.cardboardUI_.destroy();\n    this.cardboardUI_ = null;\n  }\n  if (this.rotateInstructions_) {\n    this.rotateInstructions_.hide();\n  }\n  this.viewerSelector_.hide();\n  window.removeEventListener('orientationchange', this.orientationHandler);\n  window.removeEventListener('vrdisplaypresentchange', this.vrdisplaypresentchangeHandler);\n};\nCardboardVRDisplay.prototype.updatePresent_ = function () {\n  this.endPresent_();\n  this.beginPresent_();\n};\nCardboardVRDisplay.prototype.submitFrame = function (pose) {\n  if (this.distorter_) {\n    this.updateBounds_();\n    this.distorter_.submitFrame();\n  } else if (this.cardboardUI_ && this.layer_) {\n    var gl = this.layer_.source.getContext('webgl');\n    if (!gl) gl = this.layer_.source.getContext('experimental-webgl');\n    if (!gl) gl = this.layer_.source.getContext('webgl2');\n    var canvas = gl.canvas;\n    if (canvas.width != this.lastWidth || canvas.height != this.lastHeight) {\n      this.cardboardUI_.onResize();\n    }\n    this.lastWidth = canvas.width;\n    this.lastHeight = canvas.height;\n    this.cardboardUI_.render();\n  }\n};\nCardboardVRDisplay.prototype.onOrientationChange_ = function (e) {\n  this.viewerSelector_.hide();\n  if (this.rotateInstructions_) {\n    this.rotateInstructions_.update();\n  }\n  this.onResize_();\n};\nCardboardVRDisplay.prototype.onResize_ = function (e) {\n  if (this.layer_) {\n    var gl = this.layer_.source.getContext('webgl');\n    if (!gl) gl = this.layer_.source.getContext('experimental-webgl');\n    if (!gl) gl = this.layer_.source.getContext('webgl2');\n    var cssProperties = ['position: absolute', 'top: 0', 'left: 0',\n    'width: 100vw', 'height: 100vh', 'border: 0', 'margin: 0',\n    'padding: 0px', 'box-sizing: content-box'];\n    gl.canvas.setAttribute('style', cssProperties.join('; ') + ';');\n    safariCssSizeWorkaround(gl.canvas);\n  }\n};\nCardboardVRDisplay.prototype.onViewerChanged_ = function (viewer) {\n  this.deviceInfo_.setViewer(viewer);\n  if (this.distorter_) {\n    this.distorter_.updateDeviceInfo(this.deviceInfo_);\n  }\n  this.fireVRDisplayDeviceParamsChange_();\n};\nCardboardVRDisplay.prototype.fireVRDisplayDeviceParamsChange_ = function () {\n  var event = new CustomEvent('vrdisplaydeviceparamschange', {\n    detail: {\n      vrdisplay: this,\n      deviceInfo: this.deviceInfo_\n    }\n  });\n  window.dispatchEvent(event);\n};\nCardboardVRDisplay.VRFrameData = VRFrameData;\nCardboardVRDisplay.VRDisplay = VRDisplay;\n\nreturn CardboardVRDisplay;\n\n})));\n", "'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n", "export const REVISION = '134';\nexport const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nexport const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nexport const CullFaceNone = 0;\nexport const CullFaceBack = 1;\nexport const CullFaceFront = 2;\nexport const CullFaceFrontBack = 3;\nexport const BasicShadowMap = 0;\nexport const PCFShadowMap = 1;\nexport const PCFSoftShadowMap = 2;\nexport const VSMShadowMap = 3;\nexport const FrontSide = 0;\nexport const BackSide = 1;\nexport const DoubleSide = 2;\nexport const FlatShading = 1;\nexport const SmoothShading = 2;\nexport const NoBlending = 0;\nexport const NormalBlending = 1;\nexport const AdditiveBlending = 2;\nexport const SubtractiveBlending = 3;\nexport const MultiplyBlending = 4;\nexport const CustomBlending = 5;\nexport const AddEquation = 100;\nexport const SubtractEquation = 101;\nexport const ReverseSubtractEquation = 102;\nexport const MinEquation = 103;\nexport const MaxEquation = 104;\nexport const ZeroFactor = 200;\nexport const OneFactor = 201;\nexport const SrcColorFactor = 202;\nexport const OneMinusSrcColorFactor = 203;\nexport const SrcAlphaFactor = 204;\nexport const OneMinusSrcAlphaFactor = 205;\nexport const DstAlphaFactor = 206;\nexport const OneMinusDstAlphaFactor = 207;\nexport const DstColorFactor = 208;\nexport const OneMinusDstColorFactor = 209;\nexport const SrcAlphaSaturateFactor = 210;\nexport const NeverDepth = 0;\nexport const AlwaysDepth = 1;\nexport const LessDepth = 2;\nexport const LessEqualDepth = 3;\nexport const EqualDepth = 4;\nexport const GreaterEqualDepth = 5;\nexport const GreaterDepth = 6;\nexport const NotEqualDepth = 7;\nexport const MultiplyOperation = 0;\nexport const MixOperation = 1;\nexport const AddOperation = 2;\nexport const NoToneMapping = 0;\nexport const LinearToneMapping = 1;\nexport const ReinhardToneMapping = 2;\nexport const CineonToneMapping = 3;\nexport const ACESFilmicToneMapping = 4;\nexport const CustomToneMapping = 5;\n\nexport const UVMapping = 300;\nexport const CubeReflectionMapping = 301;\nexport const CubeRefractionMapping = 302;\nexport const EquirectangularReflectionMapping = 303;\nexport const EquirectangularRefractionMapping = 304;\nexport const CubeUVReflectionMapping = 306;\nexport const CubeUVRefractionMapping = 307;\nexport const RepeatWrapping = 1000;\nexport const ClampToEdgeWrapping = 1001;\nexport const MirroredRepeatWrapping = 1002;\nexport const NearestFilter = 1003;\nexport const NearestMipmapNearestFilter = 1004;\nexport const NearestMipMapNearestFilter = 1004;\nexport const NearestMipmapLinearFilter = 1005;\nexport const NearestMipMapLinearFilter = 1005;\nexport const LinearFilter = 1006;\nexport const LinearMipmapNearestFilter = 1007;\nexport const LinearMipMapNearestFilter = 1007;\nexport const LinearMipmapLinearFilter = 1008;\nexport const LinearMipMapLinearFilter = 1008;\nexport const UnsignedByteType = 1009;\nexport const ByteType = 1010;\nexport const ShortType = 1011;\nexport const UnsignedShortType = 1012;\nexport const IntType = 1013;\nexport const UnsignedIntType = 1014;\nexport const FloatType = 1015;\nexport const HalfFloatType = 1016;\nexport const UnsignedShort4444Type = 1017;\nexport const UnsignedShort5551Type = 1018;\nexport const UnsignedShort565Type = 1019;\nexport const UnsignedInt248Type = 1020;\nexport const AlphaFormat = 1021;\nexport const RGBFormat = 1022;\nexport const RGBAFormat = 1023;\nexport const LuminanceFormat = 1024;\nexport const LuminanceAlphaFormat = 1025;\nexport const RGBEFormat = RGBAFormat;\nexport const DepthFormat = 1026;\nexport const DepthStencilFormat = 1027;\nexport const RedFormat = 1028;\nexport const RedIntegerFormat = 1029;\nexport const RGFormat = 1030;\nexport const RGIntegerFormat = 1031;\nexport const RGBIntegerFormat = 1032;\nexport const RGBAIntegerFormat = 1033;\n\nexport const RGB_S3TC_DXT1_Format = 33776;\nexport const RGBA_S3TC_DXT1_Format = 33777;\nexport const RGBA_S3TC_DXT3_Format = 33778;\nexport const RGBA_S3TC_DXT5_Format = 33779;\nexport const RGB_PVRTC_4BPPV1_Format = 35840;\nexport const RGB_PVRTC_2BPPV1_Format = 35841;\nexport const RGBA_PVRTC_4BPPV1_Format = 35842;\nexport const RGBA_PVRTC_2BPPV1_Format = 35843;\nexport const RGB_ETC1_Format = 36196;\nexport const RGB_ETC2_Format = 37492;\nexport const RGBA_ETC2_EAC_Format = 37496;\nexport const RGBA_ASTC_4x4_Format = 37808;\nexport const RGBA_ASTC_5x4_Format = 37809;\nexport const RGBA_ASTC_5x5_Format = 37810;\nexport const RGBA_ASTC_6x5_Format = 37811;\nexport const RGBA_ASTC_6x6_Format = 37812;\nexport const RGBA_ASTC_8x5_Format = 37813;\nexport const RGBA_ASTC_8x6_Format = 37814;\nexport const RGBA_ASTC_8x8_Format = 37815;\nexport const RGBA_ASTC_10x5_Format = 37816;\nexport const RGBA_ASTC_10x6_Format = 37817;\nexport const RGBA_ASTC_10x8_Format = 37818;\nexport const RGBA_ASTC_10x10_Format = 37819;\nexport const RGBA_ASTC_12x10_Format = 37820;\nexport const RGBA_ASTC_12x12_Format = 37821;\nexport const RGBA_BPTC_Format = 36492;\nexport const SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\nexport const SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\nexport const SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\nexport const SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\nexport const SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\nexport const SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\nexport const SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\nexport const SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\nexport const SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\nexport const SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\nexport const SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\nexport const SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\nexport const SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\nexport const SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\nexport const LoopOnce = 2200;\nexport const LoopRepeat = 2201;\nexport const LoopPingPong = 2202;\nexport const InterpolateDiscrete = 2300;\nexport const InterpolateLinear = 2301;\nexport const InterpolateSmooth = 2302;\nexport const ZeroCurvatureEnding = 2400;\nexport const ZeroSlopeEnding = 2401;\nexport const WrapAroundEnding = 2402;\nexport const NormalAnimationBlendMode = 2500;\nexport const AdditiveAnimationBlendMode = 2501;\nexport const TrianglesDrawMode = 0;\nexport const TriangleStripDrawMode = 1;\nexport const TriangleFanDrawMode = 2;\nexport const LinearEncoding = 3000;\nexport const sRGBEncoding = 3001;\nexport const GammaEncoding = 3007;\nexport const RGBEEncoding = 3002;\nexport const LogLuvEncoding = 3003;\nexport const RGBM7Encoding = 3004;\nexport const RGBM16Encoding = 3005;\nexport const RGBDEncoding = 3006;\nexport const BasicDepthPacking = 3200;\nexport const RGBADepthPacking = 3201;\nexport const TangentSpaceNormalMap = 0;\nexport const ObjectSpaceNormalMap = 1;\n\nexport const ZeroStencilOp = 0;\nexport const KeepStencilOp = 7680;\nexport const ReplaceStencilOp = 7681;\nexport const IncrementStencilOp = 7682;\nexport const DecrementStencilOp = 7683;\nexport const IncrementWrapStencilOp = 34055;\nexport const DecrementWrapStencilOp = 34056;\nexport const InvertStencilOp = 5386;\n\nexport const NeverStencilFunc = 512;\nexport const LessStencilFunc = 513;\nexport const EqualStencilFunc = 514;\nexport const LessEqualStencilFunc = 515;\nexport const GreaterStencilFunc = 516;\nexport const NotEqualStencilFunc = 517;\nexport const GreaterEqualStencilFunc = 518;\nexport const AlwaysStencilFunc = 519;\n\nexport const StaticDrawUsage = 35044;\nexport const DynamicDrawUsage = 35048;\nexport const StreamDrawUsage = 35040;\nexport const StaticReadUsage = 35045;\nexport const DynamicReadUsage = 35049;\nexport const StreamReadUsage = 35041;\nexport const StaticCopyUsage = 35046;\nexport const DynamicCopyUsage = 35050;\nexport const StreamCopyUsage = 35042;\n\nexport const GLSL1 = '100';\nexport const GLSL3 = '300 es';\n", "/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { EventDispatcher };\n", "let _seed = 1234567;\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n//\n\nconst _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nconst hasRandomUUID = typeof crypto !== 'undefined' && 'randomUUID' in crypto;\n\nfunction generateUUID() {\n\n\tif ( hasRandomUUID ) {\n\n\t\treturn crypto.randomUUID().toUpperCase();\n\n\t}\n\n\t// TODO Remove this code when crypto.randomUUID() is available everywhere\n\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toUpperCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t// Park-Miller algorithm\n\n\t_seed = _seed * 16807 % 2147483647;\n\n\treturn ( _seed - 1 ) / 2147483646;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\n\n\n\nexport {\n\tDEG2RAD,\n\tRAD2DEG,\n\tgenerateUUID,\n\tclamp,\n\teuclideanModulo,\n\tmapLinear,\n\tinverseLerp,\n\tlerp,\n\tdamp,\n\tpingpong,\n\tsmoothstep,\n\tsmootherstep,\n\trandInt,\n\trandFloat,\n\trandFloatSpread,\n\tseededRandom,\n\tdegToRad,\n\tradToDeg,\n\tisPowerOfTwo,\n\tceilPowerOfTwo,\n\tfloorPowerOfTwo,\n\tsetQuaternionFromProperEuler,\n};\n", "class Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nVector2.prototype.isVector2 = true;\n\nexport { Vector2 };\n", "class Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nMatrix3.prototype.isMatrix3 = true;\n\nexport { Matrix3 };\n", "function arrayMin( array ) {\n\n\tif ( array.length === 0 ) return Infinity;\n\n\tlet min = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] < min ) min = array[ i ];\n\n\t}\n\n\treturn min;\n\n}\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tlet max = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\n/**\n  * cyrb53 hash for string from: https://stackoverflow.com/a/52171480\n  *\n  * Public Domain, @bryc - https://stackoverflow.com/users/815680/bryc\n  *\n  * It is roughly similar to the well-known MurmurHash/xxHash algorithms. It uses a combination\n  * of multiplication and Xorshift to generate the hash, but not as thorough. As a result it's\n  * faster than either would be in JavaScript and significantly simpler to implement. Keep in\n  * mind this is not a secure algorithm, if privacy/security is a concern, this is not for you.\n  *\n  * @param {string} str\n  * @param {number} seed, default 0\n  * @returns number\n  */\nfunction hashString( str, seed = 0 ) {\n\n\tlet h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n\n\tfor ( let i = 0, ch; i < str.length; i ++ ) {\n\n\t\tch = str.charCodeAt( i );\n\n\t\th1 = Math.imul( h1 ^ ch, 2654435761 );\n\n\t\th2 = Math.imul( h2 ^ ch, 1597334677 );\n\n\t}\n\n\th1 = Math.imul( h1 ^ ( h1 >>> 16 ), 2246822507 ) ^ Math.imul( h2 ^ ( h2 >>> 13 ), 3266489909 );\n\n\th2 = Math.imul( h2 ^ ( h2 >>> 16 ), 2246822507 ) ^ Math.imul( h1 ^ ( h1 >>> 13 ), 3266489909 );\n\n\treturn 4294967296 * ( 2097151 & h2 ) + ( h1 >>> 0 );\n\n}\n\nexport { arrayMin, arrayMax, getTypedArray, createElementNS, hashString };\n", "import { createElementNS } from '../utils.js';\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n}\n\nexport { ImageUtils };\n", "import { EventDispatcher } from '../core/EventDispatcher.js';\nimport {\n\tMirroredRepeatWrapping,\n\tClampToEdgeWrapping,\n\tRepeatWrapping,\n\tLinearEncoding,\n\tUnsignedByteType,\n\tRGBAFormat,\n\tLinearMipmapLinearFilter,\n\tLinearFilter,\n\tUVMapping\n} from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { ImageUtils } from '../extras/ImageUtils.js';\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tconst image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = MathUtils.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tlet url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( let i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t// check cube texture with data textures\n\n\t\t\t\t\t\tif ( image[ i ].isDataTexture ) {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ].image ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = serializeImage( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nexport { Texture };\n", "class Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\nVector4.prototype.isVector4 = true;\n\nexport { Vector4 };\n", "import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { Texture } from '../textures/Texture.js';\nimport { LinearFilter } from '../constants.js';\nimport { Vector4 } from '../math/Vector4.js';\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tsetTexture( texture ) {\n\n\t\ttexture.image = {\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\tdepth: this.depth\n\t\t};\n\n\t\tthis.texture = texture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.image = { ...this.texture.image }; // See #20328.\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\nexport { WebGLRenderTarget };\n", "import { WebGLRenderTarget } from './WebGLRenderTarget.js';\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.samples = 4;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n}\n\nWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\nexport { WebGLMultisampleRenderTarget };\n", "import * as MathUtils from './MathUtils.js';\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\tthis.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nexport { Quaternion };\n", "import * as MathUtils from './MathUtils.js';\nimport { Quaternion } from './Quaternion.js';\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nexport { Vector3 };\n", "import { Vector3 } from './Vector3.js';\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box );\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1, _v0 );\n\t\t_f1.subVectors( _v2, _v1 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1, _v2, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox3.prototype.isBox3 = true;\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector = /*@__PURE__*/ new Vector3();\n\nconst _box = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nexport { Box3 };\n", "import { Box3 } from './Box3.js';\nimport { Vector3 } from './Vector3.js';\n\nconst _box = /*@__PURE__*/ new Box3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\tthis.expandByPoint( _v1.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nexport { Sphere };\n", "import { Vector3 } from './Vector3.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector.dot( this.direction );\n\t\tconst d2 = _vector.dot( _vector ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nexport { Ray };\n", "import { Vector3 } from './Vector3.js';\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nexport { Matrix4 };\n", "import { Quaternion } from './Quaternion.js';\nimport { Vector3 } from './Vector3.js';\nimport { Matrix4 } from './Matrix4.js';\nimport { clamp } from './MathUtils.js';\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\ttoVector3( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nEuler.prototype.isEuler = true;\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nexport { Euler };\n", "class Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n}\n\n\nexport { Layers };\n", "import { Quaternion } from '../math/Quaternion.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { Euler } from '../math/Euler.js';\nimport { Layers } from './Layers.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nlet _object3DId = 0;\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1.lookAt( _position, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1.lookAt( _target, _position, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast() {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype.isObject3D = true;\n\nexport { Object3D };\n", "import { Vector3 } from './Vector3.js';\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0.subVectors( a, b );\n\t\ttarget.cross( _v0 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0.subVectors( c, a );\n\t\t_v1.subVectors( b, a );\n\t\t_v2.subVectors( point, a );\n\n\t\tconst dot00 = _v0.dot( _v0 );\n\t\tconst dot01 = _v0.dot( _v1 );\n\t\tconst dot02 = _v0.dot( _v2 );\n\t\tconst dot11 = _v1.dot( _v1 );\n\t\tconst dot12 = _v1.dot( _v2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3 );\n\n\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0.subVectors( c, b );\n\t\t_v1.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0.cross( _v1 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0.subVectors( this.c, this.b );\n\t\t_v1.subVectors( this.a, this.b );\n\n\t\treturn _v0.cross( _v1 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nexport { Triangle };\n", "import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { FrontSide, FlatShading, NormalBlending, LessEqualDepth, AddEquation, OneMinusSrcAlphaFactor, SrcAlphaFactor, AlwaysStencilFunc, KeepStencilOp, RGBAFormat } from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.format = RGBAFormat;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.format !== RGBAFormat ) data.format = this.format;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.format = source.format;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nMaterial.prototype.isMaterial = true;\n\nexport { Material };\n", "import * as MathUtils from './MathUtils.js';\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopyGammaToLinear( color, gammaFactor = 2.0 ) {\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToGamma( color, gammaFactor = 2.0 ) {\n\n\t\tconst safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t}\n\n\tconvertGammaToLinear( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToGamma( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex() {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t}\n\n\tgetHexString() {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle() {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\nexport { Color };\n", "import { Material } from './Material.js';\nimport { MultiplyOperation } from '../constants.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n * }\n */\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nexport { MeshBasicMaterial };\n", "import { Vector4 } from '../math/Vector4.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\nimport { StaticDrawUsage } from '../constants.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tcopyColorsArray( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector2sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector3sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector4sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2.fromBufferAttribute( this, i );\n\t\t\t\t_vector2.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2.x, _vector2.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( this, i );\n\t\t\t\t_vector.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\nBufferAttribute.prototype.isBufferAttribute = true;\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\n//\n\nexport {\n\tFloat64BufferAttribute,\n\tFloat32BufferAttribute,\n\tFloat16BufferAttribute,\n\tUint32BufferAttribute,\n\tInt32BufferAttribute,\n\tUint16BufferAttribute,\n\tInt16BufferAttribute,\n\tUint8ClampedBufferAttribute,\n\tUint8BufferAttribute,\n\tInt8BufferAttribute,\n\tBufferAttribute\n};\n", "import { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Box3 } from '../math/Box3.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { BufferAttribute, Float32BufferAttribute, Uint16BufferAttribute, Uint32BufferAttribute } from './BufferAttribute.js';\nimport { Sphere } from '../math/Sphere.js';\nimport { Object3D } from './Object3D.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { arrayMax } from '../utils.js';\n\nlet _id = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector.addVectors( this.boundingBox.min, _box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector );\n\n\t\t\t\t\t\t_vector.addVectors( this.boundingBox.max, _box.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector.addVectors( _box.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box.expandByPoint( _vector );\n\n\t\t\t\t\t\t_vector.addVectors( _box.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box.expandByPoint( _vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( attributes.tangent === undefined ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = attributes.tangent.array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( normals, i );\n\n\t\t\t_vector.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nBufferGeometry.prototype.isBufferGeometry = true;\n\nexport { BufferGeometry };\n", "import { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Sphere } from '../math/Sphere.js';\nimport { Ray } from '../math/Ray.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Triangle } from '../math/Triangle.js';\nimport { DoubleSide, BackSide } from '../constants.js';\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tconst uv = geometry.attributes.uv;\n\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\tconst groups = geometry.groups;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n}\n\nMesh.prototype.isMesh = true;\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA.fromBufferAttribute( position, a );\n\t_vB.fromBufferAttribute( position, b );\n\t_vC.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA.add( _morphA );\n\t\t_vB.add( _morphB );\n\t\t_vC.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA );\n\t\tobject.boneTransform( b, _vB );\n\t\tobject.boneTransform( c, _vC );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv2, a );\n\t\t\t_uvB.fromBufferAttribute( uv2, b );\n\t\t\t_uvC.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nexport { Mesh };\n", "import { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { Vector3 } from '../math/Vector3.js';\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\nexport { BoxGeometry, BoxGeometry as BoxBufferGeometry };\n", "/**\n * Uniform Utilities\n */\n\nexport function cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nexport function mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nexport { UniformsUtils };\n", "export default /* glsl */`\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n`;\n", "export default /* glsl */`\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n`;\n", "import { Material } from './Material.js';\nimport { cloneUniforms } from '../renderers/shaders/UniformsUtils.js';\n\nimport default_vertex from '../renderers/shaders/ShaderChunk/default_vertex.glsl.js';\nimport default_fragment from '../renderers/shaders/ShaderChunk/default_fragment.glsl.js';\n\n/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>\n * }\n */\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nexport { ShaderMaterial };\n", "import { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nCamera.prototype.isCamera = true;\n\nexport { Camera };\n", "import { Camera } from './Camera.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = MathUtils.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn MathUtils.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\nexport { PerspectiveCamera };\n", "import { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t}\n\n}\n\nexport { CubeCamera };\n", "import { Texture } from './Texture.js';\nimport { CubeReflectionMapping } from '../constants.js';\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nCubeTexture.prototype.isCubeTexture = true;\n\nexport { CubeTexture };\n", "import { BackSide, LinearFilter, LinearMipmapLinearFilter, NoBlending, RGBAFormat } from '../constants.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { BoxGeometry } from '../geometries/BoxGeometry.js';\nimport { ShaderMaterial } from '../materials/ShaderMaterial.js';\nimport { cloneUniforms } from './shaders/UniformsUtils.js';\nimport { WebGLRenderTarget } from './WebGLRenderTarget.js';\nimport { CubeCamera } from '../cameras/CubeCamera.js';\nimport { CubeTexture } from '../textures/CubeTexture.js';\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options, dummy ) {\n\n\t\tif ( Number.isInteger( options ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\t\toptions = dummy;\n\n\t\t}\n\n\t\tsuper( size, size, options );\n\n\t\toptions = options || {};\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture = new CubeTexture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.texture._needsFlipEnvMap = false;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = RGBAFormat; // see #18859\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nexport { WebGLCubeRenderTarget };\n", "import { Matrix3 } from './Matrix3.js';\nimport { Vector3 } from './Vector3.js';\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nPlane.prototype.isPlane = true;\n\nexport { Plane };\n", "import { Vector3 } from './Vector3.js';\nimport { Sphere } from './Sphere.js';\nimport { Plane } from './Plane.js';\n\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _vector = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n\nexport { Frustum };\n", "function WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nexport { WebGLAnimation };\n", "function WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLAttributes };\n", "import { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nexport { PlaneGeometry, PlaneGeometry as PlaneBufferGeometry };\n", "export default /* glsl */`\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_ALPHATEST\n\n\tif ( diffuseColor.a < alphaTest ) discard;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_AOMAP\n\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif\n`;\n", "export default /* glsl */`\nvec3 transformed = vec3( position );\n`;\n", "export default /* glsl */`\nvec3 objectNormal = vec3( normal );\n\n#ifdef USE_TANGENT\n\n\tvec3 objectTangent = vec3( tangent.xyz );\n\n#endif\n`;\n", "export default /* glsl */`\n\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\n\t// Original approximation by Christophe Schlick '94\n\t// float fresnel = pow( 1.0 - dotVH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n\treturn 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney\u2019s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\n\tfloat alpha = pow2( roughness ); // UE4's roughness\n\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( V * D );\n\n}\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\n\tfloat dotNV = saturate( dot( N, V ) );\n\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\treturn uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n\t// An approximation of the form factor of a horizon-clipped rectangle.\n\n\tfloat l = length( f );\n\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n\tfloat x = dot( v1, v2 );\n\n\tfloat y = abs( x );\n\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n\treturn cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n\t// bail if point is on back side of plane of light\n\t// assumes ccw winding order of light vertices\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n\t// construct orthonormal basis around N\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n\t// compute transform\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n\t// transform rect\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n\t// project rect onto sphere\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\n\t// calculate vector form factor\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n\t// adjust for horizon clipping\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n\t// alternate method of adjusting for horizon clipping (see referece)\n\t// refactoring required\n\tfloat len = length( vectorFormFactor );\n\tfloat z = vectorFormFactor.z / len;\n\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\n\t// tabulated horizon-clipped sphere, apparently...\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\tfloat scale = texture2D( ltc_2, uv ).w;\n\n\tfloat result = len * scale;\n*/\n\n\treturn vec3( result );\n\n}\n\n// End Rect Area Light\n\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n#if defined( USE_SHEEN )\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs\nfloat D_Charlie( float roughness, float dotNH ) {\n\n\tfloat alpha = pow2( roughness );\n\n\t// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\"\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 ); // 2^(-14/2), so sin2h^2 > 0 in fp16\n\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n\n}\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\n\t// Neubelt and Pettineo 2013, \"Crafting a Next-gen Material Pipeline for The Order: 1886\"\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n\n}\n\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\n\treturn sheenColor * ( D * V );\n\n}\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n\t// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n`;\n", "export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvec4 plane;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n\t\tbool clipped = true;\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t\tif ( clipped ) discard;\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n`;\n", "export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n#endif\n`;\n", "export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvClipPosition = - mvPosition.xyz;\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_COLOR_ALPHA )\n\n\tdiffuseColor *= vColor;\n\n#elif defined( USE_COLOR )\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_COLOR_ALPHA )\n\n\tvarying vec4 vColor;\n\n#elif defined( USE_COLOR )\n\n\tvarying vec3 vColor;\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_COLOR_ALPHA )\n\n\tvarying vec4 vColor;\n\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\n\tvarying vec3 vColor;\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_COLOR_ALPHA )\n\n\tvColor = vec4( 1.0 );\n\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\n\tvColor = vec3( 1.0 );\n\n#endif\n\n#ifdef USE_COLOR\n\n\tvColor *= color;\n\n#endif\n\n#ifdef USE_INSTANCING_COLOR\n\n\tvColor.xyz *= instanceColor.xyz;\n\n#endif\n`;\n", "export default /* glsl */`\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n// <tonemapping_pars_fragment> may have defined saturate() already\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\n\treturn fract( sin( sn ) * c );\n\n}\n\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t// dir can be either a direction vector or a normal vector\n\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n\tmat3 tmp;\n\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n\treturn tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n\treturn dot( weights, color.rgb );\n\n}\n\nbool isPerspectiveMatrix( mat4 m ) {\n\n\treturn m[ 2 ][ 3 ] == - 1.0;\n\n}\n\nvec2 equirectUv( in vec3 dir ) {\n\n\t// dir is assumed to be unit length\n\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\treturn vec2( u, v );\n\n}\n`;\n", "export default /* glsl */`\n#ifdef ENVMAP_TYPE_CUBE_UV\n\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\n\t// These shader functions convert between the UV coordinates of a single face of\n\t// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\n\t// sampling a textureCube (not generally normalized ).\n\n\tfloat getFace( vec3 direction ) {\n\n\t\tvec3 absDirection = abs( direction );\n\n\t\tfloat face = - 1.0;\n\n\t\tif ( absDirection.x > absDirection.z ) {\n\n\t\t\tif ( absDirection.x > absDirection.y )\n\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\n\t\t\telse\n\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\n\t\t} else {\n\n\t\t\tif ( absDirection.z > absDirection.y )\n\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\n\t\t\telse\n\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\n\t\t}\n\n\t\treturn face;\n\n\t}\n\n\t// RH coordinate system; PMREM face-indexing convention\n\tvec2 getUV( vec3 direction, float face ) {\n\n\t\tvec2 uv;\n\n\t\tif ( face == 0.0 ) {\n\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x ); // pos x\n\n\t\t} else if ( face == 1.0 ) {\n\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y ); // pos y\n\n\t\t} else if ( face == 2.0 ) {\n\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z ); // pos z\n\n\t\t} else if ( face == 3.0 ) {\n\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x ); // neg x\n\n\t\t} else if ( face == 4.0 ) {\n\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y ); // neg y\n\n\t\t} else {\n\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z ); // neg z\n\n\t\t}\n\n\t\treturn 0.5 * ( uv + 1.0 );\n\n\t}\n\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\n\t\tfloat face = getFace( direction );\n\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\n\t\tfloat faceSize = exp2( mipInt );\n\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\n\t\tvec2 f = fract( uv );\n\n\t\tuv += 0.5 - f;\n\n\t\tif ( face > 2.0 ) {\n\n\t\t\tuv.y += faceSize;\n\n\t\t\tface -= 3.0;\n\n\t\t}\n\n\t\tuv.x += face * faceSize;\n\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\n\t\t}\n\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\n\t\tuv *= texelSize;\n\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.x += texelSize;\n\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.y += texelSize;\n\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.x -= texelSize;\n\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tvec3 tm = mix( tl, tr, f.x );\n\n\t\tvec3 bm = mix( bl, br, f.x );\n\n\t\treturn mix( tm, bm, f.y );\n\n\t}\n\n\t// These defines must match with PMREMGenerator\n\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\n\tfloat roughnessToMip( float roughness ) {\n\n\t\tfloat mip = 0.0;\n\n\t\tif ( roughness >= r1 ) {\n\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\n\t\t} else if ( roughness >= r4 ) {\n\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\n\t\t} else if ( roughness >= r5 ) {\n\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\n\t\t} else if ( roughness >= r6 ) {\n\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\n\t\t} else {\n\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness ); // 1.16 = 1.79^0.25\n\t\t}\n\n\t\treturn mip;\n\n\t}\n\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\n\t\tfloat mipF = fract( mip );\n\n\t\tfloat mipInt = floor( mip );\n\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\n\t\tif ( mipF == 0.0 ) {\n\n\t\t\treturn vec4( color0, 1.0 );\n\n\t\t} else {\n\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\n\t\t}\n\n\t}\n\n#endif\n`;\n", "export default /* glsl */`\nvec3 transformedNormal = objectNormal;\n\n#ifdef USE_INSTANCING\n\n\t// this is in lieu of a per-instance normal-matrix\n\t// shear transforms in the instance matrix are not supported\n\n\tmat3 m = mat3( instanceMatrix );\n\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\n\ttransformedNormal = m * transformedNormal;\n\n#endif\n\ntransformedNormal = normalMatrix * transformedNormal;\n\n#ifdef FLIP_SIDED\n\n\ttransformedNormal = - transformedNormal;\n\n#endif\n\n#ifdef USE_TANGENT\n\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#ifdef FLIP_SIDED\n\n\t\ttransformedTangent = - transformedTangent;\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n`;\n", "export default /* glsl */`\ngl_FragColor = linearToOutputTexel( gl_FragColor );\n`;\n", "export default /* glsl */`\n// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\n\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\n\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\n\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n\t// return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\n\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\n\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\t// NOTE: The implementation with min causes the shader to not compile on\n\t// a common Alcatel A502DL in Chrome 78/Android 8.1. Some research suggests \n\t// that the chipset is Mediatek MT6739 w/ IMG PowerVR GE8100 GPU.\n\t// D = min( floor( D ) / 255.0, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}\n`;\n", "export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvec3 cameraToFrag;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\n\t\t}\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t\tenvColor = envMapTexelToLinear( envColor );\n\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\n\t#else\n\n\t\tvec4 envColor = vec4( 0.0 );\n\n\t#endif\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvWorldPosition = worldPosition.xyz;\n\n\t#else\n\n\t\tvec3 cameraToVertex;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t\t}\n\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_FOG\n\n\tvFogDepth = - mvPosition.z;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_FOG\n\n\tvarying float vFogDepth;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_FOG\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\n\t#endif\n\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n\n#ifdef USE_GRADIENTMAP\n\n\tuniform sampler2D gradientMap;\n\n#endif\n\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n\t// dotNL will be from -1.0 to 1.0\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n\t#ifdef USE_GRADIENTMAP\n\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\n\t#else\n\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n\t#endif\n\n}\n`;\n", "export default /* glsl */`\n#ifdef USE_LIGHTMAP\n\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tlightMapIrradiance *= PI;\n\n\t#endif\n\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif\n`;\n", "export default /* glsl */`\nvec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\n\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n\n#ifdef DOUBLE_SIDED\n\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n\n#endif\n\n#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n`;\n", "export default /* glsl */`\nuniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\n\n// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere\n// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\n\t// normal is assumed to have unit length\n\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\n\t// band 0\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\n\t// band 1\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\n\t// band 2\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\n\treturn result;\n\n}\n\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\n\treturn irradiance;\n\n}\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\tvec3 irradiance = ambientLightColor;\n\n\treturn irradiance;\n\n}\n\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n\t\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t\t// page 32, equation 26: E[window1]\n\t\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\n\t\tif ( cutoffDistance > 0.0 ) {\n\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\n\t\t}\n\n\t\treturn distanceFalloff;\n\n\t#else\n\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t\t}\n\n\t\treturn 1.0;\n\n\t#endif\n\n}\n\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n\n}\n\n#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\t// light is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\n\t\tlight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\t// light is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\n\t\tlight.direction = normalize( lVector );\n\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n\t\tif ( spotAttenuation > 0.0 ) {\n\n\t\t\tfloat lightDistance = length( lVector );\n\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\n\t\t} else {\n\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\n\t\t}\n\n\t}\n\n#endif\n\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\n\t// BRDF approximation Texture is 64x64\n\tuniform sampler2D ltc_1; // RGBA Float\n\tuniform sampler2D ltc_2; // RGBA Float\n\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t\treturn irradiance;\n\n\t}\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_ENVMAP )\n\n\t#ifdef ENVMAP_MODE_REFRACTION\n\n\t\tuniform float refractionRatio;\n\n\t#endif\n\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t\t#else\n\n\t\t\treturn vec3( 0.0 );\n\n\t\t#endif\n\n\t}\n\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec3 reflectVec;\n\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\n\t\t\t\t// Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\n\t\t\t#else\n\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\n\t\t\t#endif\n\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t\t#else\n\n\t\t\treturn vec3( 0.0 );\n\n\t\t#endif\n\n\t}\n\n#endif\n`;\n", "export default /* glsl */`\nToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\n`;\n", "export default /* glsl */`\nvarying vec3 vViewPosition;\n\nstruct ToonMaterial {\n\n\tvec3 diffuseColor;\n\n};\n\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n\n#define Material_LightProbeLOD( material )\t(0)\n`;\n", "export default /* glsl */`\nBlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n`;\n", "export default /* glsl */`\nvarying vec3 vViewPosition;\n\nstruct BlinnPhongMaterial {\n\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n`;\n", "export default /* glsl */`\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\n\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\n\nmaterial.roughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.\nmaterial.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n\n#ifdef IOR\n\n\t#ifdef SPECULAR\n\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\n\t\t#endif\n\n\t\t#ifdef USE_SPECULARCOLORMAP\n\n\t\t\tspecularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\n\n\t\t#endif\n\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\n\t#else\n\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\n\t#endif\n\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n\n#else\n\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n\n#endif\n\n#ifdef USE_CLEARCOAT\n\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\n\t#ifdef USE_CLEARCOATMAP\n\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\n\t#endif\n\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\n\t#endif\n\n\tmaterial.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model\n\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n\n#endif\n\n#ifdef USE_SHEEN\n\n\tmaterial.sheenColor = sheenColor;\n\n\t#ifdef USE_SHEENCOLORMAP\n\n\t\tmaterial.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\n\n\t#endif\n\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\n\t#ifdef USE_SHEENROUGHNESSMAP\n\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\nstruct PhysicalMaterial {\n\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\n};\n\n// temporary\nvec3 clearcoatSpecular = vec3( 0.0 );\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\n\treturn fab;\n\n}\n\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\n\treturn specularColor * fab.x + specularF90 * fab.y;\n\n}\n\n// Fdez-Ag\u00FCera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n// Approximates multiscattering in order to preserve energy.\n// http://www.jcgt.org/published/0008/01/03/\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619; // 1/21\n\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction\n\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\n\t\t// LTC Fresnel Approximation by Stephen Hill\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n\t}\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifdef USE_CLEARCOAT\n\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\n\t#endif\n\n\t#ifdef USE_SHEEN\n\n\t\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\n\t#endif\n\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\n\t#ifdef USE_CLEARCOAT\n\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\n\t#endif\n\n\t// Both indirect specular and indirect diffuse light accumulate here\n\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n`;\n", "export default /* glsl */`\n/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef USE_CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( RE_IndirectDiffuse )\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tlightMapIrradiance *= PI;\n\n\t\t#endif\n\n\t\tirradiance += lightMapIrradiance;\n\n\t#endif\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\n\t#endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\n\t#ifdef USE_CLEARCOAT\n\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( RE_IndirectDiffuse )\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\t// Doing a strict comparison with == 1.0 can cause noise artifacts\n\t// on some platforms. See issue #17623.\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\n\t#else\n\n\t\tuniform float logDepthBufFC;\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\n\t#else\n\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n\t\t\tgl_Position.z *= gl_Position.w;\n\n\t\t}\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\n#endif\n\n#ifdef USE_MAP\n\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tuniform mat3 uvTransform;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n`;\n", "export default /* glsl */`\nfloat metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tmetalnessFactor *= texelMetalness.b;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_MORPHNORMALS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\tobjectNormal *= morphTargetBaseInfluence;\n\n\t#ifdef MORPHTARGETS_TEXTURE\n\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\n\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n\n\t\t}\n\n\t#else\n\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_MORPHTARGETS\n\n\tuniform float morphTargetBaseInfluence;\n\n\t#ifdef MORPHTARGETS_TEXTURE\n\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\n\t\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n\n\t\t\tfloat texelIndex = float( vertexIndex * stride + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV ).xyz;\n\n\t\t}\n\n\t#else\n\n\t\t#ifndef USE_MORPHNORMALS\n\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\n\t\t#else\n\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\n\t\t#endif\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_MORPHTARGETS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in position = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\ttransformed *= morphTargetBaseInfluence;\n\n\t#ifdef MORPHTARGETS_TEXTURE\n\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\n\t\t\t#ifndef USE_MORPHNORMALS\n\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n\n\t\t\t#else\n\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n\n\t\t\t#endif\n\n\t\t}\n\n\t#else\n\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\n\t\t#ifndef USE_MORPHNORMALS\n\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\n\t\t#endif\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\nfloat faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n\n#ifdef FLAT_SHADED\n\n\t// Workaround for Adreno GPUs not able to do dFdx( vViewPosition )\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * faceDirection;\n\n\t#endif\n\n\t#ifdef USE_TANGENT\n\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\n\t\t#endif\n\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n\n// non perturbed normal for clearcoat among others\n\nvec3 geometryNormal = normal;\n\n`;\n", "export default /* glsl */`\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n\t#ifdef FLIP_SIDED\n\n\t\tnormal = - normal;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * faceDirection;\n\n\t#endif\n\n\tnormal = normalize( normalMatrix * normal );\n\n#elif defined( TANGENTSPACE_NORMALMAP )\n\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tnormal = normalize( vTBN * mapN );\n\n\t#else\n\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\n\t#endif\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n\n#endif\n`;\n", "export default /* glsl */`\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifndef FLAT_SHADED // normal is computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n#endif\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tuniform mat3 normalMatrix;\n\n#endif\n\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\n\t// Normal Mapping Without Precomputed Tangents\n\t// http://www.thetenthplanet.de/archives/1180\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 N = surf_norm; // normalized\n\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\n\t}\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_CLEARCOAT\n\n\tvec3 clearcoatNormal = geometryNormal;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\n\t#else\n\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n\n#ifdef USE_CLEARCOATMAP\n\n\tuniform sampler2D clearcoatMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\tuniform sampler2D clearcoatRoughnessMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n\n// https://github.com/mrdoob/three.js/pull/22425\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\n\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\n`;\n", "export default /* glsl */`\nvec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\n\treturn r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\n\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\n\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\n\n// NOTE: https://twitter.com/gonnavis/status/1377183786949959682\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n`;\n", "export default /* glsl */`\n#ifdef PREMULTIPLIED_ALPHA\n\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n\tgl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n`;\n", "export default /* glsl */`\nvec4 mvPosition = vec4( transformed, 1.0 );\n\n#ifdef USE_INSTANCING\n\n\tmvPosition = instanceMatrix * mvPosition;\n\n#endif\n\nmvPosition = modelViewMatrix * mvPosition;\n\ngl_Position = projectionMatrix * mvPosition;\n`;\n", "export default /* glsl */`\n#ifdef DITHERING\n\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef DITHERING\n\n\t// based on https://www.shadertoy.com/view/MslGR8\n\tvec3 dithering( vec3 color ) {\n\t\t//Calculate grid position\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n\t\t//modify shift acording to grid position.\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n\t\t//shift the color by dither_shift\n\t\treturn color + dither_shift_RGB;\n\t}\n\n#endif\n`;\n", "export default /* glsl */`\nfloat roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\troughnessFactor *= texelRoughness.g;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): create uniforms for area light shadows\n\n\t#endif\n\t*/\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\n\t}\n\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\n\t\tfloat occlusion = 1.0;\n\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\n\t\tfloat hard_shadow = step( compare , distribution.x ); // Hard Shadow\n\n\t\tif (hard_shadow != 1.0 ) {\n\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality\n\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed\n\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\n\t\t}\n\t\treturn occlusion;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tfloat shadow = 1.0;\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn shadow;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the vector from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// dp = normalized distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n\t\tdp += shadowBias;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): uniforms for area light shadows\n\n\t#endif\n\t*/\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\t// Offsetting the position used for querying occlusion along the world normal can be used to reduce shadow acne.\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\n\t#endif\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update vAreaShadowCoord with area light info\n\n\t#endif\n\t*/\n\n#endif\n`;\n", "export default /* glsl */`\nfloat getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\tDirectionalLightShadow directionalLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\tSpotLightShadow spotLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\tPointLightShadow pointLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update shadow for Area light\n\n\t#endif\n\t*/\n\n\t#endif\n\n\treturn shadow;\n\n}\n`;\n", "export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n\t#ifdef USE_TANGENT\n\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#endif\n\n#endif\n`;\n", "export default /* glsl */`\nfloat specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( TONE_MAPPING )\n\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n`;\n", "export default /* glsl */`\n#ifndef saturate\n// <common> may have defined saturate() already\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n\treturn toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\nvec3 RRTAndODTFit( vec3 v ) {\n\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n\n}\n\n// this implementation of ACES is modified to accommodate a brighter viewing environment.\n// the scale factor of 1/0.6 is subjective. see discussion in #19621.\n\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\n\t// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ), // transposed from source\n\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\n\t// ODT_SAT => XYZ => D60_2_D65 => sRGB\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ), // transposed from source\n\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\n\tcolor *= toneMappingExposure / 0.6;\n\n\tcolor = ACESInputMat * color;\n\n\t// Apply RRT and ODT\n\tcolor = RRTAndODTFit( color );\n\n\tcolor = ACESOutputMat * color;\n\n\t// Clamp to [0, 1]\n\treturn saturate( color );\n\n}\n\nvec3 CustomToneMapping( vec3 color ) { return color; }\n`;\n", "export default /* glsl */`\n#ifdef USE_TRANSMISSION\n\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\n\t#ifdef USE_TRANSMISSIONMAP\n\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\n\t#endif\n\n\t#ifdef USE_THICKNESSMAP\n\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\n\t#endif\n\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_TRANSMISSION\n\n\t// Transmission code is based on glTF-Sampler-Viewer\n\t// https://github.com/KhronosGroup/glTF-Sample-Viewer\n\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\n\t#ifdef USE_TRANSMISSIONMAP\n\n\t\tuniform sampler2D transmissionMap;\n\n\t#endif\n\n\t#ifdef USE_THICKNESSMAP\n\n\t\tuniform sampler2D thicknessMap;\n\n\t#endif\n\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\n\tvarying vec3 vWorldPosition;\n\n\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n\n\t\t// Direction of refracted light.\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\n\t\t// Compute rotation-independant scaling of the model matrix.\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\n\t\t// The thickness is specified in local space.\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\n\t}\n\n\tfloat applyIorToRoughness( float roughness, float ior ) {\n\n\t\t// Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and\n\t\t// an IOR of 1.5 results in the default amount of microfacet refraction.\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\n\t}\n\n\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\n\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\n\t\t#else\n\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\n\t\t#endif\n\n\t}\n\n\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n\n\t\tif ( attenuationDistance == 0.0 ) {\n\n\t\t\t// Attenuation distance is +\u221E (which we indicate by zero), i.e. the transmitted color is not attenuated at all.\n\t\t\treturn radiance;\n\n\t\t} else {\n\n\t\t\t// Compute light attenuation using Beer's law.\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance ); // Beer's law\n\t\t\treturn transmittance * radiance;\n\n\t\t}\n\n\t}\n\n\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance ) {\n\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\n\t\t// Project refracted vector on the framebuffer, while mapping to normalized device coordinates.\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\n\t\t// Sample framebuffer to get pixel the refracted ray hits.\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\n\t\t// Get the specular component.\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\n\t}\n#endif\n`;\n", "export default /* glsl */`\n#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\n\tvarying vec2 vUv;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_UV\n\n\t#ifdef UVS_VERTEX_ONLY\n\n\t\tvec2 vUv;\n\n\t#else\n\n\t\tvarying vec2 vUv;\n\n\t#endif\n\n\tuniform mat3 uvTransform;\n\n#endif\n`;\n", "export default /* glsl */`\n#ifdef USE_UV\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n\tuniform mat3 uv2Transform;\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n\n#endif\n`;\n", "export default /* glsl */`\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\n\t#ifdef USE_INSTANCING\n\n\t\tworldPosition = instanceMatrix * worldPosition;\n\n\t#endif\n\n\tworldPosition = modelMatrix * worldPosition;\n\n#endif\n`;\n", "export const vertex = /* glsl */`\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform sampler2D t2D;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tvec4 texColor = texture2D( t2D, vUv );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n", "export const vertex = /* glsl */`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#include <envmap_common_pars_fragment>\nuniform float opacity;\n\nvarying vec3 vWorldDirection;\n\n#include <cube_uv_reflection_fragment>\n\nvoid main() {\n\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n", "export const vertex = /* glsl */`\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.\n// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for\n// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvHighPrecisionZW = gl_Position.zw;\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\n\t#endif\n\n}\n`;\n", "export const vertex = /* glsl */`\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n`;\n", "export const vertex = /* glsl */`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvec3 direction = normalize( vWorldDirection );\n\n\tvec2 sampleUV = equirectUv( direction );\n\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n", "export const vertex = /* glsl */`\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvLineDistance = scale * lineDistance;\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n\t\tdiscard;\n\n\t}\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\n\toutgoingLight = diffuseColor.rgb; // simple shader\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n`;\n", "export const vertex = /* glsl */`\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n", "export const vertex = /* glsl */`\n#define LAMBERT\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\n\t#endif\n\n\t#include <lightmap_fragment>\n\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n\t#else\n\n\t\treflectedLight.directDiffuse = vLightFront;\n\n\t#endif\n\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n\t// modulation\n\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n`;\n", "export const vertex = /* glsl */`\n#define MATCAP\n\nvarying vec3 vViewPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#define MATCAP\n\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\n\nvarying vec3 vViewPosition;\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\n\t#ifdef USE_MATCAP\n\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\n\t#else\n\n\t\tvec4 matcapColor = vec4( 1.0 );\n\n\t#endif\n\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n", "export const vertex = /* glsl */`\n#define NORMAL\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvViewPosition = - mvPosition.xyz;\n\n#endif\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#define NORMAL\n\nuniform float opacity;\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\n}\n`;\n", "export const vertex = /* glsl */`\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n", "export const vertex = /* glsl */`\n#define STANDARD\n\nvarying vec3 vViewPosition;\n\n#ifdef USE_TRANSMISSION\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n#ifdef USE_TRANSMISSION\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif\n}\n`;\n\nexport const fragment = /* glsl */`\n#define STANDARD\n\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef IOR\n\tuniform float ior;\n#endif\n\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n\nvarying vec3 vViewPosition;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\n\t#include <transmission_fragment>\n\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\n\t#ifdef USE_CLEARCOAT\n\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\n\t\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\n\n\t#endif\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n", "export const vertex = /* glsl */`\n#define TOON\n\nvarying vec3 vViewPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#define TOON\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n", "export const vertex = /* glsl */`\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\n\tgl_PointSize = size;\n\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n`;\n", "export const vertex = /* glsl */`\n#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n\nvoid main() {\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform vec3 color;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n`;\n", "export const vertex = /* glsl */`\nuniform float rotation;\nuniform vec2 center;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t#ifndef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\n\t#endif\n\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n\tmvPosition.xy += rotatedPosition;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n`;\n", "import alphamap_fragment from './ShaderChunk/alphamap_fragment.glsl.js';\nimport alphamap_pars_fragment from './ShaderChunk/alphamap_pars_fragment.glsl.js';\nimport alphatest_fragment from './ShaderChunk/alphatest_fragment.glsl.js';\nimport alphatest_pars_fragment from './ShaderChunk/alphatest_pars_fragment.glsl.js';\nimport aomap_fragment from './ShaderChunk/aomap_fragment.glsl.js';\nimport aomap_pars_fragment from './ShaderChunk/aomap_pars_fragment.glsl.js';\nimport begin_vertex from './ShaderChunk/begin_vertex.glsl.js';\nimport beginnormal_vertex from './ShaderChunk/beginnormal_vertex.glsl.js';\nimport bsdfs from './ShaderChunk/bsdfs.glsl.js';\nimport bumpmap_pars_fragment from './ShaderChunk/bumpmap_pars_fragment.glsl.js';\nimport clipping_planes_fragment from './ShaderChunk/clipping_planes_fragment.glsl.js';\nimport clipping_planes_pars_fragment from './ShaderChunk/clipping_planes_pars_fragment.glsl.js';\nimport clipping_planes_pars_vertex from './ShaderChunk/clipping_planes_pars_vertex.glsl.js';\nimport clipping_planes_vertex from './ShaderChunk/clipping_planes_vertex.glsl.js';\nimport color_fragment from './ShaderChunk/color_fragment.glsl.js';\nimport color_pars_fragment from './ShaderChunk/color_pars_fragment.glsl.js';\nimport color_pars_vertex from './ShaderChunk/color_pars_vertex.glsl.js';\nimport color_vertex from './ShaderChunk/color_vertex.glsl.js';\nimport common from './ShaderChunk/common.glsl.js';\nimport cube_uv_reflection_fragment from './ShaderChunk/cube_uv_reflection_fragment.glsl.js';\nimport defaultnormal_vertex from './ShaderChunk/defaultnormal_vertex.glsl.js';\nimport displacementmap_pars_vertex from './ShaderChunk/displacementmap_pars_vertex.glsl.js';\nimport displacementmap_vertex from './ShaderChunk/displacementmap_vertex.glsl.js';\nimport emissivemap_fragment from './ShaderChunk/emissivemap_fragment.glsl.js';\nimport emissivemap_pars_fragment from './ShaderChunk/emissivemap_pars_fragment.glsl.js';\nimport encodings_fragment from './ShaderChunk/encodings_fragment.glsl.js';\nimport encodings_pars_fragment from './ShaderChunk/encodings_pars_fragment.glsl.js';\nimport envmap_fragment from './ShaderChunk/envmap_fragment.glsl.js';\nimport envmap_common_pars_fragment from './ShaderChunk/envmap_common_pars_fragment.glsl.js';\nimport envmap_pars_fragment from './ShaderChunk/envmap_pars_fragment.glsl.js';\nimport envmap_pars_vertex from './ShaderChunk/envmap_pars_vertex.glsl.js';\nimport envmap_vertex from './ShaderChunk/envmap_vertex.glsl.js';\nimport fog_vertex from './ShaderChunk/fog_vertex.glsl.js';\nimport fog_pars_vertex from './ShaderChunk/fog_pars_vertex.glsl.js';\nimport fog_fragment from './ShaderChunk/fog_fragment.glsl.js';\nimport fog_pars_fragment from './ShaderChunk/fog_pars_fragment.glsl.js';\nimport gradientmap_pars_fragment from './ShaderChunk/gradientmap_pars_fragment.glsl.js';\nimport lightmap_fragment from './ShaderChunk/lightmap_fragment.glsl.js';\nimport lightmap_pars_fragment from './ShaderChunk/lightmap_pars_fragment.glsl.js';\nimport lights_lambert_vertex from './ShaderChunk/lights_lambert_vertex.glsl.js';\nimport lights_pars_begin from './ShaderChunk/lights_pars_begin.glsl.js';\nimport envmap_physical_pars_fragment from './ShaderChunk/envmap_physical_pars_fragment.glsl.js';\nimport lights_toon_fragment from './ShaderChunk/lights_toon_fragment.glsl.js';\nimport lights_toon_pars_fragment from './ShaderChunk/lights_toon_pars_fragment.glsl.js';\nimport lights_phong_fragment from './ShaderChunk/lights_phong_fragment.glsl.js';\nimport lights_phong_pars_fragment from './ShaderChunk/lights_phong_pars_fragment.glsl.js';\nimport lights_physical_fragment from './ShaderChunk/lights_physical_fragment.glsl.js';\nimport lights_physical_pars_fragment from './ShaderChunk/lights_physical_pars_fragment.glsl.js';\nimport lights_fragment_begin from './ShaderChunk/lights_fragment_begin.glsl.js';\nimport lights_fragment_maps from './ShaderChunk/lights_fragment_maps.glsl.js';\nimport lights_fragment_end from './ShaderChunk/lights_fragment_end.glsl.js';\nimport logdepthbuf_fragment from './ShaderChunk/logdepthbuf_fragment.glsl.js';\nimport logdepthbuf_pars_fragment from './ShaderChunk/logdepthbuf_pars_fragment.glsl.js';\nimport logdepthbuf_pars_vertex from './ShaderChunk/logdepthbuf_pars_vertex.glsl.js';\nimport logdepthbuf_vertex from './ShaderChunk/logdepthbuf_vertex.glsl.js';\nimport map_fragment from './ShaderChunk/map_fragment.glsl.js';\nimport map_pars_fragment from './ShaderChunk/map_pars_fragment.glsl.js';\nimport map_particle_fragment from './ShaderChunk/map_particle_fragment.glsl.js';\nimport map_particle_pars_fragment from './ShaderChunk/map_particle_pars_fragment.glsl.js';\nimport metalnessmap_fragment from './ShaderChunk/metalnessmap_fragment.glsl.js';\nimport metalnessmap_pars_fragment from './ShaderChunk/metalnessmap_pars_fragment.glsl.js';\nimport morphnormal_vertex from './ShaderChunk/morphnormal_vertex.glsl.js';\nimport morphtarget_pars_vertex from './ShaderChunk/morphtarget_pars_vertex.glsl.js';\nimport morphtarget_vertex from './ShaderChunk/morphtarget_vertex.glsl.js';\nimport normal_fragment_begin from './ShaderChunk/normal_fragment_begin.glsl.js';\nimport normal_fragment_maps from './ShaderChunk/normal_fragment_maps.glsl.js';\nimport normal_pars_fragment from './ShaderChunk/normal_pars_fragment.glsl.js';\nimport normal_pars_vertex from './ShaderChunk/normal_pars_vertex.glsl.js';\nimport normal_vertex from './ShaderChunk/normal_vertex.glsl.js';\nimport normalmap_pars_fragment from './ShaderChunk/normalmap_pars_fragment.glsl.js';\nimport clearcoat_normal_fragment_begin from './ShaderChunk/clearcoat_normal_fragment_begin.glsl.js';\nimport clearcoat_normal_fragment_maps from './ShaderChunk/clearcoat_normal_fragment_maps.glsl.js';\nimport clearcoat_pars_fragment from './ShaderChunk/clearcoat_pars_fragment.glsl.js';\nimport output_fragment from './ShaderChunk/output_fragment.glsl.js';\nimport packing from './ShaderChunk/packing.glsl.js';\nimport premultiplied_alpha_fragment from './ShaderChunk/premultiplied_alpha_fragment.glsl.js';\nimport project_vertex from './ShaderChunk/project_vertex.glsl.js';\nimport dithering_fragment from './ShaderChunk/dithering_fragment.glsl.js';\nimport dithering_pars_fragment from './ShaderChunk/dithering_pars_fragment.glsl.js';\nimport roughnessmap_fragment from './ShaderChunk/roughnessmap_fragment.glsl.js';\nimport roughnessmap_pars_fragment from './ShaderChunk/roughnessmap_pars_fragment.glsl.js';\nimport shadowmap_pars_fragment from './ShaderChunk/shadowmap_pars_fragment.glsl.js';\nimport shadowmap_pars_vertex from './ShaderChunk/shadowmap_pars_vertex.glsl.js';\nimport shadowmap_vertex from './ShaderChunk/shadowmap_vertex.glsl.js';\nimport shadowmask_pars_fragment from './ShaderChunk/shadowmask_pars_fragment.glsl.js';\nimport skinbase_vertex from './ShaderChunk/skinbase_vertex.glsl.js';\nimport skinning_pars_vertex from './ShaderChunk/skinning_pars_vertex.glsl.js';\nimport skinning_vertex from './ShaderChunk/skinning_vertex.glsl.js';\nimport skinnormal_vertex from './ShaderChunk/skinnormal_vertex.glsl.js';\nimport specularmap_fragment from './ShaderChunk/specularmap_fragment.glsl.js';\nimport specularmap_pars_fragment from './ShaderChunk/specularmap_pars_fragment.glsl.js';\nimport tonemapping_fragment from './ShaderChunk/tonemapping_fragment.glsl.js';\nimport tonemapping_pars_fragment from './ShaderChunk/tonemapping_pars_fragment.glsl.js';\nimport transmission_fragment from './ShaderChunk/transmission_fragment.glsl.js';\nimport transmission_pars_fragment from './ShaderChunk/transmission_pars_fragment.glsl.js';\nimport uv_pars_fragment from './ShaderChunk/uv_pars_fragment.glsl.js';\nimport uv_pars_vertex from './ShaderChunk/uv_pars_vertex.glsl.js';\nimport uv_vertex from './ShaderChunk/uv_vertex.glsl.js';\nimport uv2_pars_fragment from './ShaderChunk/uv2_pars_fragment.glsl.js';\nimport uv2_pars_vertex from './ShaderChunk/uv2_pars_vertex.glsl.js';\nimport uv2_vertex from './ShaderChunk/uv2_vertex.glsl.js';\nimport worldpos_vertex from './ShaderChunk/worldpos_vertex.glsl.js';\n\nimport * as background from './ShaderLib/background.glsl.js';\nimport * as cube from './ShaderLib/cube.glsl.js';\nimport * as depth from './ShaderLib/depth.glsl.js';\nimport * as distanceRGBA from './ShaderLib/distanceRGBA.glsl.js';\nimport * as equirect from './ShaderLib/equirect.glsl.js';\nimport * as linedashed from './ShaderLib/linedashed.glsl.js';\nimport * as meshbasic from './ShaderLib/meshbasic.glsl.js';\nimport * as meshlambert from './ShaderLib/meshlambert.glsl.js';\nimport * as meshmatcap from './ShaderLib/meshmatcap.glsl.js';\nimport * as meshnormal from './ShaderLib/meshnormal.glsl.js';\nimport * as meshphong from './ShaderLib/meshphong.glsl.js';\nimport * as meshphysical from './ShaderLib/meshphysical.glsl.js';\nimport * as meshtoon from './ShaderLib/meshtoon.glsl.js';\nimport * as points from './ShaderLib/points.glsl.js';\nimport * as shadow from './ShaderLib/shadow.glsl.js';\nimport * as sprite from './ShaderLib/sprite.glsl.js';\n\nexport const ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: background.vertex,\n\tbackground_frag: background.fragment,\n\tcube_vert: cube.vertex,\n\tcube_frag: cube.fragment,\n\tdepth_vert: depth.vertex,\n\tdepth_frag: depth.fragment,\n\tdistanceRGBA_vert: distanceRGBA.vertex,\n\tdistanceRGBA_frag: distanceRGBA.fragment,\n\tequirect_vert: equirect.vertex,\n\tequirect_frag: equirect.fragment,\n\tlinedashed_vert: linedashed.vertex,\n\tlinedashed_frag: linedashed.fragment,\n\tmeshbasic_vert: meshbasic.vertex,\n\tmeshbasic_frag: meshbasic.fragment,\n\tmeshlambert_vert: meshlambert.vertex,\n\tmeshlambert_frag: meshlambert.fragment,\n\tmeshmatcap_vert: meshmatcap.vertex,\n\tmeshmatcap_frag: meshmatcap.fragment,\n\tmeshnormal_vert: meshnormal.vertex,\n\tmeshnormal_frag: meshnormal.fragment,\n\tmeshphong_vert: meshphong.vertex,\n\tmeshphong_frag: meshphong.fragment,\n\tmeshphysical_vert: meshphysical.vertex,\n\tmeshphysical_frag: meshphysical.fragment,\n\tmeshtoon_vert: meshtoon.vertex,\n\tmeshtoon_frag: meshtoon.fragment,\n\tpoints_vert: points.vertex,\n\tpoints_frag: points.fragment,\n\tshadow_vert: shadow.vertex,\n\tshadow_frag: shadow.fragment,\n\tsprite_vert: sprite.vertex,\n\tsprite_frag: sprite.fragment\n};\n", "import { Color } from '../../math/Color.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // standard, physical\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nexport { UniformsLib };\n", "import { ShaderChunk } from './ShaderChunk.js';\nimport { mergeUniforms } from './UniformsUtils.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from './UniformsLib.js';\nimport { Color } from '../../math/Color.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 0 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 0 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n\nexport { ShaderLib };\n", "import { BackSide, FrontSide, CubeUVReflectionMapping } from '../../constants.js';\nimport { BoxGeometry } from '../../geometries/BoxGeometry.js';\nimport { PlaneGeometry } from '../../geometries/PlaneGeometry.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { Color } from '../../math/Color.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { cloneUniforms } from '../shaders/UniformsUtils.js';\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = 0;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n\nexport { WebGLBackground };\n", "\uFEFFfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry, index );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( geometry, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in geometryAttributes ) {\n\n\t\t\tconst cachedAttribute = cachedAttributes[ key ];\n\t\t\tconst geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst data = {};\n\t\t\tdata.attribute = attribute;\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data = attribute.data;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\n\nexport { WebGLBindingStates };\n", "function WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLBufferRenderer };\n", "function WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n\nexport { WebGLCapabilities };\n", "import { Matrix3 } from '../../math/Matrix3.js';\nimport { Plane } from '../../math/Plane.js';\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n\nexport { WebGLClipping };\n", "import { CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping } from '../../constants.js';\nimport { WebGLCubeRenderTarget } from '../WebGLCubeRenderTarget.js';\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nexport { WebGLCubeMaps };\n", "import { Camera } from './Camera.js';\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nOrthographicCamera.prototype.isOrthographicCamera = true;\n\nexport { OrthographicCamera };\n", "import { ShaderMaterial } from './ShaderMaterial.js';\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\nexport { RawShaderMaterial };\n", "import {\n\tCubeReflectionMapping,\n\tCubeRefractionMapping,\n\tCubeUVReflectionMapping,\n\tGammaEncoding,\n\tLinearEncoding,\n\tNoToneMapping,\n\tNearestFilter,\n\tNoBlending,\n\tRGBDEncoding,\n\tRGBEEncoding,\n\tRGBEFormat,\n\tRGBAFormat,\n\tRGBM16Encoding,\n\tRGBM7Encoding,\n\tUnsignedByteType,\n\tsRGBEncoding\n} from '../constants.js';\n\nimport { BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { OrthographicCamera } from '../cameras/OrthographicCamera.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\nimport { RawShaderMaterial } from '../materials/RawShaderMaterial.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Color } from '../math/Color.js';\nimport { WebGLRenderTarget } from '../renderers/WebGLRenderTarget.js';\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\nimport { BoxGeometry } from '../geometries/BoxGeometry.js';\nimport { BackSide } from '../constants.js';\n\nconst LOD_MIN = 4;\nconst LOD_MAX = 8;\nconst SIZE_MAX = Math.pow( 2, LOD_MAX );\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\nconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst ENCODINGS = {\n\t[ LinearEncoding ]: 0,\n\t[ sRGBEncoding ]: 1,\n\t[ RGBEEncoding ]: 2,\n\t[ RGBM7Encoding ]: 3,\n\t[ RGBM16Encoding ]: 4,\n\t[ RGBDEncoding ]: 5,\n\t[ GammaEncoding ]: 6\n};\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst { _lodPlanes, _sizeLods, _sigmas } = /*@__PURE__*/ _createPlanes();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._blurMaterial = _getBlurShader( MAX_SAMPLES );\n\t\tthis._equirectShader = null;\n\t\tthis._cubemapShader = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular ) {\n\n\t\treturn this._fromTexture( equirectangular );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap ) {\n\n\t\treturn this._fromTexture( cubemap );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapShader === null ) {\n\n\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\tthis._compileMaterial( this._cubemapShader );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectShader === null ) {\n\n\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\tthis._compileMaterial( this._equirectShader );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._blurMaterial.dispose();\n\n\t\tif ( this._cubemapShader !== null ) this._cubemapShader.dispose();\n\t\tif ( this._equirectShader !== null ) this._equirectShader.dispose();\n\n\t\tfor ( let i = 0; i < _lodPlanes.length; i ++ ) {\n\n\t\t\t_lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t// private interface\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._pingPongRenderTarget.dispose();\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\tconst cubeUVRenderTarget = this._allocateTargets( texture );\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets( texture ) { // warning: null texture is valid\n\n\t\tconst params = {\n\t\t\tmagFilter: NearestFilter,\n\t\t\tminFilter: NearestFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: UnsignedByteType,\n\t\t\tformat: RGBEFormat,\n\t\t\tencoding: _isLDR( texture ) ? texture.encoding : RGBEEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( params );\n\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\tthis._pingPongRenderTarget = _createRenderTarget( params );\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( _lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst outputEncoding = renderer.outputEncoding;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.outputEncoding = LinearEncoding;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\t\t\tif ( col == 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col == 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\t_setViewport( cubeUVRenderTarget,\n\t\t\t\tcol * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.outputEncoding = outputEncoding;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_setEncoding( uniform, texture ) {\n\n\t\tif ( this._renderer.capabilities.isWebGL2 === true && texture.format === RGBAFormat && texture.type === UnsignedByteType && texture.encoding === sRGBEncoding ) {\n\n\t\t\tuniform.value = ENCODINGS[ LinearEncoding ];\n\n\t\t} else {\n\n\t\t\tuniform.value = ENCODINGS[ texture.encoding ];\n\n\t\t}\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapShader == null ) {\n\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( this._equirectShader == null ) {\n\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\tconst mesh = new Mesh( _lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tif ( ! isCubeTexture ) {\n\n\t\t\tuniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );\n\n\t\t}\n\n\t\tthis._setEncoding( uniforms[ 'inputEncoding' ], texture );\n\t\tthis._setEncoding( uniforms[ 'outputEncoding' ], cubeUVRenderTarget.texture );\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < TOTAL_LODS; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( _sigmas[ i ] * _sigmas[ i ] - _sigmas[ i - 1 ] * _sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( _lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = _sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i == 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;\n\n\t\tthis._setEncoding( blurUniforms[ 'inputEncoding' ], targetIn.texture );\n\t\tthis._setEncoding( blurUniforms[ 'outputEncoding' ], targetIn.texture );\n\n\t\tconst outputSize = _sizeLods[ lodOut ];\n\t\tconst x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );\n\t\tconst y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) + 2 * outputSize * ( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\nfunction _isLDR( texture ) {\n\n\tif ( texture === undefined || texture.type !== UnsignedByteType ) return false;\n\n\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\n}\n\nfunction _createPlanes() {\n\n\tconst _lodPlanes = [];\n\tconst _sizeLods = [];\n\tconst _sigmas = [];\n\n\tlet lod = LOD_MAX;\n\n\tfor ( let i = 0; i < TOTAL_LODS; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\t_sizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > LOD_MAX - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];\n\n\t\t} else if ( i == 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\t_sigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 1 );\n\t\tconst min = - texelSize / 2;\n\t\tconst max = 1 + texelSize / 2;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t_lodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { _lodPlanes, _sizeLods, _sigmas };\n\n}\n\nfunction _createRenderTarget( params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( maxSamples ) {\n\n\tconst weights = new Float32Array( maxSamples );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: { 'n': maxSamples },\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectShader() {\n\n\tconst texelSize = new Vector2( 1, 1 );\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'texelSize': { value: texelSize },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCubemapShader() {\n\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction _getEncodings() {\n\n\treturn /* glsl */`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`;\n\n}\n\nexport { PMREMGenerator };\n", "import { CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping } from '../../constants.js';\nimport { PMREMGenerator } from '../../extras/PMREMGenerator.js';\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nexport { WebGLCubeUVMaps };\n", "function WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n\nexport { WebGLExtensions };\n", "import { Uint16BufferAttribute, Uint32BufferAttribute } from '../../core/BufferAttribute.js';\nimport { arrayMax } from '../../utils.js';\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n\nexport { WebGLGeometries };\n", "function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLIndexedBufferRenderer };\n", "function WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n\nexport { WebGLInfo };\n", "import { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nclass DataTexture2DArray extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\nexport { DataTexture2DArray };\n", "import { FloatType, RGBAFormat } from '../../constants.js';\nimport { DataTexture2DArray } from '../../textures/DataTexture2DArray.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { Vector2 } from '../../math/Vector2.js';\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction denormalize( morph, attribute ) {\n\n\tlet denominator = 1;\n\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\n\tif ( array instanceof Int8Array ) denominator = 127;\n\telse if ( array instanceof Int16Array ) denominator = 32767;\n\telse if ( array instanceof Int32Array ) denominator = 2147483647;\n\telse console.error( 'THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array );\n\n\tmorph.divideScalar( denominator );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector3();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst numberOfMorphTargets = geometry.morphAttributes.position.length;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== numberOfMorphTargets ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\n\t\t\t\tconst numberOfVertices = geometry.attributes.position.count;\n\t\t\t\tconst numberOfVertexData = ( hasMorphNormals === true ) ? 2 : 1; // (v,n) vs. (v)\n\n\t\t\t\tlet width = numberOfVertices * numberOfVertexData;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * numberOfMorphTargets );\n\n\t\t\t\tconst texture = new DataTexture2DArray( buffer, width, height, numberOfMorphTargets );\n\t\t\t\ttexture.format = RGBAFormat; // using RGBA since RGB might be emulated (and is thus slower)\n\t\t\t\ttexture.type = FloatType;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = numberOfVertexData * 4;\n\n\t\t\t\tfor ( let i = 0; i < numberOfMorphTargets; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tif ( morphTarget.normalized === true ) denormalize( morph, morphTarget );\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tif ( morphNormal.normalized === true ) denormalize( morph, morphNormal );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: numberOfMorphTargets,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLMorphtargets };\n", "function WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n\nexport { WebGLObjects };\n", "import { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nclass DataTexture3D extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture3D.prototype.isDataTexture3D = true;\n\nexport { DataTexture3D };\n", "/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nimport { CubeTexture } from '../../textures/CubeTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { DataTexture2DArray } from '../../textures/DataTexture2DArray.js';\nimport { DataTexture3D } from '../../textures/DataTexture3D.js';\n\nconst emptyTexture = new Texture();\nconst emptyTexture2dArray = new DataTexture2DArray();\nconst emptyTexture3d = new DataTexture3D();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tconst cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nexport { WebGLUniforms };\n", "function WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nexport { WebGLShader };\n", "import { WebGLUniforms } from './WebGLUniforms.js';\nimport { WebGLShader } from './WebGLShader.js';\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\nimport { RGBFormat, NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, GammaEncoding, RGBDEncoding, RGBM16Encoding, RGBM7Encoding, RGBEEncoding, sRGBEncoding, LinearEncoding, LogLuvEncoding, GLSL3 } from '../../constants.js';\n\nlet programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tconst lines = string.split( '\\n' );\n\n\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + addLineNumbers( gl.getShaderSource( shader ) );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tconst gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphTargets && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargets && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.format === RGBFormat ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.specularColorMap ? getTexelDecodingFunction( 'specularColorMapTexelToLinear', parameters.specularColorMapEncoding ) : '',\n\t\t\tparameters.sheenColorMap ? getTexelDecodingFunction( 'sheenColorMapTexelToLinear', parameters.sheenColorMapEncoding ) : '',\n\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nexport { WebGLProgram };\n", "import { BackSide, DoubleSide, CubeUVRefractionMapping, CubeUVReflectionMapping, LinearEncoding, sRGBEncoding, ObjectSpaceNormalMap, TangentSpaceNormalMap, NoToneMapping, RGBAFormat, UnsignedByteType } from '../../constants.js';\nimport { WebGLProgram } from './WebGLProgram.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { UniformsUtils } from '../shaders/UniformsUtils.js';\nimport { hashString } from '../../utils.js';\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\tconst vertexTextures = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tconst parameterNames = [\n\t\t'precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor',\n\t\t'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV',\n\t\t'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap',\n\t\t'objectSpaceNormalMap', 'tangentSpaceNormalMap',\n\t\t'clearcoat', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap',\n\t\t'displacementMap', 'specularMap', , 'roughnessMap', 'metalnessMap', 'gradientMap',\n\t\t'alphaMap', 'alphaTest', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2',\n\t\t'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning',\n\t\t'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'morphTargetsCount', 'premultipliedAlpha',\n\t\t'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights',\n\t\t'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows',\n\t\t'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights',\n\t\t'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering', 'format',\n\t\t'specularIntensityMap', 'specularColorMap', 'specularColorMapEncoding',\n\t\t'transmission', 'transmissionMap', 'thicknessMap',\n\t\t'sheen', 'sheenColorMap', 'sheenColorMapEncoding', 'sheenRoughnessMap'\n\t];\n\n\tfunction getMaxBones( object ) {\n\n\t\tconst skeleton = object.skeleton;\n\t\tconst bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\tconst nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tconst maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map ) {\n\n\t\tlet encoding;\n\n\t\tif ( map && map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map && map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t} else {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t}\n\n\t\tif ( isWebGL2 && map && map.isTexture && map.format === RGBAFormat && map.type === UnsignedByteType && map.encoding === sRGBEncoding ) {\n\n\t\t\tencoding = LinearEncoding; // disable inline decode for sRGB textures in WebGL 2\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet vertexShader, fragmentShader;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\t\t\tspecularColorMapEncoding: getTextureEncodingFromMap( material.specularColorMap ),\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenColorMapEncoding: getTextureEncodingFromMap( material.sheenColorMap ),\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! object.geometry && !! object.geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! object.geometry && !! object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: !! object.geometry && !! object.geometry.morphAttributes.position,\n\t\t\tmorphNormals: !! object.geometry && !! object.geometry.morphAttributes.normal,\n\t\t\tmorphTargetsCount: ( !! object.geometry && !! object.geometry.morphAttributes.position ) ? object.geometry.morphAttributes.position.length : 0,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tformat: material.format,\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( hashString( parameters.fragmentShader ) );\n\t\t\tarray.push( hashString( parameters.vertexShader ) );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tfor ( let i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( renderer.outputEncoding );\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs\n\t};\n\n}\n\n\nexport { WebGLPrograms };\n", "function WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLProperties };\n", "function painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList( properties ) {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tconst defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.program = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists( properties ) {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList( properties );\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList( properties );\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderLists, WebGLRenderList };\n", "import { Color } from '../../math/Color.js';\nimport { Matrix4 } from '../../math/Matrix4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from '../shaders/UniformsLib.js';\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\n\nexport { WebGLLights };\n", "import { WebGLLights } from './WebGLLights.js';\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderStates };\n", "import { Material } from './Material.js';\nimport { BasicDepthPacking } from '../constants.js';\n\n/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nexport { MeshDepthMaterial };\n", "import { Material } from './Material.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nexport { MeshDistanceMaterial };\n", "export const vertex = /* glsl */`\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n\n#include <packing>\n\nvoid main() {\n\n\tconst float samples = float( VSM_SAMPLES );\n\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\n\t// This seems totally useless but it's a crazy work around for a Adreno compiler bug\n\t// float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\n\t\t#ifdef HORIZONTAL_PASS\n\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\n\t\t#else\n\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\n\t\t#endif\n\n\t}\n\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n\n}\n`;\n", "import { FrontSide, BackSide, DoubleSide, RGBAFormat, NearestFilter, LinearFilter, PCFShadowMap, VSMShadowMap, RGBADepthPacking, NoBlending } from '../../constants.js';\nimport { WebGLRenderTarget } from '../WebGLRenderTarget.js';\nimport { MeshDepthMaterial } from '../../materials/MeshDepthMaterial.js';\nimport { MeshDistanceMaterial } from '../../materials/MeshDistanceMaterial.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { BufferAttribute } from '../../core/BufferAttribute.js';\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Frustum } from '../../math/Frustum.js';\n\nimport * as vsm from '../shaders/ShaderLib/vsm.glsl.js';\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm.vertex,\n\t\tfragmentShader: vsm.fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tconst pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { WebGLShadowMap };\n", "import { NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessEqualDepth, LessDepth, AlwaysDepth, NeverDepth, CullFaceFront, CullFaceBack, CullFaceNone, DoubleSide, BackSide, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, NoBlending, NormalBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor } from '../../constants.js';\nimport { Vector4 } from '../../math/Vector4.js';\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet xrFramebuffer = null;\n\tlet currentBoundFramebuffers = {};\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindXRFramebuffer( framebuffer ) {\n\n\t\tif ( framebuffer !== xrFramebuffer ) {\n\n\t\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, framebuffer );\n\n\t\t\txrFramebuffer = framebuffer;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( framebuffer === null && xrFramebuffer !== null ) framebuffer = xrFramebuffer; // use active XR framebuffer if available\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\txrFramebuffer = null;\n\t\tcurrentBoundFramebuffers = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tbindXRFramebuffer: bindXRFramebuffer,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nexport { WebGLState };\n", "import { LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, RGBFormat, RGBAFormat, DepthFormat, DepthStencilFormat, UnsignedShortType, UnsignedIntType, UnsignedInt248Type, FloatType, HalfFloatType, MirroredRepeatWrapping, ClampToEdgeWrapping, RepeatWrapping, sRGBEncoding } from '../../constants.js';\nimport * as MathUtils from '../../math/MathUtils.js';\nimport { createElementNS } from '../../utils.js';\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height, depth = 1 ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\ttextureProperties.__maxMipLevel = Math.log2( Math.max( width, height, depth ) );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGB32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGB16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( encoding === sRGBEncoding ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isDataTexture3D ) textureType = _gl.TEXTURE_3D;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tconst image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\tconst supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format );\n\n\t\tlet glType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tlet mipmap;\n\t\tconst mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// validation checks for WebGL 1\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\tconst isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\tconst cubeImage = [];\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t} else {\n\n\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst image = cubeImage[ 0 ],\n\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\tlet mipmaps;\n\n\t\tif ( isCompressed ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t// We assume images for cube map have the same size.\n\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t} else {\n\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// Use the first texture for MRT so far\n\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[ 0 ] : renderTarget.texture;\n\n\t\t\tconst glFormat = utils.convert( texture.format );\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\tif ( isWebGL2 && texture.format === RGBFormat && ( texture.type === FloatType || texture.type === HalfFloatType ) ) {\n\n\t\t\ttexture.format = RGBAFormat;\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, attachment, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( isRenderTarget3D ) {\n\n\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\tglTextureType = isTexture3D ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType, texture, renderTarget.width, renderTarget.height, renderTarget.depth );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tlet warnedTexture2D = false;\n\tlet warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\n\t\tsetTextureCube( texture, slot );\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\nexport { WebGLTextures };\n", "import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBAFormat, RGBFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort565Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, SRGB8_ALPHA8_ASTC_4x4_Format, SRGB8_ALPHA8_ASTC_5x4_Format, SRGB8_ALPHA8_ASTC_5x5_Format, SRGB8_ALPHA8_ASTC_6x5_Format, SRGB8_ALPHA8_ASTC_6x6_Format, SRGB8_ALPHA8_ASTC_8x5_Format, SRGB8_ALPHA8_ASTC_8x6_Format, SRGB8_ALPHA8_ASTC_8x8_Format, SRGB8_ALPHA8_ASTC_10x5_Format, SRGB8_ALPHA8_ASTC_10x6_Format, SRGB8_ALPHA8_ASTC_10x8_Format, SRGB8_ALPHA8_ASTC_10x10_Format, SRGB8_ALPHA8_ASTC_12x10_Format, SRGB8_ALPHA8_ASTC_12x12_Format, RGBA_BPTC_Format } from '../../constants.js';\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\t\tif ( p === RedFormat ) return gl.RED;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBIntegerFormat ) return gl.RGB_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n\nexport { WebGLUtils };\n", "import { PerspectiveCamera } from './PerspectiveCamera.js';\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nArrayCamera.prototype.isArrayCamera = true;\n\n\nexport { ArrayCamera };\n", "import { Object3D } from '../core/Object3D.js';\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nGroup.prototype.isGroup = true;\n\nexport { Group };\n", "import { Vector3 } from '../../math/Vector3.js';\nimport { Group } from '../../objects/Group.js';\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nexport { WebXRController };\n", "import { ArrayCamera } from '../../cameras/ArrayCamera.js';\nimport { EventDispatcher } from '../../core/EventDispatcher.js';\nimport { PerspectiveCamera } from '../../cameras/PerspectiveCamera.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { WebGLAnimation } from '../webgl/WebGLAnimation.js';\nimport { WebXRController } from './WebXRController.js';\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\t\tconst state = renderer.state;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glFramebuffer = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet isMultisample = false;\n\t\tlet glMultisampledFramebuffer = null;\n\t\tlet glColorRenderbuffer = null;\n\t\tlet glDepthRenderbuffer = null;\n\t\tlet xrFrame = null;\n\t\tlet depthStyle = null;\n\t\tlet clearStyle = null;\n\n\t\tconst controllers = [];\n\t\tconst inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\tstate.bindXRFramebuffer( null );\n\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() );\n\n\t\t\tif ( glFramebuffer ) gl.deleteFramebuffer( glFramebuffer );\n\t\t\tif ( glMultisampledFramebuffer ) gl.deleteFramebuffer( glMultisampledFramebuffer );\n\t\t\tif ( glColorRenderbuffer ) gl.deleteRenderbuffer( glColorRenderbuffer );\n\t\t\tif ( glDepthRenderbuffer ) gl.deleteRenderbuffer( glDepthRenderbuffer );\n\t\t\tglFramebuffer = null;\n\t\t\tglMultisampledFramebuffer = null;\n\t\t\tglColorRenderbuffer = null;\n\t\t\tglDepthRenderbuffer = null;\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn referenceSpace;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( session.renderState.layers === undefined ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t} else if ( gl instanceof WebGLRenderingContext ) {\n\n\t\t\t\t\t// Use old style webgl layer because we can't use MSAA\n\t\t\t\t\t// WebGL2 support.\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glBaseLayer ] } );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tisMultisample = attributes.antialias;\n\t\t\t\t\tlet depthFormat = null;\n\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tclearStyle = gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t\tif ( attributes.stencil ) clearStyle |= gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t\tdepthStyle = attributes.stencil ? gl.DEPTH_STENCIL_ATTACHMENT : gl.DEPTH_ATTACHMENT;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: attributes.alpha ? gl.RGBA8 : gl.RGB8,\n\t\t\t\t\t\tdepthFormat: depthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tglFramebuffer = gl.createFramebuffer();\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\t\tglMultisampledFramebuffer = gl.createFramebuffer();\n\t\t\t\t\t\tglColorRenderbuffer = gl.createRenderbuffer();\n\t\t\t\t\t\tgl.bindRenderbuffer( gl.RENDERBUFFER, glColorRenderbuffer );\n\t\t\t\t\t\tgl.renderbufferStorageMultisample(\n\t\t\t\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\t\t\t\t4,\n\t\t\t\t\t\t\tgl.RGBA8,\n\t\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\t\tglProjLayer.textureHeight );\n\t\t\t\t\t\tstate.bindFramebuffer( gl.FRAMEBUFFER, glMultisampledFramebuffer );\n\t\t\t\t\t\tgl.framebufferRenderbuffer( gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, glColorRenderbuffer );\n\t\t\t\t\t\tgl.bindRenderbuffer( gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tif ( depthFormat !== null ) {\n\n\t\t\t\t\t\t\tglDepthRenderbuffer = gl.createRenderbuffer();\n\t\t\t\t\t\t\tgl.bindRenderbuffer( gl.RENDERBUFFER, glDepthRenderbuffer );\n\t\t\t\t\t\t\tgl.renderbufferStorageMultisample( gl.RENDERBUFFER, 4, depthFormat, glProjLayer.textureWidth, glProjLayer.textureHeight );\n\t\t\t\t\t\t\tgl.framebufferRenderbuffer( gl.FRAMEBUFFER, depthStyle, gl.RENDERBUFFER, glDepthRenderbuffer );\n\t\t\t\t\t\t\tgl.bindRenderbuffer( gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t// Assign inputSources to available controllers\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.position.copy( cameraVR.position );\n\t\t\tcamera.quaternion.copy( cameraVR.quaternion );\n\t\t\tcamera.scale.copy( cameraVR.scale );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction addCamera( i ) {\n\n\t\t\tconst camera = new PerspectiveCamera();\n\t\t\tcamera.layers.enable( i );\n\t\t\tcamera.viewport = new Vector4();\n\t\t\tcameras.push( camera );\n\n\t\t}\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\tstate.bindXRFramebuffer( glBaseLayer.framebuffer );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\n\t\t\t\t\t\tstate.bindXRFramebuffer( glFramebuffer );\n\n\t\t\t\t\t\tif ( glSubImage.depthStencilTexture !== undefined ) {\n\n\t\t\t\t\t\t\tgl.framebufferTexture2D( gl.FRAMEBUFFER, depthStyle, gl.TEXTURE_2D, glSubImage.depthStencilTexture, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.framebufferTexture2D( gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glSubImage.colorTexture, 0 );\n\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! cameras[ i ] ) addCamera( i );\n\n\t\t\t\t\tconst camera = cameras[ i ];\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tstate.bindXRFramebuffer( glMultisampledFramebuffer );\n\n\t\t\t\t\tif ( clearStyle !== null ) gl.clear( clearStyle );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst controller = controllers[ i ];\n\t\t\t\tconst inputSource = inputSources[ i ];\n\n\t\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst width = glProjLayer.textureWidth;\n\t\t\t\tconst height = glProjLayer.textureHeight;\n\n\t\t\t\tstate.bindFramebuffer( gl.READ_FRAMEBUFFER, glMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( gl.DRAW_FRAMEBUFFER, glFramebuffer );\n\t\t\t\t// Invalidate the depth here to avoid flush of the depth data to main memory.\n\t\t\t\tgl.invalidateFramebuffer( gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\tgl.invalidateFramebuffer( gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\tgl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, gl.COLOR_BUFFER_BIT, gl.NEAREST );\n\t\t\t\t// Invalidate the MSAA buffer because it's not needed anymore.\n\t\t\t\tgl.invalidateFramebuffer( gl.READ_FRAMEBUFFER, [ gl.COLOR_ATTACHMENT0 ] );\n\t\t\t\tstate.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\tstate.bindFramebuffer( gl.FRAMEBUFFER, glMultisampledFramebuffer );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nexport { WebXRManager };\n", "import { BackSide } from '../../constants.js';\n\nfunction WebGLMaterials( properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t} else {\n\n\t\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tconst maxMipLevel = properties.get( envMap ).__maxMipLevel;\n\n\t\t\tif ( maxMipLevel !== undefined ) {\n\n\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. specular intensity map\n\t\t// 14. specular tint map\n\t\t// 15. transmission map\n\t\t// 16. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nexport { WebGLMaterials };\n", "import {\n\tBackSide,\n\tDoubleSide,\n\tFrontSide,\n\tRGBAFormat,\n\tHalfFloatType,\n\tFloatType,\n\tUnsignedByteType,\n\tLinearEncoding,\n\tNoToneMapping,\n\tLinearMipmapLinearFilter,\n\tNearestFilter,\n\tClampToEdgeWrapping\n} from '../constants.js';\nimport { Frustum } from '../math/Frustum.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { WebGLAnimation } from './webgl/WebGLAnimation.js';\nimport { WebGLAttributes } from './webgl/WebGLAttributes.js';\nimport { WebGLBackground } from './webgl/WebGLBackground.js';\nimport { WebGLBindingStates } from './webgl/WebGLBindingStates.js';\nimport { WebGLBufferRenderer } from './webgl/WebGLBufferRenderer.js';\nimport { WebGLCapabilities } from './webgl/WebGLCapabilities.js';\nimport { WebGLClipping } from './webgl/WebGLClipping.js';\nimport { WebGLCubeMaps } from './webgl/WebGLCubeMaps.js';\nimport { WebGLCubeUVMaps } from './webgl/WebGLCubeUVMaps.js';\nimport { WebGLExtensions } from './webgl/WebGLExtensions.js';\nimport { WebGLGeometries } from './webgl/WebGLGeometries.js';\nimport { WebGLIndexedBufferRenderer } from './webgl/WebGLIndexedBufferRenderer.js';\nimport { WebGLInfo } from './webgl/WebGLInfo.js';\nimport { WebGLMorphtargets } from './webgl/WebGLMorphtargets.js';\nimport { WebGLMultisampleRenderTarget } from './WebGLMultisampleRenderTarget.js';\nimport { WebGLObjects } from './webgl/WebGLObjects.js';\nimport { WebGLPrograms } from './webgl/WebGLPrograms.js';\nimport { WebGLProperties } from './webgl/WebGLProperties.js';\nimport { WebGLRenderLists } from './webgl/WebGLRenderLists.js';\nimport { WebGLRenderStates } from './webgl/WebGLRenderStates.js';\nimport { WebGLRenderTarget } from './WebGLRenderTarget.js';\nimport { WebGLShadowMap } from './webgl/WebGLShadowMap.js';\nimport { WebGLState } from './webgl/WebGLState.js';\nimport { WebGLTextures } from './webgl/WebGLTextures.js';\nimport { WebGLUniforms } from './webgl/WebGLUniforms.js';\nimport { WebGLUtils } from './webgl/WebGLUtils.js';\nimport { WebXRManager } from './webxr/WebXRManager.js';\nimport { WebGLMaterials } from './webgl/WebGLMaterials.js';\nimport { createElementNS } from '../utils.js';\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t//\n\n\tconst _currentDrawBuffers = [];\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t_currentDrawBuffers[ 0 ] = _gl.BACK;\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( properties );\n\t\trenderLists = new WebGLRenderLists( properties );\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\tconst needsAntialias = _antialias === true && capabilities.isWebGL2 === true;\n\t\t\tconst renderTargetType = needsAntialias ? WebGLMultisampleRenderTarget : WebGLRenderTarget;\n\n\t\t\t_transmissionRenderTarget = new renderTargetType( 1024, 1024, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: utils.convert( HalfFloatType ) !== null ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\twrapS: ClampToEdgeWrapping,\n\t\t\t\twrapT: ClampToEdgeWrapping\n\t\t\t} );\n\n\t\t}\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphTargetsCount = !! geometry.morphAttributes.position ? geometry.morphAttributes.position.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( !! geometry && ( geometry.morphAttributes.position !== undefined || geometry.morphAttributes.normal !== undefined ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isDataTexture3D || texture.isDataTexture2DArray ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tif ( _currentDrawBuffers.length !== textures.length || _currentDrawBuffers[ 0 ] !== _gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t_currentDrawBuffers[ i ] = _gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_currentDrawBuffers.length = textures.length;\n\n\t\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( _currentDrawBuffers.length !== 1 || _currentDrawBuffers[ 0 ] !== _gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\t\t_currentDrawBuffers[ 0 ] = _gl.COLOR_ATTACHMENT0;\n\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\n\t\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( _currentDrawBuffers.length !== 1 || _currentDrawBuffers[ 0 ] !== _gl.BACK ) {\n\n\t\t\t\t\t_currentDrawBuffers[ 0 ] = _gl.BACK;\n\t\t\t\t\t_currentDrawBuffers.length = 1;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t_gl.drawBuffers( _currentDrawBuffers );\n\n\t\t\t\t} else {\n\n\t\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( _currentDrawBuffers );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\tlet glFormat = utils.convert( texture.format );\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\n\t\t\t// Not needed in Chrome 93+\n\n\t\t\tif ( glFormat === _gl.RGB ) glFormat = _gl.RGB8;\n\t\t\tif ( glFormat === _gl.RGBA ) glFormat = _gl.RGBA8;\n\n\t\t}\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isDataTexture3D ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t} else if ( dstTexture.isDataTexture2DArray ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isDataTexture3D ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nWebGLRenderer.prototype.isWebGLRenderer = true;\n\nexport { WebGLRenderer };\n", "import { Object3D } from '../core/Object3D.js';\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nScene.prototype.isScene = true;\n\nexport { Scene };\n", "import { TangentSpaceNormalMap } from '../constants.js';\nimport { Material } from './Material.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nexport { MeshStandardMaterial };\n", "import { Object3D } from '../core/Object3D.js';\nimport { Color } from '../math/Color.js';\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLight.prototype.isLight = true;\n\nexport { Light };\n", "import { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Frustum } from '../math/Frustum.js';\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nexport { LightShadow };\n", "import { LightShadow } from './LightShadow.js';\nimport { OrthographicCamera } from '../cameras/OrthographicCamera.js';\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n}\n\nDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\nexport { DirectionalLightShadow };\n", "import { Light } from './Light.js';\nimport { DirectionalLightShadow } from './DirectionalLightShadow.js';\nimport { Object3D } from '../core/Object3D.js';\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nDirectionalLight.prototype.isDirectionalLight = true;\n\nexport { DirectionalLight };\n", "import { Light } from './Light.js';\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nAmbientLight.prototype.isAmbientLight = true;\n\nexport { AmbientLight };\n", "import { REVISION } from './constants.js';\n\nexport { WebGLMultipleRenderTargets } from './renderers/WebGLMultipleRenderTargets.js';\nexport { WebGLMultisampleRenderTarget } from './renderers/WebGLMultisampleRenderTarget.js';\nexport { WebGLCubeRenderTarget } from './renderers/WebGLCubeRenderTarget.js';\nexport { WebGLRenderTarget } from './renderers/WebGLRenderTarget.js';\nexport { WebGLRenderer } from './renderers/WebGLRenderer.js';\nexport { WebGL1Renderer } from './renderers/WebGL1Renderer.js';\nexport { ShaderLib } from './renderers/shaders/ShaderLib.js';\nexport { UniformsLib } from './renderers/shaders/UniformsLib.js';\nexport { UniformsUtils } from './renderers/shaders/UniformsUtils.js';\nexport { ShaderChunk } from './renderers/shaders/ShaderChunk.js';\nexport { FogExp2 } from './scenes/FogExp2.js';\nexport { Fog } from './scenes/Fog.js';\nexport { Scene } from './scenes/Scene.js';\nexport { Sprite } from './objects/Sprite.js';\nexport { LOD } from './objects/LOD.js';\nexport { SkinnedMesh } from './objects/SkinnedMesh.js';\nexport { Skeleton } from './objects/Skeleton.js';\nexport { Bone } from './objects/Bone.js';\nexport { Mesh } from './objects/Mesh.js';\nexport { InstancedMesh } from './objects/InstancedMesh.js';\nexport { LineSegments } from './objects/LineSegments.js';\nexport { LineLoop } from './objects/LineLoop.js';\nexport { Line } from './objects/Line.js';\nexport { Points } from './objects/Points.js';\nexport { Group } from './objects/Group.js';\nexport { VideoTexture } from './textures/VideoTexture.js';\nexport { DataTexture } from './textures/DataTexture.js';\nexport { DataTexture2DArray } from './textures/DataTexture2DArray.js';\nexport { DataTexture3D } from './textures/DataTexture3D.js';\nexport { CompressedTexture } from './textures/CompressedTexture.js';\nexport { CubeTexture } from './textures/CubeTexture.js';\nexport { CanvasTexture } from './textures/CanvasTexture.js';\nexport { DepthTexture } from './textures/DepthTexture.js';\nexport { Texture } from './textures/Texture.js';\nexport * from './geometries/Geometries.js';\nexport * from './materials/Materials.js';\nexport { AnimationLoader } from './loaders/AnimationLoader.js';\nexport { CompressedTextureLoader } from './loaders/CompressedTextureLoader.js';\nexport { CubeTextureLoader } from './loaders/CubeTextureLoader.js';\nexport { DataTextureLoader } from './loaders/DataTextureLoader.js';\nexport { TextureLoader } from './loaders/TextureLoader.js';\nexport { ObjectLoader } from './loaders/ObjectLoader.js';\nexport { MaterialLoader } from './loaders/MaterialLoader.js';\nexport { BufferGeometryLoader } from './loaders/BufferGeometryLoader.js';\nexport { DefaultLoadingManager, LoadingManager } from './loaders/LoadingManager.js';\nexport { ImageLoader } from './loaders/ImageLoader.js';\nexport { ImageBitmapLoader } from './loaders/ImageBitmapLoader.js';\nexport { FileLoader } from './loaders/FileLoader.js';\nexport { Loader } from './loaders/Loader.js';\nexport { LoaderUtils } from './loaders/LoaderUtils.js';\nexport { Cache } from './loaders/Cache.js';\nexport { AudioLoader } from './loaders/AudioLoader.js';\nexport { SpotLight } from './lights/SpotLight.js';\nexport { PointLight } from './lights/PointLight.js';\nexport { RectAreaLight } from './lights/RectAreaLight.js';\nexport { HemisphereLight } from './lights/HemisphereLight.js';\nexport { HemisphereLightProbe } from './lights/HemisphereLightProbe.js';\nexport { DirectionalLight } from './lights/DirectionalLight.js';\nexport { AmbientLight } from './lights/AmbientLight.js';\nexport { AmbientLightProbe } from './lights/AmbientLightProbe.js';\nexport { Light } from './lights/Light.js';\nexport { LightProbe } from './lights/LightProbe.js';\nexport { StereoCamera } from './cameras/StereoCamera.js';\nexport { PerspectiveCamera } from './cameras/PerspectiveCamera.js';\nexport { OrthographicCamera } from './cameras/OrthographicCamera.js';\nexport { CubeCamera } from './cameras/CubeCamera.js';\nexport { ArrayCamera } from './cameras/ArrayCamera.js';\nexport { Camera } from './cameras/Camera.js';\nexport { AudioListener } from './audio/AudioListener.js';\nexport { PositionalAudio } from './audio/PositionalAudio.js';\nexport { AudioContext } from './audio/AudioContext.js';\nexport { AudioAnalyser } from './audio/AudioAnalyser.js';\nexport { Audio } from './audio/Audio.js';\nexport { VectorKeyframeTrack } from './animation/tracks/VectorKeyframeTrack.js';\nexport { StringKeyframeTrack } from './animation/tracks/StringKeyframeTrack.js';\nexport { QuaternionKeyframeTrack } from './animation/tracks/QuaternionKeyframeTrack.js';\nexport { NumberKeyframeTrack } from './animation/tracks/NumberKeyframeTrack.js';\nexport { ColorKeyframeTrack } from './animation/tracks/ColorKeyframeTrack.js';\nexport { BooleanKeyframeTrack } from './animation/tracks/BooleanKeyframeTrack.js';\nexport { PropertyMixer } from './animation/PropertyMixer.js';\nexport { PropertyBinding } from './animation/PropertyBinding.js';\nexport { KeyframeTrack } from './animation/KeyframeTrack.js';\nexport { AnimationUtils } from './animation/AnimationUtils.js';\nexport { AnimationObjectGroup } from './animation/AnimationObjectGroup.js';\nexport { AnimationMixer } from './animation/AnimationMixer.js';\nexport { AnimationClip } from './animation/AnimationClip.js';\nexport { Uniform } from './core/Uniform.js';\nexport { InstancedBufferGeometry } from './core/InstancedBufferGeometry.js';\nexport { BufferGeometry } from './core/BufferGeometry.js';\nexport { InterleavedBufferAttribute } from './core/InterleavedBufferAttribute.js';\nexport { InstancedInterleavedBuffer } from './core/InstancedInterleavedBuffer.js';\nexport { InterleavedBuffer } from './core/InterleavedBuffer.js';\nexport { InstancedBufferAttribute } from './core/InstancedBufferAttribute.js';\nexport { GLBufferAttribute } from './core/GLBufferAttribute.js';\nexport * from './core/BufferAttribute.js';\nexport { Object3D } from './core/Object3D.js';\nexport { Raycaster } from './core/Raycaster.js';\nexport { Layers } from './core/Layers.js';\nexport { EventDispatcher } from './core/EventDispatcher.js';\nexport { Clock } from './core/Clock.js';\nexport { QuaternionLinearInterpolant } from './math/interpolants/QuaternionLinearInterpolant.js';\nexport { LinearInterpolant } from './math/interpolants/LinearInterpolant.js';\nexport { DiscreteInterpolant } from './math/interpolants/DiscreteInterpolant.js';\nexport { CubicInterpolant } from './math/interpolants/CubicInterpolant.js';\nexport { Interpolant } from './math/Interpolant.js';\nexport { Triangle } from './math/Triangle.js';\nexport * as MathUtils from './math/MathUtils.js';\nexport { Spherical } from './math/Spherical.js';\nexport { Cylindrical } from './math/Cylindrical.js';\nexport { Plane } from './math/Plane.js';\nexport { Frustum } from './math/Frustum.js';\nexport { Sphere } from './math/Sphere.js';\nexport { Ray } from './math/Ray.js';\nexport { Matrix4 } from './math/Matrix4.js';\nexport { Matrix3 } from './math/Matrix3.js';\nexport { Box3 } from './math/Box3.js';\nexport { Box2 } from './math/Box2.js';\nexport { Line3 } from './math/Line3.js';\nexport { Euler } from './math/Euler.js';\nexport { Vector4 } from './math/Vector4.js';\nexport { Vector3 } from './math/Vector3.js';\nexport { Vector2 } from './math/Vector2.js';\nexport { Quaternion } from './math/Quaternion.js';\nexport { Color } from './math/Color.js';\nexport { SphericalHarmonics3 } from './math/SphericalHarmonics3.js';\nexport { SpotLightHelper } from './helpers/SpotLightHelper.js';\nexport { SkeletonHelper } from './helpers/SkeletonHelper.js';\nexport { PointLightHelper } from './helpers/PointLightHelper.js';\nexport { HemisphereLightHelper } from './helpers/HemisphereLightHelper.js';\nexport { GridHelper } from './helpers/GridHelper.js';\nexport { PolarGridHelper } from './helpers/PolarGridHelper.js';\nexport { DirectionalLightHelper } from './helpers/DirectionalLightHelper.js';\nexport { CameraHelper } from './helpers/CameraHelper.js';\nexport { BoxHelper } from './helpers/BoxHelper.js';\nexport { Box3Helper } from './helpers/Box3Helper.js';\nexport { PlaneHelper } from './helpers/PlaneHelper.js';\nexport { ArrowHelper } from './helpers/ArrowHelper.js';\nexport { AxesHelper } from './helpers/AxesHelper.js';\nexport * from './extras/curves/Curves.js';\nexport { Shape } from './extras/core/Shape.js';\nexport { Path } from './extras/core/Path.js';\nexport { ShapePath } from './extras/core/ShapePath.js';\nexport { CurvePath } from './extras/core/CurvePath.js';\nexport { Curve } from './extras/core/Curve.js';\nexport { DataUtils } from './extras/DataUtils.js';\nexport { ImageUtils } from './extras/ImageUtils.js';\nexport { ShapeUtils } from './extras/ShapeUtils.js';\nexport { PMREMGenerator } from './extras/PMREMGenerator.js';\nexport { WebGLUtils } from './renderers/webgl/WebGLUtils.js';\nexport * from './constants.js';\nexport * from './Three.Legacy.js';\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t/* eslint-disable no-undef */\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\t/* eslint-enable no-undef */\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n", "class VRButton {\n\n\tstatic createButton( renderer, options ) {\n\n\t\tif ( options ) {\n\n\t\t\tconsole.error( 'THREE.VRButton: The \"options\" parameter has been removed. Please set the reference space type via renderer.xr.setReferenceSpaceType() instead.' );\n\n\t\t}\n\n\t\tconst button = document.createElement( 'button' );\n\n\t\tfunction showEnterVR( /*device*/ ) {\n\n\t\t\tlet currentSession = null;\n\n\t\t\tasync function onSessionStarted( session ) {\n\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\n\n\t\t\t\tawait renderer.xr.setSession( session );\n\t\t\t\tbutton.textContent = 'EXIT VR';\n\n\t\t\t\tcurrentSession = session;\n\n\t\t\t}\n\n\t\t\tfunction onSessionEnded( /*event*/ ) {\n\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\n\n\t\t\t\tbutton.textContent = 'ENTER VR';\n\n\t\t\t\tcurrentSession = null;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tbutton.style.display = '';\n\n\t\t\tbutton.style.cursor = 'pointer';\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\n\t\t\tbutton.style.width = '100px';\n\n\t\t\tbutton.textContent = 'ENTER VR';\n\n\t\t\tbutton.onmouseenter = function () {\n\n\t\t\t\tbutton.style.opacity = '1.0';\n\n\t\t\t};\n\n\t\t\tbutton.onmouseleave = function () {\n\n\t\t\t\tbutton.style.opacity = '0.5';\n\n\t\t\t};\n\n\t\t\tbutton.onclick = function () {\n\n\t\t\t\tif ( currentSession === null ) {\n\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\n\t\t\t\t\t// be requested separately.)\n\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcurrentSession.end();\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction disableButton() {\n\n\t\t\tbutton.style.display = '';\n\n\t\t\tbutton.style.cursor = 'auto';\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\n\t\t\tbutton.style.width = '150px';\n\n\t\t\tbutton.onmouseenter = null;\n\t\t\tbutton.onmouseleave = null;\n\n\t\t\tbutton.onclick = null;\n\n\t\t}\n\n\t\tfunction showWebXRNotFound() {\n\n\t\t\tdisableButton();\n\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\n\n\t\t}\n\n\t\tfunction stylizeElement( element ) {\n\n\t\t\telement.style.position = 'absolute';\n\t\t\telement.style.bottom = '20px';\n\t\t\telement.style.padding = '12px 6px';\n\t\t\telement.style.border = '1px solid #fff';\n\t\t\telement.style.borderRadius = '4px';\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\n\t\t\telement.style.color = '#fff';\n\t\t\telement.style.font = 'normal 13px sans-serif';\n\t\t\telement.style.textAlign = 'center';\n\t\t\telement.style.opacity = '0.5';\n\t\t\telement.style.outline = 'none';\n\t\t\telement.style.zIndex = '999';\n\n\t\t}\n\n\t\tif ( 'xr' in navigator ) {\n\n\t\t\tbutton.id = 'VRButton';\n\t\t\tbutton.style.display = 'none';\n\n\t\t\tstylizeElement( button );\n\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\n\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\n\n\t\t\t} );\n\n\t\t\treturn button;\n\n\t\t} else {\n\n\t\t\tconst message = document.createElement( 'a' );\n\n\t\t\tif ( window.isSecureContext === false ) {\n\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n\n\t\t\t} else {\n\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\n\n\t\t\t}\n\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\n\t\t\tmessage.style.width = '180px';\n\t\t\tmessage.style.textDecoration = 'none';\n\n\t\t\tstylizeElement( message );\n\n\t\t\treturn message;\n\n\t\t}\n\n\t}\n\n}\n\nexport { VRButton };\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A library for including application global. Similar to\n * logic provided by `rollup-plugin-node-globals` without the\n * rest of the functionality needed.\n */\n\nconst _global = typeof global !== 'undefined' ? global :\n                typeof self !== 'undefined' ? self :\n                typeof window !== 'undefined' ? window : {};\n\nexport default _global;\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst PRIVATE = Symbol('@@webxr-polyfill/EventTarget');\n\nexport default class EventTarget {\n  constructor() {\n    this[PRIVATE] = {\n      listeners: new Map(),\n    };\n  }\n\n  /**\n   * @param {string} type\n   * @param {Function} listener\n   */\n  addEventListener(type, listener) {\n    if (typeof type !== 'string') { throw new Error('`type` must be a string'); }\n    if (typeof listener !== 'function') { throw new Error('`listener` must be a function'); }\n\n    const typedListeners = this[PRIVATE].listeners.get(type) || [];\n    typedListeners.push(listener);\n    this[PRIVATE].listeners.set(type, typedListeners);\n  }\n\n  /**\n   * @param {string} type\n   * @param {Function} listener\n   */\n  removeEventListener(type, listener) {\n    if (typeof type !== 'string') { throw new Error('`type` must be a string'); }\n    if (typeof listener !== 'function') { throw new Error('`listener` must be a function'); }\n\n    const typedListeners = this[PRIVATE].listeners.get(type) || [];\n\n    for (let i = typedListeners.length; i >= 0; i--) {\n      if (typedListeners[i] === listener) {\n        typedListeners.pop();\n      }\n    }\n  }\n\n  /**\n   * @param {string} type\n   * @param {object} event\n   */\n  dispatchEvent(type, event) {\n    const typedListeners = this[PRIVATE].listeners.get(type) || [];\n\n    // Copy over all the listeners because a callback could remove\n    // an event listener, preventing all listeners from firing when\n    // the event was first dispatched.\n    const queue = [];\n    for (let i = 0; i < typedListeners.length; i++) {\n      queue[i] = typedListeners[i];\n    }\n\n    for (let listener of queue) {\n      listener(event);\n    }\n\n    // Also fire if this EventTarget has an `on${EVENT_TYPE}` property\n    // that's a function\n    if (typeof this[`on${type}`] === 'function') {\n      this[`on${type}`](event);\n    }\n  }\n}\n", "/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n", "import * as glMatrix from \"./common.js\";\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a03 = a[3];\n    let a12 = a[6], a13 = a[7];\n    let a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0]  = a[0];\n    out[1]  = a[1];\n    out[2]  = a[2];\n    out[3]  = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4]  = a[4];\n    out[5]  = a[5];\n    out[6]  = a[6];\n    out[7]  = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8]  = a[8];\n    out[9]  = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = 1;\n  out[1]  = 0;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = 0;\n  out[2]  = -s;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = s;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {quat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  let translation = new glMatrix.ARRAY_TYPE(3);\n  let bx = -a[0], by = -a[1], bz = -a[2], bw = a[3],\n  ax = a[4], ay = a[5], az = a[6], aw = a[7];\n\n  let magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  //Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  let m11 = mat[0];\n  let m12 = mat[1];\n  let m13 = mat[2];\n  let m21 = mat[4];\n  let m22 = mat[5];\n  let m23 = mat[6];\n  let m31 = mat[8];\n  let m32 = mat[9];\n  let m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  let trace = mat[0] + mat[5] + mat[10];\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if ((mat[0] > mat[5]) && (mat[0] > mat[10])) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  let ox = o[0];\n  let oy = o[1];\n  let oz = o[2];\n\n  let out0 = (1 - (yy + zz)) * sx;\n  let out1 = (xy + wz) * sx;\n  let out2 = (xz - wy) * sx;\n  let out4 = (xy - wz) * sy;\n  let out5 = (1 - (xx + zz)) * sy;\n  let out6 = (yz + wx) * sy;\n  let out8 = (xz + wy) * sz;\n  let out9 = (yz - wx) * sz;\n  let out10 = (1 - (xx + yy)) * sz;\n\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  let rl = 1 / (right - left);\n  let tb = 1 / (top - bottom);\n  let nf = 1 / (near - far);\n  out[0] = (near * 2) * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = (near * 2) * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (far * near * 2) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  let f = 1.0 / Math.tan(fovy / 2), nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = (2 * far * near) * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\n  let xScale = 2.0 / (leftTan + rightTan);\n  let yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = ((upTan - downTan) * yScale * 0.5);\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n  let lr = 1 / (left - right);\n  let bt = 1 / (bottom - top);\n  let nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  let eyex = eye[0];\n  let eyey = eye[1];\n  let eyez = eye[2];\n  let upx = up[0];\n  let upy = up[1];\n  let upz = up[2];\n  let centerx = center[0];\n  let centery = center[1];\n  let centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  let eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  let z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  let len = z0*z0 + z1*z1 + z2*z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  len = x0*x0 + x1*x1 + x2*x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  out[9] = a[9] + (b[9] * scale);\n  out[10] = a[10] + (b[10] * scale);\n  out[11] = a[11] + (b[11] * scale);\n  out[12] = a[12] + (b[12] * scale);\n  out[13] = a[13] + (b[13] * scale);\n  out[14] = a[14] + (b[14] * scale);\n  out[15] = a[15] + (b[15] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n", "import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2];\n  let bx = b[0], by = b[1], bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  let factorTimes2 = t * t;\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\n  let factor2 = factorTimes2 * (t - 2) + t;\n  let factor3 = factorTimes2 * (t - 1);\n  let factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  let inverseFactor = 1 - t;\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  let factorTimes2 = t * t;\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\n  let factor2 = 3 * t * inverseFactorTimesTwo;\n  let factor3 = 3 * factorTimes2 * inverseFactor;\n  let factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\n  let zScale = Math.sqrt(1.0-z*z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n    let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n    let x = a[0], y = a[1], z = a[2];\n    // var qvec = [qx, qy, qz];\n    // var uv = vec3.cross([], qvec, a);\n    let uvx = qy * z - qz * y,\n        uvy = qz * x - qx * z,\n        uvz = qx * y - qy * x;\n    // var uuv = vec3.cross([], qvec, uv);\n    let uuvx = qy * uvz - qz * uvy,\n        uuvy = qz * uvx - qx * uvz,\n        uuvz = qx * uvy - qy * uvx;\n    // vec3.scale(uv, uv, 2 * w);\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n    // vec3.scale(uuv, uuv, 2);\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n    // return vec3.add(out, a, vec3.add(out, uv, uuv));\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let tempA = fromValues(a[0], a[1], a[2]);\n  let tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  let cosine = dot(tempA, tempB);\n\n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2];\n  let b0 = b[0], b1 = b[1], b2 = b[2];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 3;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n", "import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b01 = a22 * a11 - a12 * a21;\n  let b11 = -a22 * a10 + a12 * a20;\n  let b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  out[0] = (a11 * a22 - a12 * a21);\n  out[1] = (a02 * a21 - a01 * a22);\n  out[2] = (a01 * a12 - a02 * a11);\n  out[3] = (a12 * a20 - a10 * a22);\n  out[4] = (a00 * a22 - a02 * a20);\n  out[5] = (a02 * a10 - a00 * a12);\n  out[6] = (a10 * a21 - a11 * a20);\n  out[7] = (a01 * a20 - a00 * a21);\n  out[8] = (a00 * a11 - a01 * a10);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b00 = b[0], b01 = b[1], b02 = b[2];\n  let b10 = b[3], b11 = b[4], b12 = b[5];\n  let b20 = b[6], b21 = b[7], b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n    x = v[0], y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nexport function normalFromMat4(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport const sub = subtract;\n", "import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  let len = x*x + y*y + z*z + w*w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  let aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2], w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 4;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n    }\n\n    return a;\n  };\n})();\n", "import * as glMatrix from \"./common.js\"\nimport * as mat3 from \"./mat3.js\"\nimport * as vec3 from \"./vec3.js\"\nimport * as vec4 from \"./vec4.js\"\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  let rad = Math.acos(q[3]) * 2.0;\n  let s = Math.sin(rad / 2.0);\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let by = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bz = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  let x = a[0], y = a[1], z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  let omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if ( cosom < 0.0 ) {\n    cosom = -cosom;\n    bx = - bx;\n    by = - by;\n    bz = - bz;\n    bw = - bw;\n  }\n  // calculate coefficients\n  if ( (1.0 - cosom) > glMatrix.EPSILON ) {\n    // standard case (slerp)\n    omega  = Math.acos(cosom);\n    sinom  = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Generates a random quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  let u1 = glMatrix.RANDOM();\n  let u2 = glMatrix.RANDOM();\n  let u3 = glMatrix.RANDOM();\n\n  let sqrt1MinusU1 = Math.sqrt(1 - u1);\n  let sqrtU1 = Math.sqrt(u1);\n\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\n  let invDot = dot ? 1.0/dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0*invDot;\n  out[1] = -a1*invDot;\n  out[2] = -a2*invDot;\n  out[3] = a3*invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  let fTrace = m[0] + m[4] + m[8];\n  let fRoot;\n\n  if ( fTrace > 0.0 ) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5/fRoot;  // 1/(4w)\n    out[0] = (m[5]-m[7])*fRoot;\n    out[1] = (m[6]-m[2])*fRoot;\n    out[2] = (m[1]-m[3])*fRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n    if ( m[4] > m[0] )\n      i = 1;\n    if ( m[8] > m[i*3+i] )\n      i = 2;\n    let j = (i+1)%3;\n    let k = (i+2)%3;\n\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n    let halfToRad = 0.5 * Math.PI / 180.0;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n\n    let sx = Math.sin(x);\n    let cx = Math.cos(x);\n    let sy = Math.sin(y);\n    let cy = Math.cos(y);\n    let sz = Math.sin(z);\n    let cz = Math.cos(z);\n\n    out[0] = sx * cy * cz - cx * sy * sz;\n    out[1] = cx * sy * cz + sx * cy * sz;\n    out[2] = cx * cy * sz - sx * sy * cz;\n    out[3] = cx * cy * cz + sx * sy * sz;\n\n    return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport const clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport const fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nexport const rotationTo = (function() {\n  let tmpvec3 = vec3.create();\n  let xUnitVec3 = vec3.fromValues(1,0,0);\n  let yUnitVec3 = vec3.fromValues(0,1,0);\n\n  return function(out, a, b) {\n    let dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001)\n        vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n})();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport const sqlerp = (function () {\n  let temp1 = create();\n  let temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}());\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport const setAxes = (function() {\n  let matr = mat3.create();\n\n  return function(out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n})();\n", "/*\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as mat4 from 'gl-matrix/src/gl-matrix/mat4';\nimport * as vec3 from 'gl-matrix/src/gl-matrix/vec3';\nimport * as quat from 'gl-matrix/src/gl-matrix/quat';\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRRigidTransform');\n\nexport default class XRRigidTransform {\n  // no arguments: identity transform\n  // (Float32Array): transform based on matrix\n  // (DOMPointReadOnly): transform based on position without any rotation\n  // (DOMPointReadOnly, DOMPointReadOnly): transform based on position and\n  // orientation quaternion\n  constructor() {\n    this[PRIVATE] = {\n      matrix: null,\n      position: null,\n      orientation: null,\n      inverse: null,\n    };\n\n    if (arguments.length === 0) {\n      this[PRIVATE].matrix = mat4.identity(new Float32Array(16));\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Float32Array) {\n        this[PRIVATE].matrix = arguments[0];\n      } else {\n        this[PRIVATE].position = this._getPoint(arguments[0]);\n        this[PRIVATE].orientation = DOMPointReadOnly.fromPoint({\n            x: 0, y: 0, z: 0, w: 1\n        });\n      }\n    } else if (arguments.length === 2) {\n      this[PRIVATE].position = this._getPoint(arguments[0]);\n      this[PRIVATE].orientation = this._getPoint(arguments[1]);\n    } else {\n      throw new Error(\"Too many arguments!\");\n    }\n\n    if (this[PRIVATE].matrix) {\n        // Decompose matrix into position and orientation.\n        let position = vec3.create();\n        mat4.getTranslation(position, this[PRIVATE].matrix);\n        this[PRIVATE].position = DOMPointReadOnly.fromPoint({\n            x: position[0],\n            y: position[1],\n            z: position[2]\n        });\n\n        let orientation = quat.create();\n        mat4.getRotation(orientation, this[PRIVATE].matrix);\n        this[PRIVATE].orientation = DOMPointReadOnly.fromPoint({\n          x: orientation[0],\n          y: orientation[1],\n          z: orientation[2],\n          w: orientation[3]\n        });\n    } else {\n        // Compose matrix from position and orientation.\n        this[PRIVATE].matrix = mat4.identity(new Float32Array(16));\n        mat4.fromRotationTranslation(\n          this[PRIVATE].matrix,\n          quat.fromValues(\n            this[PRIVATE].orientation.x,\n            this[PRIVATE].orientation.y,\n            this[PRIVATE].orientation.z,\n            this[PRIVATE].orientation.w),\n          vec3.fromValues(\n            this[PRIVATE].position.x,\n            this[PRIVATE].position.y,\n            this[PRIVATE].position.z)\n        );\n    }\n  }\n\n  /**\n   * Try to convert arg to a DOMPointReadOnly if it isn't already one.\n   * @param {*} arg\n   * @return {DOMPointReadOnly}\n   */\n  _getPoint(arg) {\n    if (arg instanceof DOMPointReadOnly) {\n      return arg;\n    }\n\n    return DOMPointReadOnly.fromPoint(arg);\n  }\n\n  /**\n   * @return {Float32Array}\n   */\n  get matrix() { return this[PRIVATE].matrix; }\n\n  /**\n   * @return {DOMPointReadOnly}\n   */\n  get position() { return this[PRIVATE].position; }\n\n  /**\n   * @return {DOMPointReadOnly}\n   */\n  get orientation() { return this[PRIVATE].orientation; }\n\n  /**\n   * @return {XRRigidTransform}\n   */\n  get inverse() {\n    if (this[PRIVATE].inverse === null) {\n      let invMatrix = mat4.identity(new Float32Array(16));\n      mat4.invert(invMatrix, this[PRIVATE].matrix);\n      this[PRIVATE].inverse = new XRRigidTransform(invMatrix);\n      this[PRIVATE].inverse[PRIVATE].inverse = this;\n    }\n\n    return this[PRIVATE].inverse;\n  }\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport XRRigidTransform from './XRRigidTransform';\nimport * as mat4 from 'gl-matrix/src/gl-matrix/mat4';\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRSpace');\n\n// Not exposed, for reference only\nexport const XRSpaceSpecialTypes = [\n  \"grip\",\n  \"target-ray\"\n];\n\nexport default class XRSpace {\n  /**\n   * @param {string?} specialType\n   * @param {XRInputSource?} inputSource \n   */\n  constructor(specialType = null, inputSource = null) {\n    this[PRIVATE] = {\n      specialType,\n      inputSource,\n      // The transform for the space in the base space, along with it's inverse\n      baseMatrix: null,\n      inverseBaseMatrix: null,\n      lastFrameId: -1\n    };\n  }\n\n  /**\n   * @return {string?}\n   */\n  get _specialType() {\n    return this[PRIVATE].specialType;\n  }\n\n  /**\n   * @return {XRInputSource?}\n   */\n  get _inputSource() {\n    return this[PRIVATE].inputSource;\n  }\n\n  /**\n   * NON-STANDARD\n   * Trigger an update for this space's base pose if necessary\n   * @param {XRDevice} device\n   * @param {Number} frameId\n   */\n  _ensurePoseUpdated(device, frameId) {\n    if (frameId == this[PRIVATE].lastFrameId) return;\n    this[PRIVATE].lastFrameId = frameId;\n    this._onPoseUpdate(device);\n  }\n\n  /**\n   * NON-STANDARD\n   * Called when this space's base pose needs to be updated\n   * @param {XRDevice} device\n   */\n  _onPoseUpdate(device) {\n    if (this[PRIVATE].specialType == 'viewer') {\n      this._baseMatrix = device.getBasePoseMatrix();\n    }\n  }\n\n  /**\n   * NON-STANDARD\n   * @param {Float32Array(16)} matrix\n   */\n  set _baseMatrix(matrix) {\n    this[PRIVATE].baseMatrix = matrix;\n    this[PRIVATE].inverseBaseMatrix = null;\n  }\n\n  /**\n   * NON-STANDARD\n   * @return {Float32Array(16)}\n   */\n  get _baseMatrix() {\n    if (!this[PRIVATE].baseMatrix) {\n      if (this[PRIVATE].inverseBaseMatrix) {\n        this[PRIVATE].baseMatrix = new Float32Array(16);\n        mat4.invert(this[PRIVATE].baseMatrix, this[PRIVATE].inverseBaseMatrix);\n      }\n    }\n    return this[PRIVATE].baseMatrix;\n  }\n\n  /**\n   * NON-STANDARD\n   * @param {Float32Array(16)} matrix\n   */\n  set _inverseBaseMatrix(matrix) {\n    this[PRIVATE].inverseBaseMatrix = matrix;\n    this[PRIVATE].baseMatrix = null;\n  }\n\n  /**\n   * NON-STANDARD\n   * @return {Float32Array(16)}\n   */\n  get _inverseBaseMatrix() {\n    if (!this[PRIVATE].inverseBaseMatrix) {\n      if (this[PRIVATE].baseMatrix) {\n        this[PRIVATE].inverseBaseMatrix = new Float32Array(16);\n        mat4.invert(this[PRIVATE].inverseBaseMatrix, this[PRIVATE].baseMatrix);\n      }\n    }\n    return this[PRIVATE].inverseBaseMatrix;\n  }\n\n  /**\n   * NON-STANDARD\n   * Gets the transform of the given space in this space\n   *\n   * @param {XRSpace} space\n   * @return {XRRigidTransform}\n   */\n  _getSpaceRelativeTransform(space) {\n    if (!this._inverseBaseMatrix || !space._baseMatrix) {\n      return null;\n    }\n    let out = new Float32Array(16);\n    mat4.multiply(out, this._inverseBaseMatrix, space._baseMatrix);\n    return new XRRigidTransform(out);\n  }\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport XRSpace from './XRSpace';\nimport * as mat4 from 'gl-matrix/src/gl-matrix/mat4';\n\nconst DEFAULT_EMULATION_HEIGHT = 1.6;\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRReferenceSpace');\n\nexport const XRReferenceSpaceTypes = [\n  'viewer',\n  'local',\n  'local-floor',\n  'bounded-floor',\n  'unbounded' // TODO: 'unbounded' is not supported by the polyfill.\n];\n\n/**\n * @param {string} type \n * @return {boolean}\n */\nfunction isFloor(type) {\n  return type === 'bounded-floor' || type === 'local-floor';\n}\n\nexport default class XRReferenceSpace extends XRSpace {\n  /**\n   * Optionally takes a `transform` from a device's requestFrameOfReferenceMatrix\n   * so device's can provide their own transforms for stage (or if they\n   * wanted to override eye-level/head-model).\n   *\n   * @param {XRReferenceSpaceType} type\n   * @param {Float32Array?} transform\n   */\n  constructor(type, transform = null) {\n    if (!XRReferenceSpaceTypes.includes(type)) {\n      throw new Error(`XRReferenceSpaceType must be one of ${XRReferenceSpaceTypes}`);\n    }\n\n    super(type);\n\n    // If stage emulation is disabled, and this is a stage frame of reference,\n    // and the XRDevice did not provide a transform, this is an invalid\n    // configuration and we shouldn't emulate here. XRSession.requestFrameOfReference\n    // should check this as well.\n    if (type === 'bounded-floor' && !transform) {\n      throw new Error(`XRReferenceSpace cannot use 'bounded-floor' type if the platform does not provide the floor level`);\n    }\n\n    // If we're using floor-level reference and no transform, we're emulating.\n    // Set emulated height from option or use the default\n    if (isFloor(type) && !transform) {\n      // Apply an emulated height to the `y` translation\n      transform = mat4.identity(new Float32Array(16));\n      transform[13] = DEFAULT_EMULATION_HEIGHT;\n    }\n\n    this._inverseBaseMatrix = transform || mat4.identity(new Float32Array(16));\n\n    this[PRIVATE] = {\n      type,\n      transform,\n      originOffset : mat4.identity(new Float32Array(16)),\n    };\n  }\n\n  /**\n   * NON-STANDARD\n   * Takes a base pose model matrix and transforms it by the\n   * frame of reference.\n   *\n   * @param {Float32Array} out\n   * @param {Float32Array} pose\n   */\n  _transformBasePoseMatrix(out, pose) {\n    mat4.multiply(out, this._inverseBaseMatrix, pose);\n  }\n\n  /**\n   * NON-STANDARD\n   * \n   * @return {Float32Array}\n   */\n  _originOffsetMatrix() {\n    return this[PRIVATE].originOffset;\n  }\n\n  /**\n   * transformMatrix = Inv(OriginOffsetMatrix) * transformMatrix\n   * @param {Float32Array} transformMatrix \n   */\n  _adjustForOriginOffset(transformMatrix) {\n    let inverseOriginOffsetMatrix = new Float32Array(16);\n    mat4.invert(inverseOriginOffsetMatrix, this[PRIVATE].originOffset);\n    mat4.multiply(transformMatrix, inverseOriginOffsetMatrix, transformMatrix);\n  }\n\n  /**\n   * Gets the transform of the given space in this space\n   *\n   * @param {XRSpace} space\n   * @return {XRRigidTransform}\n   */\n  _getSpaceRelativeTransform(space) {\n    let transform = super._getSpaceRelativeTransform(space);\n    // TODO: Optimize away double creation of XRRigidTransform\n    this._adjustForOriginOffset(transform.matrix)\n    return new XRRigidTransform(transform.matrix);\n  }\n\n  /**\n   * Doesn't update the bound geometry for bounded reference spaces.\n   * @param {XRRigidTransform} additionalOffset\n   * @return {XRReferenceSpace}\n  */\n  getOffsetReferenceSpace(additionalOffset) {\n    let newSpace = new XRReferenceSpace(\n      this[PRIVATE].type,\n      this[PRIVATE].transform,\n      this[PRIVATE].bounds);\n\n    mat4.multiply(newSpace[PRIVATE].originOffset, this[PRIVATE].originOffset, additionalOffset.matrix);\n    return newSpace;\n  }\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventTarget from '../lib/EventTarget';\nimport { XRReferenceSpaceTypes } from './XRReferenceSpace';\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XR');\n\nexport const XRSessionModes = ['inline', 'immersive-vr', 'immersive-ar'];\n\nconst DEFAULT_SESSION_OPTIONS = {\n  'inline': {\n    requiredFeatures: ['viewer'],\n    optionalFeatures: [],\n  },\n  'immersive-vr': {\n    requiredFeatures: ['viewer', 'local'],\n    optionalFeatures: [],\n  },\n  'immersive-ar': {\n    requiredFeatures: ['viewer', 'local'],\n    optionalFeatures: [],\n  }\n};\n\nconst POLYFILL_REQUEST_SESSION_ERROR = \n`Polyfill Error: Must call navigator.xr.isSessionSupported() with any XRSessionMode\nor navigator.xr.requestSession('inline') prior to requesting an immersive\nsession. This is a limitation specific to the WebXR Polyfill and does not apply\nto native implementations of the API.`\n\nexport default class XRSystem extends EventTarget {\n  /**\n   * Receives a promise of an XRDevice, so that the polyfill\n   * can pass in some initial checks to asynchronously provide XRDevices\n   * if content immediately requests `requestDevice()`.\n   *\n   * @param {Promise<XRDevice>} devicePromise\n   */\n  constructor(devicePromise) {\n    super();\n    this[PRIVATE] = {\n      device: null,\n      devicePromise,\n      immersiveSession: null,\n      inlineSessions: new Set(),\n    };\n\n    devicePromise.then((device) => { this[PRIVATE].device = device; });\n  }\n\n  /**\n   * @param {XRSessionMode} mode\n   * @return {Promise<boolean>}\n   */\n  async isSessionSupported(mode) {\n    // Always ensure that we wait for the device promise to resolve.\n    if (!this[PRIVATE].device) {\n      await this[PRIVATE].devicePromise;\n    }\n\n    // 'inline' is always guaranteed to be supported.\n    if (mode != 'inline') {\n      return Promise.resolve(this[PRIVATE].device.isSessionSupported(mode));\n    } \n\n    return Promise.resolve(true);\n  }\n\n  /**\n   * @param {XRSessionMode} mode\n   * @param {XRSessionInit} options\n   * @return {Promise<XRSession>}\n   */\n  async requestSession(mode, options) {\n    // If the device hasn't resolved yet, wait for it and try again.\n    if (!this[PRIVATE].device) {\n      if (mode != 'inline') {\n        // Because requesting immersive modes requires a user gesture, we can't\n        // wait for a promise to resolve before making the real session request.\n        // For that reason, we'll throw a polyfill-specific error here.\n        throw new Error(POLYFILL_REQUEST_SESSION_ERROR);\n      } else {\n        await this[PRIVATE].devicePromise;\n      }\n    }\n\n    if (!XRSessionModes.includes(mode)) {\n      throw new TypeError(\n          `The provided value '${mode}' is not a valid enum value of type XRSessionMode`);\n    }\n\n    // Resolve which of the requested features are supported and reject if a\n    // required feature isn't available.\n    const defaultOptions = DEFAULT_SESSION_OPTIONS[mode];\n    const requiredFeatures = defaultOptions.requiredFeatures.concat(\n        options && options.requiredFeatures ? options.requiredFeatures : []);\n    const optionalFeatures = defaultOptions.optionalFeatures.concat(\n        options && options.optionalFeatures ? options.optionalFeatures : []);\n    const enabledFeatures = new Set();\n\n    let requirementsFailed = false;\n    for (let feature of requiredFeatures) {\n      if (!this[PRIVATE].device.isFeatureSupported(feature)) {\n        console.error(`The required feature '${feature}' is not supported`);\n        requirementsFailed = true;\n      } else {\n        enabledFeatures.add(feature);\n      }\n    }\n\n    if (requirementsFailed) {\n      throw new DOMException('Session does not support some required features', 'NotSupportedError');\n    }\n\n    for (let feature of optionalFeatures) {\n      if (!this[PRIVATE].device.isFeatureSupported(feature)) {\n        console.log(`The optional feature '${feature}' is not supported`);\n      } else {\n        enabledFeatures.add(feature);\n      }\n    }\n\n    // Call device's requestSession, which does some initialization (1.1 \n    // fallback calls `vrDisplay.requestPresent()` for example). Could throw \n    // due to missing user gesture.\n    const sessionId = await this[PRIVATE].device.requestSession(mode, enabledFeatures);\n    const session = new XRSession(this[PRIVATE].device, mode, sessionId);\n\n    if (mode == 'inline') {\n      this[PRIVATE].inlineSessions.add(session);\n    } else {\n      this[PRIVATE].immersiveSession = session;\n    }\n\n    const onSessionEnd = () => {\n      if (mode == 'inline') {\n        this[PRIVATE].inlineSessions.delete(session);\n      } else {\n        this[PRIVATE].immersiveSession = null;\n      }\n      session.removeEventListener('end', onSessionEnd);\n    };\n    session.addEventListener('end', onSessionEnd);\n\n    return session;\n  }\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A wrapper around `performance.now()` so that we can run unit tests\n * in Node.\n */\n\nimport GLOBAL from './global';\n\nlet now;\nif ('performance' in GLOBAL === false) {\n  let startTime = Date.now();\n  now = () => Date.now() - startTime;\n} else {\n  now = () => performance.now();\n}\n\nexport default now;\n", "/*\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRPose');\n\nexport default class XRPose {\n  /**\n   * @param {XRRigidTransform} transform \n   * @param {boolean} emulatedPosition \n   */\n  constructor(transform, emulatedPosition) {\n    this[PRIVATE] = {\n      transform,\n      emulatedPosition,\n    };\n  }\n\n  /**\n   * @return {XRRigidTransform}\n   */\n  get transform() { return this[PRIVATE].transform; }\n\n  /**\n   * @return {bool}\n   */\n  get emulatedPosition() { return this[PRIVATE].emulatedPosition; }\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport XRPose from './XRPose';\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRViewerPose');\n\nexport default class XRViewerPose extends XRPose {\n  /**\n   * @param {XRDevice} device\n   */\n  constructor(transform, views, emulatedPosition = false) {\n    super(transform, emulatedPosition);\n    this[PRIVATE] = {\n      views\n    };\n  }\n\n  /**\n   * @return {Array<XRView>}\n   */\n  get views() {\n    return this[PRIVATE].views;\n  }\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRViewport');\n\nexport default class XRViewport {\n  /**\n   * Takes a proxy object that this viewport's XRView\n   * updates and we serve here to match API.\n   *\n   * @param {Object} target\n   */\n  constructor(target) {\n    this[PRIVATE] = { target };\n  }\n\n  /**\n   * @return {number}\n   */\n  get x() { return this[PRIVATE].target.x; }\n\n  /**\n   * @return {number}\n   */\n  get y() { return this[PRIVATE].target.y; }\n\n  /**\n   * @return {number}\n   */\n  get width() { return this[PRIVATE].target.width; }\n\n  /**\n   * @return {number}\n   */\n  get height() { return this[PRIVATE].target.height; }\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport XRViewport from './XRViewport';\nimport XRRigidTransform from './XRRigidTransform';\n\nconst XREyes = ['left', 'right', 'none'];\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRView');\n\nexport default class XRView {\n  /**\n   * @param {XRDevice} device\n   * @param {XREye} eye\n   * @param {number} sessionId\n   * @param {number} viewIndex\n   */\n  constructor(device, transform, eye, sessionId, viewIndex) {\n    if (!XREyes.includes(eye)) {\n      throw new Error(`XREye must be one of: ${XREyes}`);\n    }\n\n    // Create a shared object that can be updated by other code\n    // that can update XRViewport values to adhere to API.\n    // Ugly but it works.\n    const temp = Object.create(null);\n    const viewport = new XRViewport(temp);\n\n    this[PRIVATE] = {\n      device,\n      eye,\n      viewport,\n      temp,\n      sessionId,\n      transform,\n      viewIndex,\n    };\n  }\n\n  /**\n   * @return {XREye}\n   */\n  get eye() { return this[PRIVATE].eye; }\n\n  /**\n   * @return {Float32Array}\n   */\n  get projectionMatrix() {\n    return this[PRIVATE].device.getProjectionMatrix(this.eye, this[PRIVATE].viewIndex);\n  }\n\n  /**\n   * @return {XRRigidTransform}\n   */\n  get transform() { return this[PRIVATE].transform; }\n\n  /**\n   * NON-STANDARD\n   *\n   * `getViewport` is now exposed via XRWebGLLayer instead of XRView.\n   * XRWebGLLayer delegates all the actual work to this function.\n   *\n   * @param {XRWebGLLayer} layer\n   * @return {XRViewport?}\n   */\n  _getViewport(layer) {\n    if (this[PRIVATE].device.getViewport(this[PRIVATE].sessionId,\n                                           this.eye,\n                                           layer,\n                                           this[PRIVATE].temp,\n                                           this[PRIVATE].viewIndex)) {\n      return this[PRIVATE].viewport;\n    }\n    return undefined;\n  }\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {PRIVATE as SESSION_PRIVATE} from './XRSession';\nimport XRViewerPose from './XRViewerPose';\nimport XRView from './XRView';\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRFrame');\n\nconst NON_ACTIVE_MSG = \"XRFrame access outside the callback that produced it is invalid.\";\nconst NON_ANIMFRAME_MSG = \"getViewerPose can only be called on XRFrame objects passed to XRSession.requestAnimationFrame callbacks.\";\n\nlet NEXT_FRAME_ID = 0;\n\nexport default class XRFrame {\n  /**\n   * @param {XRDevice} device\n   * @param {XRSession} session\n   * @param {number} sessionId\n   */\n  constructor(device, session, sessionId) {\n    this[PRIVATE] = {\n      id: ++NEXT_FRAME_ID,\n      active: false,\n      animationFrame: false,\n      device,\n      session,\n      sessionId\n    };\n  }\n\n  /**\n   * @return {XRSession} session\n   */\n  get session() { return this[PRIVATE].session; }\n\n  /**\n   * @param {XRReferenceSpace} referenceSpace\n   * @return {XRViewerPose?}\n   */\n  getViewerPose(referenceSpace) {\n    if (!this[PRIVATE].animationFrame) {\n      throw new DOMException(NON_ANIMFRAME_MSG, 'InvalidStateError');\n    }\n    if (!this[PRIVATE].active) {\n      throw new DOMException(NON_ACTIVE_MSG, 'InvalidStateError');\n    }\n\n    const device = this[PRIVATE].device;\n    const session = this[PRIVATE].session;\n\n    session[SESSION_PRIVATE].viewerSpace._ensurePoseUpdated(device, this[PRIVATE].id);\n    referenceSpace._ensurePoseUpdated(device, this[PRIVATE].id);\n\n    let viewerTransform = referenceSpace._getSpaceRelativeTransform(session[SESSION_PRIVATE].viewerSpace);\n\n    const views = [];\n    for (const viewSpace of session[SESSION_PRIVATE].viewSpaces) {\n      viewSpace._ensurePoseUpdated(device, this[PRIVATE].id);\n      let viewTransform = referenceSpace._getSpaceRelativeTransform(viewSpace);\n      let view = new XRView(device, viewTransform, viewSpace.eye, this[PRIVATE].sessionId, viewSpace.viewIndex);\n      views.push(view);\n    }\n    let viewerPose = new XRViewerPose(viewerTransform, views, false /* TODO: emulatedPosition */);\n\n    return viewerPose;\n  }\n\n  /**\n   * @param {XRSpace} space\n   * @param {XRSpace} baseSpace\n   * @return {XRPose?} pose\n   */\n  getPose(space, baseSpace) {\n    if (!this[PRIVATE].active) {\n      throw new DOMException(NON_ACTIVE_MSG, 'InvalidStateError');\n    }\n\n    const device = this[PRIVATE].device;\n    if (space._specialType === \"target-ray\" || space._specialType === \"grip\") {\n      // TODO: Stop special-casing input.\n      return device.getInputPose(\n        space._inputSource, baseSpace, space._specialType);\n    } else {\n      space._ensurePoseUpdated(device, this[PRIVATE].id);\n      baseSpace._ensurePoseUpdated(device, this[PRIVATE].id);\n      let transform = baseSpace._getSpaceRelativeTransform(space);\n      if (!transform) { return null; }\n      return new XRPose(transform, false /* TODO: emulatedPosition */);\n    }\n\n    return null;\n  }\n}\n", "/*\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRRenderState');\n\nexport const XRRenderStateInit = Object.freeze({\n  depthNear: 0.1,\n  depthFar: 1000.0,\n  inlineVerticalFieldOfView: null,\n  baseLayer: null\n});\n\nexport default class XRRenderState {\n  /**\n   * @param {Object?} stateInit\n   */\n  constructor(stateInit = {}) {\n    const config = Object.assign({}, XRRenderStateInit, stateInit);\n    this[PRIVATE] = { config };\n  }\n\n  /**\n   * @return {number}\n   */\n  get depthNear() { return this[PRIVATE].config.depthNear; }\n\n  /**\n   * @return {number}\n   */\n  get depthFar() { return this[PRIVATE].config.depthFar; }\n\n  /**\n   * @return {number?}\n   */\n  get inlineVerticalFieldOfView() { return this[PRIVATE].config.inlineVerticalFieldOfView; }\n\n  /**\n   * @return {XRWebGLLayer}\n   */\n  get baseLayer() { return this[PRIVATE].config.baseLayer; }\n}\n", "/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRInputSourceEvent');\n\nexport default class XRInputSourceEvent extends Event {\n  /**\n   * @param {string} type\n   * @param {Object} eventInitDict\n   */\n  constructor(type, eventInitDict) {\n    super(type, eventInitDict);\n    this[PRIVATE] = {\n      frame: eventInitDict.frame,\n      inputSource: eventInitDict.inputSource\n    };\n    // safari bug:  super() seems to return object of type Event, with Event as prototype\n    Object.setPrototypeOf(this, XRInputSourceEvent.prototype);\n  }\n\n  /**\n   * @return {XRFrame}\n   */\n  get frame() { return this[PRIVATE].frame; }\n\n  /**\n   * @return {XRInputSource}\n   */\n  get inputSource() { return this[PRIVATE].inputSource; }\n}", "/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRSessionEvent');\n\nexport default class XRSessionEvent extends Event {\n  /**\n   * @param {string} type\n   * @param {Object} eventInitDict\n   */\n  constructor(type, eventInitDict) {\n    super(type, eventInitDict);\n    this[PRIVATE] = {\n      session: eventInitDict.session\n    };\n    // safari bug:  super() seems to return object of type Event, with Event as prototype\n    Object.setPrototypeOf(this, XRSessionEvent.prototype);\n  }\n\n  /**\n   * @return {XRSession}\n   */\n  get session() { return this[PRIVATE].session; }\n}", "/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRInputSourcesChangeEvent');\n\nexport default class XRInputSourcesChangeEvent extends Event {\n  /**\n   * @param {string} type\n   * @param {Object} eventInitDict\n   */\n  constructor(type, eventInitDict) {\n    super(type, eventInitDict);\n    this[PRIVATE] = {\n      session: eventInitDict.session,\n      added: eventInitDict.added,\n      removed: eventInitDict.removed\n    };\n    // safari bug:  super() seems to return object of type Event, with Event as prototype\n    Object.setPrototypeOf(this, XRInputSourcesChangeEvent.prototype);\n  }\n\n  /**\n   * @return {XRSession}\n   */\n  get session() { return this[PRIVATE].session; }\n\n  /**\n   * @return {Array<XRInputSource>}\n   */\n  get added() { return this[PRIVATE].added; }\n\n  /**\n   * @return {Array<XRInputSource>}\n   */\n  get removed() { return this[PRIVATE].removed; }\n}", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventTarget from '../lib/EventTarget';\nimport now from '../lib/now';\nimport XRFrame, {PRIVATE as XRFRAME_PRIVATE} from './XRFrame';\nimport XRReferenceSpace, {\n  XRReferenceSpaceTypes\n} from './XRReferenceSpace';\nimport XRRenderState from './XRRenderState';\nimport XRInputSourceEvent from './XRInputSourceEvent';\nimport XRSessionEvent from './XRSessionEvent';\nimport XRSpace from './XRSpace';\nimport XRInputSourcesChangeEvent from './XRInputSourcesChangeEvent';\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRSession');\n\n// Nonstandard helper class. Not exposed by the API anywhere.\nclass XRViewSpace extends XRSpace {\n  constructor(eye) {\n    super(eye);\n  }\n\n  get eye() {\n    return this._specialType;\n  }\n\n  /**\n   * Called when this space's base pose needs to be updated\n   * @param {XRDevice} device\n   */\n  _onPoseUpdate(device) {\n    this._inverseBaseMatrix = device.getBaseViewMatrix(this._specialType);\n  }\n}\n\nexport default class XRSession extends EventTarget {\n  /**\n   * @param {XRDevice} device\n   * @param {XRSessionMode} mode\n   * @param {number} id\n   */\n  constructor(device, mode, id) {\n    super();\n\n    let immersive = mode != 'inline';\n\n    // inlineVerticalFieldOfView must initialize to PI/2 for inline sessions.\n    let initialRenderState = new XRRenderState({\n      inlineVerticalFieldOfView: immersive ? null : Math.PI * 0.5\n    });\n\n    const defaultViewSpaces = immersive ?\n      [new XRViewSpace('left'), new XRViewSpace('right')] :\n      [new XRViewSpace('none')];\n    Object.freeze(defaultViewSpaces);\n\n    this[PRIVATE] = {\n      device,\n      mode,\n      immersive,\n      ended: false,\n      suspended: false,\n      frameCallbacks: [],\n      currentFrameCallbacks: null,\n      frameHandle: 0,\n      deviceFrameHandle: null,\n      id,\n      activeRenderState: initialRenderState,\n      pendingRenderState: null,\n      viewerSpace: new XRReferenceSpace(\"viewer\"),\n      get viewSpaces() { return device.getViewSpaces(mode) || defaultViewSpaces; },\n      currentInputSources: []\n    };\n\n    // Single handler for animation frames from the device. The spec says this must\n    // run on every candidate frame even if there are no callbacks queued up.\n    this[PRIVATE].onDeviceFrame = () => {\n      if (this[PRIVATE].ended || this[PRIVATE].suspended) {\n        return;\n      }\n\n      // Queue next frame\n      this[PRIVATE].deviceFrameHandle = null;\n      this[PRIVATE].startDeviceFrameLoop();\n\n      // - If session\u2019s pending render state is not null, apply the pending render state.\n      if (this[PRIVATE].pendingRenderState !== null) {\n        // Apply pending render state.\n        this[PRIVATE].activeRenderState = new XRRenderState(this[PRIVATE].pendingRenderState);\n        this[PRIVATE].pendingRenderState = null;\n\n        // Report to the device since it'll need to handle the layer for rendering.\n        if (this[PRIVATE].activeRenderState.baseLayer) {\n          this[PRIVATE].device.onBaseLayerSet(\n            this[PRIVATE].id,\n            this[PRIVATE].activeRenderState.baseLayer);\n        }\n      }\n\n      // - If session\u2019s renderState's baseLayer is null, abort these steps.\n      if (this[PRIVATE].activeRenderState.baseLayer === null) {\n        return;\n      }\n\n      // - If session\u2019s mode is \"inline\" and session\u2019s renderState's output canvas is null,\n      //   abort these steps.\n      // ???\n\n      const frame = new XRFrame(device, this, this[PRIVATE].id);\n\n      // - Let callbacks be a list of the entries in session\u2019s list of animation frame\n      //   callback, in the order in which they were added to the list.\n      const callbacks = this[PRIVATE].currentFrameCallbacks = this[PRIVATE].frameCallbacks;\n\n      // - Set session\u2019s list of animation frame callbacks to the empty list.\n      this[PRIVATE].frameCallbacks = [];\n\n      // - Set frame\u2019s active boolean to true.\n      frame[XRFRAME_PRIVATE].active = true;\n\n      // - Set frame\u2019s animationFrame boolean to true.\n      frame[XRFRAME_PRIVATE].animationFrame = true;\n\n      this[PRIVATE].device.onFrameStart(this[PRIVATE].id, this[PRIVATE].activeRenderState);\n      // inputSources can be populated in .onFrameStart()\n      // so check the change and fire inputsourceschange event if needed\n      this._checkInputSourcesChange();\n\n      // - For each entry in callbacks, in order:\n      //   - If the entry\u2019s cancelled boolean is true, continue to the next entry.\n      //   - Invoke the Web IDL callback function, passing now and frame as the arguments\n      //   - If an exception is thrown, report the exception.\n      const rightNow = now(); //should we get this from arguments?\n      for (let i = 0; i < callbacks.length; i++) {\n        try {\n          if (!callbacks[i].cancelled && typeof callbacks[i].callback === 'function') {\n            callbacks[i].callback(rightNow, frame);\n          }\n        } catch(err) {\n          console.error(err);\n        }\n      }\n      this[PRIVATE].currentFrameCallbacks = null;\n\n      // - Set frame\u2019s active boolean to false.\n      frame[XRFRAME_PRIVATE].active = false;\n\n      this[PRIVATE].device.onFrameEnd(this[PRIVATE].id);\n    };\n\n    this[PRIVATE].startDeviceFrameLoop = () => {\n      if (this[PRIVATE].deviceFrameHandle === null) {\n        this[PRIVATE].deviceFrameHandle = this[PRIVATE].device.requestAnimationFrame(\n          this[PRIVATE].onDeviceFrame\n        );\n      }\n    };\n\n    this[PRIVATE].stopDeviceFrameLoop = () => {\n      const handle = this[PRIVATE].deviceFrameHandle;\n      if (handle !== null) {\n        this[PRIVATE].device.cancelAnimationFrame(handle);\n        this[PRIVATE].deviceFrameHandle = null;\n      }\n    };\n\n    // Hook into the XRDisplay's `vr-present-end` event so we can\n    // wrap up things here if we're cut off from the underlying\n    // polyfilled device or explicitly ended via `session.end()` for this\n    // session.\n    this[PRIVATE].onPresentationEnd = sessionId => {\n      // If this session was suspended, resume it now that an immersive\n      // session has ended.\n      if (sessionId !== this[PRIVATE].id) {\n        this[PRIVATE].suspended = false;\n        this[PRIVATE].startDeviceFrameLoop();\n        this.dispatchEvent('focus', { session: this });\n        return;\n      }\n\n      // Otherwise, this is the immersive session that has ended.\n      // Set `ended` to true so we can disable all functionality\n      // in this XRSession\n      this[PRIVATE].ended = true;\n      this[PRIVATE].stopDeviceFrameLoop();\n      device.removeEventListener('@@webxr-polyfill/vr-present-end', this[PRIVATE].onPresentationEnd);\n      device.removeEventListener('@@webxr-polyfill/vr-present-start', this[PRIVATE].onPresentationStart);\n      device.removeEventListener('@@webxr-polyfill/input-select-start', this[PRIVATE].onSelectStart);\n      device.removeEventListener('@@webxr-polyfill/input-select-end', this[PRIVATE].onSelectEnd);\n      this.dispatchEvent('end', new XRSessionEvent('end', { session: this }));\n    };\n    device.addEventListener('@@webxr-polyfill/vr-present-end', this[PRIVATE].onPresentationEnd);\n\n    // Hook into the XRDisplay's `vr-present-start` event so we can\n    // suspend if another session has begun immersive presentation.\n    this[PRIVATE].onPresentationStart = sessionId => {\n      // Ignore if this is the session that has begun immersive presenting\n      if (sessionId === this[PRIVATE].id) {\n        return;\n      }\n\n      this[PRIVATE].suspended = true;\n      this[PRIVATE].stopDeviceFrameLoop();\n      this.dispatchEvent('blur', { session: this });\n    };\n    device.addEventListener('@@webxr-polyfill/vr-present-start', this[PRIVATE].onPresentationStart);\n\n    this[PRIVATE].onSelectStart = evt => {\n      // Ignore if this event is not for this session.\n      if (evt.sessionId !== this[PRIVATE].id) {\n        return;\n      }\n\n      this[PRIVATE].dispatchInputSourceEvent('selectstart',  evt.inputSource);\n    };\n    device.addEventListener('@@webxr-polyfill/input-select-start', this[PRIVATE].onSelectStart);\n\n    this[PRIVATE].onSelectEnd = evt => {\n      // Ignore if this event is not for this session.\n      if (evt.sessionId !== this[PRIVATE].id) {\n        return;\n      }\n\n      this[PRIVATE].dispatchInputSourceEvent('selectend',  evt.inputSource);\n\n      // Sadly, there's no way to make this a user gesture.\n      this[PRIVATE].dispatchInputSourceEvent('select',  evt.inputSource);\n    };\n    device.addEventListener('@@webxr-polyfill/input-select-end', this[PRIVATE].onSelectEnd);\n\n    this[PRIVATE].onSqueezeStart = evt => {\n      // Ignore if this event is not for this session.\n      if (evt.sessionId !== this[PRIVATE].id) {\n        return;\n      }\n\n      this[PRIVATE].dispatchInputSourceEvent('squeezestart',  evt.inputSource);\n    };\n    device.addEventListener('@@webxr-polyfill/input-squeeze-start', this[PRIVATE].onSqueezeStart);\n\n    this[PRIVATE].onSqueezeEnd = evt => {\n      // Ignore if this event is not for this session.\n      if (evt.sessionId !== this[PRIVATE].id) {\n        return;\n      }\n\n      this[PRIVATE].dispatchInputSourceEvent('squeezeend',  evt.inputSource);\n\n      // Following the same way as select event\n      this[PRIVATE].dispatchInputSourceEvent('squeeze',  evt.inputSource);\n    };\n    device.addEventListener('@@webxr-polyfill/input-squeeze-end', this[PRIVATE].onSqueezeEnd);\n\n    this[PRIVATE].dispatchInputSourceEvent = (type, inputSource) => {\n      const frame = new XRFrame(device, this, this[PRIVATE].id);\n      const event = new XRInputSourceEvent(type, { frame, inputSource });\n      frame[XRFRAME_PRIVATE].active = true;\n      this.dispatchEvent(type, event);\n      frame[XRFRAME_PRIVATE].active = false;\n    };\n\n    // Start the frame loop\n    this[PRIVATE].startDeviceFrameLoop();\n\n    this.onblur = undefined;\n    this.onfocus = undefined;\n    this.onresetpose = undefined;\n    this.onend = undefined;\n    this.onselect = undefined;\n    this.onselectstart = undefined;\n    this.onselectend = undefined;\n  }\n\n  /**\n   * @return {XRRenderState}\n   */\n  get renderState() { return this[PRIVATE].activeRenderState; }\n\n  /**\n   * @return {XREnvironmentBlendMode}\n   */\n  get environmentBlendMode() {\n    return this[PRIVATE].device.environmentBlendMode || 'opaque';\n  }\n\n  /**\n   * @param {string} type\n   * @return {XRReferenceSpace}\n   */\n  async requestReferenceSpace(type) {\n    if (this[PRIVATE].ended) {\n      return;\n    }\n\n    if (!XRReferenceSpaceTypes.includes(type)) {\n      throw new TypeError(`XRReferenceSpaceType must be one of ${XRReferenceSpaceTypes}`);\n    }\n\n    if (!this[PRIVATE].device.doesSessionSupportReferenceSpace(this[PRIVATE].id, type)) {\n      throw new DOMException(`The ${type} reference space is not supported by this session.`, 'NotSupportedError');\n    }\n\n    if (type === 'viewer') {\n      return this[PRIVATE].viewerSpace;\n    }\n\n    // Request a transform from the device given the values. If returning a\n    // transform (probably \"local-floor\" or \"bounded-floor\"), use it, and if\n    // undefined, XRReferenceSpace will use a default transform. This call can\n    // throw, rejecting the promise, indicating the device does not support that\n    // frame of reference.\n    let transform = await this[PRIVATE].device.requestFrameOfReferenceTransform(type);\n\n    // TODO: 'bounded-floor' is only blocked because we currently don't report\n    // the bounds geometry correctly.\n    if (type === 'bounded-floor') {\n      if (!transform) {\n        // 'bounded-floor' spaces must have a transform supplied by the device.\n        throw new DOMException(`${type} XRReferenceSpace not supported by this device.`, 'NotSupportedError');\n      }\n      \n      let bounds = this[PRIVATE].device.requestStageBounds();\n      if (!bounds) {\n        // 'bounded-floor' spaces must have bounds geometry.\n        throw new DOMException(`${type} XRReferenceSpace not supported by this device.`, 'NotSupportedError');\n        \n      }\n      // TODO: Create an XRBoundedReferenceSpace with the correct boundaries.\n      throw new DOMException(`The WebXR polyfill does not support the ${type} reference space yet.`, 'NotSupportedError');\n    }\n\n    return new XRReferenceSpace(type, transform);\n  }\n\n  /**\n   * @param {Function} callback\n   * @return {number}\n   */\n  requestAnimationFrame(callback) {\n    if (this[PRIVATE].ended) {\n      return;\n    }\n\n    // Add callback to the queue and return its handle\n    const handle = ++this[PRIVATE].frameHandle;\n    this[PRIVATE].frameCallbacks.push({\n      handle,\n      callback,\n      cancelled: false\n    });\n    return handle;\n  }\n\n  /**\n   * @param {number} handle\n   */\n  cancelAnimationFrame(handle) {\n    // Remove the callback with that handle from the queue\n    let callbacks = this[PRIVATE].frameCallbacks;\n    let index = callbacks.findIndex(d => d && d.handle === handle);\n    if (index > -1) {\n      callbacks[index].cancelled = true;\n      callbacks.splice(index, 1);\n    }\n    // If cancelAnimationFrame is called from within a frame callback, also check\n    // the remaining callbacks for the current frame:\n    callbacks = this[PRIVATE].currentFrameCallbacks;\n    if (callbacks) {\n      index = callbacks.findIndex(d => d && d.handle === handle);\n      if (index > -1) {\n        callbacks[index].cancelled = true;\n        // Rely on cancelled flag only; don't mutate this array while it's being iterated\n      }\n    }\n  }\n\n  /**\n   * @return {Array<XRInputSource>} input sources\n   */\n  get inputSources() {\n    return this[PRIVATE].device.getInputSources();\n  }\n\n  /**\n   * @return {Promise<void>}\n   */\n  async end() {\n    if (this[PRIVATE].ended) {\n      return;\n    }\n\n    // If this is an immersive session, trigger the platform to end, which\n    // will call the `onPresentationEnd` handler, wrapping this up.\n    if (this[PRIVATE].immersive) {\n      this[PRIVATE].ended = true;\n      this[PRIVATE].device.removeEventListener('@@webxr-polyfill/vr-present-start',\n                                                 this[PRIVATE].onPresentationStart);\n      this[PRIVATE].device.removeEventListener('@@webxr-polyfill/vr-present-end',\n                                                 this[PRIVATE].onPresentationEnd);\n      this[PRIVATE].device.removeEventListener('@@webxr-polyfill/input-select-start',\n                                                 this[PRIVATE].onSelectStart);\n      this[PRIVATE].device.removeEventListener('@@webxr-polyfill/input-select-end',\n                                                 this[PRIVATE].onSelectEnd);\n\n      this.dispatchEvent('end', new XRSessionEvent('end', { session: this }));\n    }\n\n    this[PRIVATE].stopDeviceFrameLoop();\n    return this[PRIVATE].device.endSession(this[PRIVATE].id);\n  }\n\n  /**\n   * Queues an update to the active render state to be applied on the next\n   * frame. Unset fields of newState will not be changed.\n   * \n   * @param {XRRenderStateInit?} newState \n   */\n  updateRenderState(newState) {\n    if (this[PRIVATE].ended) {\n      const message = \"Can't call updateRenderState on an XRSession \" +\n                      \"that has already ended.\";\n      throw new Error(message);\n    }\n\n    if (newState.baseLayer && (newState.baseLayer._session !== this)) {\n      const message = \"Called updateRenderState with a base layer that was \" +\n                      \"created by a different session.\";\n      throw new Error(message);\n    }\n\n    const fovSet = (newState.inlineVerticalFieldOfView !== null) &&\n                   (newState.inlineVerticalFieldOfView !== undefined);\n\n    if (fovSet) {\n      if (this[PRIVATE].immersive) {\n        const message = \"inlineVerticalFieldOfView must not be set for an \" +\n                        \"XRRenderState passed to updateRenderState for an \" +\n                        \"immersive session.\";\n        throw new Error(message);\n      } else {\n        // Clamp the inline FoV to a sane range.\n        newState.inlineVerticalFieldOfView = Math.min(\n          3.13, Math.max(0.01, newState.inlineVerticalFieldOfView));\n      }\n    }\n\n    if (this[PRIVATE].pendingRenderState === null) {\n      const activeRenderState = this[PRIVATE].activeRenderState;\n      this[PRIVATE].pendingRenderState = {\n        depthNear: activeRenderState.depthNear,\n        depthFar: activeRenderState.depthFar,\n        inlineVerticalFieldOfView: activeRenderState.inlineVerticalFieldOfView,\n        baseLayer: activeRenderState.baseLayer\n      };\n    }\n    Object.assign(this[PRIVATE].pendingRenderState, newState);\n  }\n\n  /**\n   * Compares the inputSources with the ones in the previous frame.\n   * Fires imputsourceschange event if any added or removed\n   * inputSource is found.\n   */\n  _checkInputSourcesChange() {\n    const added = [];\n    const removed = [];\n    const newInputSources = this.inputSources;\n    const oldInputSources = this[PRIVATE].currentInputSources;\n\n    for (const newInputSource of newInputSources) {\n      if (!oldInputSources.includes(newInputSource)) {\n        added.push(newInputSource);\n      }\n    }\n\n    for (const oldInputSource of oldInputSources) {\n      if (!newInputSources.includes(oldInputSource)) {\n        removed.push(oldInputSource);\n      }\n    }\n\n    if (added.length > 0 || removed.length > 0) {\n      this.dispatchEvent('inputsourceschange', new XRInputSourcesChangeEvent('inputsourceschange', {\n        session: this,\n        added: added,\n        removed: removed\n      }));\n    }\n\n    this[PRIVATE].currentInputSources.length = 0;\n    for (const newInputSource of newInputSources) {\n      this[PRIVATE].currentInputSources.push(newInputSource);\n    }\n  }\n}\n", "/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport XRSpace from './XRSpace';\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRInputSource');\n\nexport default class XRInputSource {\n  /**\n   * @param {GamepadXRInputSource} impl \n   */\n  constructor(impl) {\n    this[PRIVATE] = {\n      impl,\n      gripSpace: new XRSpace(\"grip\", this),\n      targetRaySpace: new XRSpace(\"target-ray\", this)\n    };\n  }\n\n  /**\n   * @return {XRHandedness}\n   */\n  get handedness() { return this[PRIVATE].impl.handedness; }\n\n  /**\n   * @return {XRTargetRayMode}\n   */\n  get targetRayMode() { return this[PRIVATE].impl.targetRayMode; }\n\n  /**\n   * @return {XRSpace}\n   */\n  get gripSpace() {\n    let mode = this[PRIVATE].impl.targetRayMode;\n    if (mode === \"gaze\" || mode === \"screen\") {\n      // grip space must be null for non-trackable input sources\n      return null;\n    }\n    return this[PRIVATE].gripSpace;\n  }\n\n  /**\n   * @return {XRSpace}\n   */\n  get targetRaySpace() { return this[PRIVATE].targetRaySpace; }\n\n  /**\n   * @return {Array<String>}\n   */\n  get profiles() { return this[PRIVATE].impl.profiles; }\n\n  /**\n   * @return {Gamepad}\n   */\n  get gamepad() { return this[PRIVATE].impl.gamepad; }\n}\n", "/*\r\n * Copyright 2017 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Token for storing whether or not a WebGLRenderingContext has\r\n * a polyfill for `xrCompatible`/`makeXRCompatible()`\r\n */\r\nexport const POLYFILLED_XR_COMPATIBLE = Symbol('@@webxr-polyfill/polyfilled-xr-compatible');\r\n\r\n/**\r\n * Token for storing the XR compatible boolean set on a WebGLRenderingContext\r\n * via `gl.makeXRCompatible()` or via creation\r\n * parameters like `canvas.getContext('webgl', { xrCompatible })`\r\n */\r\nexport const XR_COMPATIBLE = Symbol('@@webxr-polyfill/xr-compatible');\r\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport XRSession, { PRIVATE as SESSION_PRIVATE } from './XRSession';\nimport {\n  POLYFILLED_XR_COMPATIBLE,\n  XR_COMPATIBLE,\n} from '../constants';\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRWebGLLayer');\n\nexport const XRWebGLLayerInit = Object.freeze({\n  antialias: true,\n  depth: true,\n  stencil: false,\n  alpha: true,\n  multiview: false,\n  ignoreDepthValues: false,\n  framebufferScaleFactor: 1.0,\n});\n\nexport default class XRWebGLLayer {\n  /**\n   * @param {XRSession} session \n   * @param {XRWebGLRenderingContext} context \n   * @param {Object?} layerInit \n   */\n  constructor(session, context, layerInit={}) {\n    const config = Object.assign({}, XRWebGLLayerInit, layerInit);\n\n    if (!(session instanceof XRSession)) {\n      throw new Error('session must be a XRSession');\n    }\n\n    if (session.ended) {\n      throw new Error(`InvalidStateError`);\n    }\n\n    // Since we're polyfilling, we're probably polyfilling\n    // the compatible XR device bit as well. It'd be\n    // unusual for this bit to not be polyfilled.\n    if (context[POLYFILLED_XR_COMPATIBLE]) {\n      if (context[XR_COMPATIBLE] !== true) {\n        throw new Error(`InvalidStateError`);\n      }\n    }\n\n    this[PRIVATE] = {\n      context,\n      config,\n      session,\n    };\n  }\n\n  /**\n   * @return {WebGLRenderingContext}\n   */\n  get context() { return this[PRIVATE].context; }\n\n  /**\n   * @return {boolean}\n   */\n  get antialias() { return this[PRIVATE].config.antialias; }\n\n  /**\n   * The polyfill will always ignore depth values.\n   *\n   * @return {boolean}\n   */\n  get ignoreDepthValues() { return true; }\n\n  /**\n   * @return {WebGLFramebuffer}\n   */\n  get framebuffer() {\n    // Use the default framebuffer\n    return null;\n  }\n\n  /**\n   * @return {number}\n   */\n  get framebufferWidth() { return this[PRIVATE].context.drawingBufferWidth; }\n\n  /**\n   * @return {number}\n   */\n  get framebufferHeight() { return this[PRIVATE].context.drawingBufferHeight; }\n\n  /**\n   * @return {XRSession}\n   */\n  get _session() { return this[PRIVATE].session; }\n\n  /**\n   * @TODO No mention in spec on not reusing the XRViewport on every frame.\n   * \n   * @TODO In the future maybe all this logic should be handled here instead of\n   * delegated to the XRView?\n   *\n   * @param {XRView} view\n   * @return {XRViewport?}\n   */\n  getViewport(view) {\n    return view._getViewport(this);\n  }\n\n  /**\n   * Gets the scale factor to be requested if you want to match the device\n   * resolution at the center of the user's vision. The polyfill will always\n   * report 1.0.\n   * \n   * @param {XRSession} session \n   * @return {number}\n   */\n  static getNativeFramebufferScaleFactor(session) {\n    if (!session) {\n      throw new TypeError('getNativeFramebufferScaleFactor must be passed a session.')\n    }\n\n    if (session[SESSION_PRIVATE].ended) { return 0.0; }\n\n    return 1.0;\n  }\n}\n", "/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRReferenceSpaceEvent');\n\nexport default class XRReferenceSpaceEvent extends Event {\n  /**\n   * @param {string} type\n   * @param {Object} eventInitDict\n   */\n  constructor(type, eventInitDict) {\n    super(type, eventInitDict);\n    this[PRIVATE] = {\n      referenceSpace: eventInitDict.referenceSpace,\n      transform: eventInitDict.transform || null\n    };\n    // safari bug:  super() seems to return object of type Event, with Event as prototype\n    Object.setPrototypeOf(this, XRReferenceSpaceEvent.prototype);\n  }\n\n  /**\n   * @return {XRFrame}\n   */\n  get referenceSpace() { return this[PRIVATE].referenceSpace; }\n\n  /**\n   * @return {XRInputSource}\n   */\n  get transform() { return this[PRIVATE].transform; }\n}", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport XRSystem from './XRSystem';\nimport XRSession from './XRSession';\nimport XRSessionEvent from './XRSessionEvent';\nimport XRFrame from './XRFrame';\nimport XRView from './XRView';\nimport XRViewport from './XRViewport';\nimport XRViewerPose from './XRViewerPose';\nimport XRInputSource from './XRInputSource';\nimport XRInputSourceEvent from './XRInputSourceEvent';\nimport XRInputSourcesChangeEvent from './XRInputSourcesChangeEvent';\nimport XRWebGLLayer from './XRWebGLLayer';\nimport XRSpace from './XRSpace';\nimport XRReferenceSpace from './XRReferenceSpace';\nimport XRReferenceSpaceEvent from './XRReferenceSpaceEvent';\nimport XRRenderState from './XRRenderState';\nimport XRRigidTransform from './XRRigidTransform';\nimport XRPose from './XRPose';\n\n/**\n * Everything exposed here will also be attached to the window\n */\nexport default {\n  XRSystem,\n  XRSession,\n  XRSessionEvent,\n  XRFrame,\n  XRView,\n  XRViewport,\n  XRViewerPose,\n  XRWebGLLayer,\n  XRSpace,\n  XRReferenceSpace,\n  XRReferenceSpaceEvent,\n  XRInputSource,\n  XRInputSourceEvent,\n  XRInputSourcesChangeEvent,\n  XRRenderState,\n  XRRigidTransform,\n  XRPose,\n};\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  POLYFILLED_XR_COMPATIBLE,\n  XR_COMPATIBLE,\n} from './constants';\n\nconst contextTypes = ['webgl', 'experimental-webgl'];\n\n/**\n * Takes the WebGLRenderingContext constructor\n * and creates a `makeXRCompatible` function if it does not exist.\n * Returns a boolean indicating whether or not the function\n * was polyfilled.\n *\n * @param {WebGLRenderingContext}\n * @return {boolean}\n */\nexport const polyfillMakeXRCompatible = Context => {\n  if (typeof Context.prototype.makeXRCompatible === 'function') {\n    // return false;\n  }\n\n  // Create `makeXRCompatible` and if successful, store\n  // the XRDevice as a private attribute for error checking\n  Context.prototype.makeXRCompatible = function () {\n    this[XR_COMPATIBLE] = true;\n    // This is all fake, so just resolve immediately.\n    return Promise.resolve();\n  };\n\n  return true;\n};\n\n\n/**\n * Takes the HTMLCanvasElement or OffscreenCanvas constructor\n * and wraps its `getContext` function to patch the context with a\n * POLYFILLED_XR_COMPATIBLE bit so the API knows it's also working with a\n * polyfilled `xrCompatible` bit. Can do extra checking for validity.\n *\n * @param {HTMLCanvasElement} Canvas\n */\nexport const polyfillGetContext = (Canvas) => {\n  const getContext = Canvas.prototype.getContext;\n  Canvas.prototype.getContext = function (contextType, glAttribs) {\n    const ctx = getContext.call(this, contextType, glAttribs);\n\n    if (ctx) {\n      // Set this bit so the API knows the WebGLRenderingContext is\n      // also polyfilled a bit\n      ctx[POLYFILLED_XR_COMPATIBLE] = true;\n\n      // If we've polyfilled WebGLRenderingContext's xrCompatible\n      // bit, store the boolean in the private token if created via\n      // creation parameters\n      if (glAttribs && ('xrCompatible' in glAttribs)) {\n        ctx[XR_COMPATIBLE] = glAttribs.xrCompatible;\n      }\n    }\n\n    return ctx;\n  }\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Whether or an ImageBitMapRenderingContext should be used to polyfill\n * an XRPresentationContext.\n *\n * @return {Boolean}\n */\nexport const isImageBitmapSupported = global =>\n  !!(global.ImageBitmapRenderingContext &&\n     global.createImageBitmap);\n\n/**\n * Determines whether or not this global's user agent is\n * considered a mobile device. Taken from webvr-polyfill.\n *\n * @param {Object} global\n */\nexport const isMobile = global => {\n  var check = false;\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check = true})(global.navigator.userAgent||global.navigator.vendor||global.opera);\n  return check;\n};\n\nexport const applyCanvasStylesForMinimalRendering = canvas => {\n  canvas.style.display = 'block';\n  canvas.style.position = 'absolute';\n  canvas.style.width = canvas.style.height = '1px';\n  canvas.style.top = canvas.style.left = '0px';\n};\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CardboardVRDisplay from 'cardboard-vr-display';\nimport WebVRDevice from './WebVRDevice';\n\nexport default class CardboardXRDevice extends WebVRDevice {\n  /**\n   * Takes a VRDisplay instance and a VRFrameData\n   * constructor from the WebVR 1.1 spec.\n   *\n   * @param {VRDisplay} display\n   * @param {Object?} cardboardConfig\n   */\n  constructor(global, cardboardConfig) {\n    const display = new CardboardVRDisplay(cardboardConfig || {});\n    super(global, display);\n\n    this.display = display;\n    this.frame = {\n      rightViewMatrix: new Float32Array(16),\n      leftViewMatrix: new Float32Array(16),\n      rightProjectionMatrix: new Float32Array(16),\n      leftProjectionMatrix: new Float32Array(16),\n      pose: null,\n      timestamp: null,\n    };\n  }\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventTarget from '../lib/EventTarget';\nimport XRReferenceSpace from '../api/XRReferenceSpace';\n\nexport default class XRDevice extends EventTarget {\n  /**\n   * Takes a VRDisplay object from the WebVR 1.1 spec.\n   *\n   * @param {Object} global\n   */\n  constructor(global) {\n    super();\n\n    this.global = global;\n    this.onWindowResize = this.onWindowResize.bind(this);\n\n    this.global.window.addEventListener('resize', this.onWindowResize);\n\n    // Value is used for `XRSession.prototype.environmentBlendMode`\n    // and should be one of XREnvironmentBlendMode types: 'opaque', 'additive',\n    // or 'alpha-blend'.\n    this.environmentBlendMode = 'opaque';\n  }\n\n  /**\n   * Called when a XRSession has a `baseLayer` property set.\n   *\n   * @param {number} sessionId\n   * @param {XRWebGLLayer} layer\n   */\n  onBaseLayerSet(sessionId, layer) { throw new Error('Not implemented'); }\n\n  /**\n   * @param {XRSessionMode} mode\n   * @return {boolean}\n   */\n  isSessionSupported(mode) { throw new Error('Not implemented'); }\n\n  /**\n   * @param {string} featureDescriptor\n   * @return {boolean}\n   */\n  isFeatureSupported(featureDescriptor) { throw new Error('Not implemented'); }\n\n  /**\n   * Returns a promise if creating a session is successful.\n   * Usually used to set up presentation in the device.\n   *\n   * @param {XRSessionMode} mode\n   * @param {Set<string>} enabledFeatures\n   * @return {Promise<number>}\n   */\n  async requestSession(mode, enabledFeatures) { throw new Error('Not implemented'); }\n\n  /**\n   * @return {Function}\n   */\n  requestAnimationFrame(callback) { throw new Error('Not implemented'); }\n\n  /**\n   * @param {number} sessionId\n   */\n  onFrameStart(sessionId) { throw new Error('Not implemented'); }\n\n  /**\n   * @param {number} sessionId\n   */\n  onFrameEnd(sessionId) { throw new Error('Not implemented'); }\n\n  /**\n   * @param {number} sessionId\n   * @param {XRReferenceSpaceType} type\n   * @return {boolean}\n   */\n  doesSessionSupportReferenceSpace(sessionId, type) { throw new Error('Not implemented'); }\n\n  /**\n   * @return {Object?}\n   */\n  requestStageBounds() { throw new Error('Not implemented'); }\n\n  /**\n   * Returns a promise resolving to a transform if XRDevice\n   * can support frame of reference and provides its own values.\n   * Can resolve to `undefined` if the polyfilled API can provide\n   * a default. Rejects if this XRDevice cannot\n   * support the frame of reference.\n   *\n   * @param {XRFrameOfReferenceType} type\n   * @param {XRFrameOfReferenceOptions} options\n   * @return {Promise<XRFrameOfReference>}\n   */\n  async requestFrameOfReferenceTransform(type, options) {\n    return undefined;\n  }\n\n  /**\n   * @param {number} handle\n   */\n  cancelAnimationFrame(handle) { throw new Error('Not implemented'); }\n\n  /**\n   * @param {number} sessionId\n   */\n  endSession(sessionId) { throw new Error('Not implemented'); }\n\n  /**\n   * Allows the XRDevice to override the XRSession's view spaces.\n   *\n   * @param {XRSessionMode} mode\n   * @return {Array<XRSpace> | undefined}\n   */\n  getViewSpaces(mode) { return undefined; }\n\n  /**\n   * Takes a XREye and a target to apply properties of\n   * `x`, `y`, `width` and `height` on. Returns a boolean\n   * indicating if it successfully was able to populate\n   * target's values.\n   *\n   * @param {number} sessionId\n   * @param {XREye} eye\n   * @param {XRWebGLLayer} layer\n   * @param {Object?} target\n   * @param {number} viewIndex\n   * @return {boolean}\n   */\n  getViewport(sessionId, eye, layer, target, viewIndex) { throw new Error('Not implemented'); }\n\n  /**\n   * @param {XREye} eye\n   * @param {number} viewIndex\n   * @return {Float32Array}\n   */\n  getProjectionMatrix(eye, viewIndex) { throw new Error('Not implemented'); }\n\n  /**\n   * Get model matrix unaffected by frame of reference.\n   *\n   * @return {Float32Array}\n   */\n  getBasePoseMatrix() { throw new Error('Not implemented'); }\n\n  /**\n   * Get view matrix unaffected by frame of reference.\n   *\n   * @param {XREye} eye\n   * @return {Float32Array}\n   */\n  getBaseViewMatrix(eye) { throw new Error('Not implemented'); }\n\n  /**\n   * Get a list of input sources.\n   *\n   * @return {Array<XRInputSource>}\n   */\n  getInputSources() { throw new Error('Not implemented'); }\n\n  /**\n   * Get the current pose of an input source.\n   *\n   * @param {XRInputSource} inputSource\n   * @param {XRCoordinateSystem} coordinateSystem\n   * @param {String} poseType\n   * @return {XRPose}\n   */\n  getInputPose(inputSource, coordinateSystem, poseType) { throw new Error('Not implemented'); }\n\n  /**\n   * Called on window resize.\n   */\n  onWindowResize() {\n    // Bound by XRDevice and called on resize, but\n    // this will call child class onWindowResize (or, if not defined,\n    // call an infinite loop I guess)\n    this.onWindowResize();\n  }\n}\n", "/*\n * Copyright 2019 Immersive Web Community Group. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\nExample Gamepad mapping. Any of the values may be omitted for the original\ngamepad values to pass through unchanged.\n\n\"Gamepad ID String\": { // The Gamepad.id that this entry maps to.\n  mapping: 'xr-standard', // Overrides the Gamepad.mapping that is reported\n  profiles: ['gamepad-id-string'], // The profiles array that should be reported\n  displayProfiles: {\n    // Alternative profiles arrays to report if the VRDevice.displayName matches\n    \"WebVR Display Name\": ['gamepad-id-string']\n  },\n  axes: { // Remaps the reported axes\n    length: 2, // Overrides the length of the reported axes array\n    invert: [0] // List of mapped axes who's value should be inverted\n    0: 2, // Remaps axes[0] to report axis[2] from the original gamepad object\n    1: null, // Remaps axes[1] to a placeholder axis (always reports 0)\n  },\n  buttons: { // Remaps the reported buttons\n    length: 2, // Overrides the length of the reported buttons array\n    0: 2, // Remaps buttons[0] to report buttons[2] from the original gamepad object\n    1: null // Remaps buttons[1] to a placeholder button (always reports 0/false)\n  },\n  gripTransform: { // An additional transform to apply to the gripSpace's pose\n    position: [0, 0, 0.5], // Additional translation vector to apply\n    orientation: [0, 0, 0, 1] // Additional rotation quaternion to apply\n  },\n  targetRayTransform: { // An additional transform to apply to the targetRaySpace's pose\n    position: [0, 0, 0.5], // Additional translation vector to apply\n    orientation: [0, 0, 0, 1] // Additional rotation quaternion to apply\n  }\n}\n*/\n\nlet daydream = {\n  mapping: '',\n  profiles: ['google-daydream', 'generic-trigger-touchpad'],\n  buttons: {\n    length: 3,\n    0: null,\n    1: null,\n    2: 0\n  },\n};\n\nlet viveFocus = {\n  mapping: 'xr-standard',\n  profiles: ['htc-vive-focus', 'generic-trigger-touchpad'],\n  buttons: {\n    length: 3,\n    0: 1,\n    1: null,\n    2: 0\n  },\n};\n\nlet oculusGo = {\n  mapping: 'xr-standard',\n  profiles: ['oculus-go', 'generic-trigger-touchpad'],\n  buttons: {\n    length: 3,\n    0: 1,\n    1: null,\n    2: 0\n  },\n  // Grip adjustments determined experimentally.\n  gripTransform: {\n    orientation: [Math.PI * 0.11, 0, 0, 1]\n  }\n};\n\n// Applies to both left and right Oculus Touch controllers.\nlet oculusTouch = {\n  mapping: 'xr-standard',\n  displayProfiles: {\n    'Oculus Quest': ['oculus-touch-v2', 'oculus-touch', 'generic-trigger-squeeze-thumbstick']\n  },\n  profiles: ['oculus-touch', 'generic-trigger-squeeze-thumbstick'],\n  axes: {\n    length: 4,\n    0: null,\n    1: null,\n    2: 0,\n    3: 1\n  },\n  buttons: {\n    length: 7,\n    0: 1,\n    1: 2,\n    2: null,\n    3: 0,\n    4: 3,\n    5: 4,\n    6: null\n  },\n  // Grip adjustments determined experimentally.\n  gripTransform: {\n    position: [0, -0.02, 0.04, 1],\n    orientation: [Math.PI * 0.11, 0, 0, 1]\n  }\n};\n\nlet openVr = {\n  mapping: 'xr-standard',\n  profiles: ['htc-vive', 'generic-trigger-squeeze-touchpad'],\n  displayProfiles: {\n    'HTC Vive': ['htc-vive', 'generic-trigger-squeeze-touchpad'],\n    'HTC Vive DVT': ['htc-vive', 'generic-trigger-squeeze-touchpad'],\n    'Valve Index': ['valve-index', 'generic-trigger-squeeze-touchpad-thumbstick']\n  },\n  buttons: {\n    length: 3,\n    0: 1,\n    1: 2,\n    2: 0\n  },\n  // Transform adjustments determined experimentally.\n  gripTransform: {\n    position: [0, 0, 0.05, 1],\n  },\n  targetRayTransform: {\n    orientation: [Math.PI * -0.08, 0, 0, 1]\n  },\n  userAgentOverrides: {\n    \"Firefox\": {\n      axes: {\n        invert: [1, 3]\n      }\n    }\n  }\n};\n\nlet samsungGearVR = {\n  mapping: 'xr-standard',\n  profiles: ['samsung-gearvr', 'generic-trigger-touchpad'],\n  buttons: {\n    length: 3,\n    0: 1,\n    1: null,\n    2: 0\n  },\n  gripTransform: {\n    orientation: [Math.PI * 0.11, 0, 0, 1]\n  }\n};\n\nlet samsungOdyssey = {\n  mapping: 'xr-standard',\n  profiles: ['samsung-odyssey', 'microsoft-mixed-reality', 'generic-trigger-squeeze-touchpad-thumbstick'],\n  buttons: {\n    length: 4,\n    0: 1, // index finger trigger\n    1: 0, // pressable joystick\n    2: 2, // grip trigger\n    3: 4, // pressable touchpad\n  },\n  // Grip adjustments determined experimentally.\n  gripTransform: {\n    position: [0, -0.02, 0.04, 1],\n    orientation: [Math.PI * 0.11, 0, 0, 1]\n  }\n};\n\nlet windowsMixedReality = {\n  mapping: 'xr-standard',\n  profiles: ['microsoft-mixed-reality', 'generic-trigger-squeeze-touchpad-thumbstick'],\n  buttons: {\n    length: 4,\n    0: 1, // index finger trigger\n    1: 0, // pressable joystick\n    2: 2, // grip trigger\n    3: 4, // pressable touchpad\n  },\n  // Grip adjustments determined experimentally.\n  gripTransform: {\n    position: [0, -0.02, 0.04, 1],\n    orientation: [Math.PI * 0.11, 0, 0, 1]\n  }\n};\n\nlet GamepadMappings = {\n  'Daydream Controller': daydream,\n  'Gear VR Controller': samsungGearVR,\n  'HTC Vive Focus Controller': viveFocus,\n  'Oculus Go Controller': oculusGo,\n  'Oculus Touch (Right)': oculusTouch,\n  'Oculus Touch (Left)': oculusTouch,\n  'OpenVR Gamepad': openVr,\n  'Spatial Controller (Spatial Interaction Source) 045E-065A': windowsMixedReality,\n  'Spatial Controller (Spatial Interaction Source) 045E-065D': samsungOdyssey,\n  'Windows Mixed Reality (Right)': windowsMixedReality,\n  'Windows Mixed Reality (Left)': windowsMixedReality,\n};\n\nexport default GamepadMappings;\n", "/*\n * Copyright 2016 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport now from './now';\nimport * as mat4 from 'gl-matrix/src/gl-matrix/mat4';\nimport * as vec3 from 'gl-matrix/src/gl-matrix/vec3';\nimport * as quat from 'gl-matrix/src/gl-matrix/quat';\n\nconst HEAD_ELBOW_OFFSET_RIGHTHANDED = vec3.fromValues(0.155, -0.465, -0.15);\nconst HEAD_ELBOW_OFFSET_LEFTHANDED = vec3.fromValues(-0.155, -0.465, -0.15);\nconst ELBOW_WRIST_OFFSET = vec3.fromValues(0, 0, -0.25);\nconst WRIST_CONTROLLER_OFFSET = vec3.fromValues(0, 0, 0.05);\nconst ARM_EXTENSION_OFFSET = vec3.fromValues(-0.08, 0.14, 0.08);\n\nconst ELBOW_BEND_RATIO = 0.4; // 40% elbow, 60% wrist.\nconst EXTENSION_RATIO_WEIGHT = 0.4;\n\nconst MIN_ANGULAR_SPEED = 0.61; // 35 degrees per second (in radians).\nconst MIN_ANGLE_DELTA = 0.175; // 10 degrees (in radians).\n\nconst MIN_EXTENSION_COS = 0.12; // cos of 83 degrees.\nconst MAX_EXTENSION_COS = 0.87; // cos of 30 degrees.\n\nconst RAD_TO_DEG = 180 / Math.PI;\n\nfunction eulerFromQuaternion(out, q, order) {\n  function clamp(value, min, max) {\n    return (value < min ? min : (value > max ? max : value));\n  }\n  // Borrowed from Three.JS :)\n  // q is assumed to be normalized\n  // http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\n  var sqx = q[0] * q[0];\n  var sqy = q[1] * q[1];\n  var sqz = q[2] * q[2];\n  var sqw = q[3] * q[3];\n\n  if ( order === 'XYZ' ) {\n    out[0] = Math.atan2( 2 * ( q[0] * q[3] - q[1] * q[2] ), ( sqw - sqx - sqy + sqz ) );\n    out[1] = Math.asin(  clamp( 2 * ( q[0] * q[2] + q[1] * q[3] ), -1, 1 ) );\n    out[2] = Math.atan2( 2 * ( q[2] * q[3] - q[0] * q[1] ), ( sqw + sqx - sqy - sqz ) );\n  } else if ( order ===  'YXZ' ) {\n    out[0] = Math.asin(  clamp( 2 * ( q[0] * q[3] - q[1] * q[2] ), -1, 1 ) );\n    out[1] = Math.atan2( 2 * ( q[0] * q[2] + q[1] * q[3] ), ( sqw - sqx - sqy + sqz ) );\n    out[2] = Math.atan2( 2 * ( q[0] * q[1] + q[2] * q[3] ), ( sqw - sqx + sqy - sqz ) );\n  } else if ( order === 'ZXY' ) {\n    out[0] = Math.asin(  clamp( 2 * ( q[0] * q[3] + q[1] * q[2] ), -1, 1 ) );\n    out[1] = Math.atan2( 2 * ( q[1] * q[3] - q[2] * q[0] ), ( sqw - sqx - sqy + sqz ) );\n    out[2] = Math.atan2( 2 * ( q[2] * q[3] - q[0] * q[1] ), ( sqw - sqx + sqy - sqz ) );\n  } else if ( order === 'ZYX' ) {\n    out[0] = Math.atan2( 2 * ( q[0] * q[3] + q[2] * q[1] ), ( sqw - sqx - sqy + sqz ) );\n    out[1] = Math.asin(  clamp( 2 * ( q[1] * q[3] - q[0] * q[2] ), -1, 1 ) );\n    out[2] = Math.atan2( 2 * ( q[0] * q[1] + q[2] * q[3] ), ( sqw + sqx - sqy - sqz ) );\n  } else if ( order === 'YZX' ) {\n    out[0] = Math.atan2( 2 * ( q[0] * q[3] - q[2] * q[1] ), ( sqw - sqx + sqy - sqz ) );\n    out[1] = Math.atan2( 2 * ( q[1] * q[3] - q[0] * q[2] ), ( sqw + sqx - sqy - sqz ) );\n    out[2] = Math.asin(  clamp( 2 * ( q[0] * q[1] + q[2] * q[3] ), -1, 1 ) );\n  } else if ( order === 'XZY' ) {\n    out[0] = Math.atan2( 2 * ( q[0] * q[3] + q[1] * q[2] ), ( sqw - sqx + sqy - sqz ) );\n    out[1] = Math.atan2( 2 * ( q[0] * q[2] + q[1] * q[3] ), ( sqw + sqx - sqy - sqz ) );\n    out[2] = Math.asin(  clamp( 2 * ( q[2] * q[3] - q[0] * q[1] ), -1, 1 ) );\n  } else {\n    console.log('No order given for quaternion to euler conversion.');\n    return;\n  }\n}\n\n/**\n * Represents the arm model for the Daydream controller. Feed it a camera and\n * the controller. Update it on a RAF.\n *\n * Get the model's pose using getPose().\n */\nexport default class OrientationArmModel {\n  constructor() {\n    this.hand = 'right';\n    this.headElbowOffset = HEAD_ELBOW_OFFSET_RIGHTHANDED;\n\n    // Current and previous controller orientations.\n    this.controllerQ = quat.create();\n    this.lastControllerQ = quat.create();\n\n    // Current and previous head orientations.\n    this.headQ = quat.create();\n\n    // Current head position.\n    this.headPos = vec3.create();\n\n    // Positions of other joints (mostly for debugging).\n    this.elbowPos = vec3.create();\n    this.wristPos = vec3.create();\n\n    // Current and previous times the model was updated.\n    this.time = null;\n    this.lastTime = null;\n\n    // Root rotation.\n    this.rootQ = quat.create();\n\n    // Current position that this arm model calculates.\n    this.position = vec3.create();\n  }\n\n  setHandedness(hand) {\n    if (this.hand != hand) {\n      this.hand = hand;\n      if (this.hand == 'left') {\n        this.headElbowOffset = HEAD_ELBOW_OFFSET_LEFTHANDED;\n      } else {\n        this.headElbowOffset = HEAD_ELBOW_OFFSET_RIGHTHANDED;\n      }\n    }\n  }\n\n  /**\n   * Called on a RAF.\n   */\n  update(controllerOrientation, headPoseMatrix) {\n    this.time = now();\n\n    // Update the internal copies of the controller and head pose.\n    if (controllerOrientation) {\n      quat.copy(this.lastControllerQ, this.controllerQ);\n      quat.copy(this.controllerQ, controllerOrientation);\n    }\n\n    if (headPoseMatrix) {\n      mat4.getTranslation(this.headPos, headPoseMatrix);\n      mat4.getRotation(this.headQ, headPoseMatrix);\n    }\n\n    // If the controller's angular velocity is above a certain amount, we can\n    // assume torso rotation and move the elbow joint relative to the\n    // camera orientation.\n    let headYawQ = this.getHeadYawOrientation_();\n    let angleDelta = this.quatAngle_(this.lastControllerQ, this.controllerQ);\n    let timeDelta = (this.time - this.lastTime) / 1000;\n    let controllerAngularSpeed = angleDelta / timeDelta;\n    if (controllerAngularSpeed > MIN_ANGULAR_SPEED) {\n      // Attenuate the Root rotation slightly.\n      quat.slerp(this.rootQ, this.rootQ, headYawQ,\n                 Math.min(angleDelta / MIN_ANGLE_DELTA, 1.0));\n    } else {\n      quat.copy(this.rootQ, headYawQ);\n    }\n\n    // We want to move the elbow up and to the center as the user points the\n    // controller upwards, so that they can easily see the controller and its\n    // tool tips.\n    let controllerForward = vec3.fromValues(0, 0, -1.0);\n    vec3.transformQuat(controllerForward, controllerForward, this.controllerQ);\n    let controllerDotY = vec3.dot(controllerForward, [0, 1, 0]);\n    let extensionRatio = this.clamp_(\n        (controllerDotY - MIN_EXTENSION_COS) / MAX_EXTENSION_COS, 0.0, 1.0);\n\n    // Controller orientation in camera space.\n    let controllerCameraQ = quat.clone(this.rootQ);\n    quat.invert(controllerCameraQ, controllerCameraQ);\n    quat.multiply(controllerCameraQ, controllerCameraQ, this.controllerQ);\n\n\n    // Calculate elbow position.\n    let elbowPos = this.elbowPos;\n    vec3.copy(elbowPos, this.headPos);\n    vec3.add(elbowPos, elbowPos, this.headElbowOffset);\n    let elbowOffset = vec3.clone(ARM_EXTENSION_OFFSET);\n    vec3.scale(elbowOffset, elbowOffset, extensionRatio);\n    vec3.add(elbowPos, elbowPos, elbowOffset);\n\n    // Calculate joint angles. Generally 40% of rotation applied to elbow, 60%\n    // to wrist, but if controller is raised higher, more rotation comes from\n    // the wrist.\n    let totalAngle = this.quatAngle_(controllerCameraQ, quat.create());\n    let totalAngleDeg = totalAngle * RAD_TO_DEG;\n    let lerpSuppression = 1 - Math.pow(totalAngleDeg / 180, 4);sssss\n\n    let elbowRatio = ELBOW_BEND_RATIO;\n    let wristRatio = 1 - ELBOW_BEND_RATIO;\n    let lerpValue = lerpSuppression *\n        (elbowRatio + wristRatio * extensionRatio * EXTENSION_RATIO_WEIGHT);\n\n    let wristQ = quat.create();\n    quat.slerp(wristQ, wristQ, controllerCameraQ, lerpValue);\n    let invWristQ = quat.invert(quat.create(), wristQ);\n    let elbowQ = quat.clone(controllerCameraQ);\n    quat.multiply(elbowQ, elbowQ, invWristQ);\n\n    // Calculate our final controller position based on all our joint rotations\n    // and lengths.\n    /*\n    position_ =\n      root_rot_ * (\n        controller_root_offset_ +\n2:      (arm_extension_ * amt_extension) +\n1:      elbow_rot * (kControllerForearm + (wrist_rot * kControllerPosition))\n      );\n    */\n    let wristPos = this.wristPos;\n    vec3.copy(wristPos, WRIST_CONTROLLER_OFFSET);\n    vec3.transformQuat(wristPos, wristPos, wristQ);\n    vec3.add(wristPos, wristPos, ELBOW_WRIST_OFFSET);\n    vec3.transformQuat(wristPos, wristPos, elbowQ);\n    vec3.add(wristPos, wristPos, elbowPos);\n\n    let offset = vec3.clone(ARM_EXTENSION_OFFSET);\n    vec3.scale(offset, offset, extensionRatio);\n\n    // Set the resulting pose orientation and position.\n    vec3.add(this.position, this.wristPos, offset);\n    vec3.transformQuat(this.position, this.position, this.rootQ);\n\n    this.lastTime = this.time;\n  }\n\n  /**\n   * Returns the position calculated by the model.\n   */\n  getPosition() {\n    return this.position;\n  }\n\n  getHeadYawOrientation_() {\n    let headEuler = vec3.create();\n    eulerFromQuaternion(headEuler, this.headQ, 'YXZ');\n    let destinationQ = quat.fromEuler(quat.create(), 0, headEuler[1] * RAD_TO_DEG, 0);\n    return destinationQ;\n  }\n\n  clamp_(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n  }\n\n  quatAngle_(q1, q2) {\n    let vec1 = [0, 0, -1];\n    let vec2 = [0, 0, -1];\n    vec3.transformQuat(vec1, vec1, q1);\n    vec3.transformQuat(vec2, vec2, q2);\n    return vec3.angle(vec1, vec2);\n  }\n}", "/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport GamepadMappings from './GamepadMappings';\nimport XRInputSource from '../api/XRInputSource';\nimport OrientationArmModel from '../lib/OrientationArmModel';\nimport * as mat4 from 'gl-matrix/src/gl-matrix/mat4';\nimport * as vec3 from 'gl-matrix/src/gl-matrix/vec3';\nimport * as quat from 'gl-matrix/src/gl-matrix/quat';\n\nexport const PRIVATE = Symbol('@@webxr-polyfill/XRRemappedGamepad');\n\nconst PLACEHOLDER_BUTTON = { pressed: false, touched: false, value: 0.0 };\nObject.freeze(PLACEHOLDER_BUTTON);\n\nclass XRRemappedGamepad {\n  constructor(gamepad, display, map) {\n    if (!map) {\n      map = {};\n    }\n\n    // Apply user-agent-specific overrides to the mapping when applicable.\n    if (map.userAgentOverrides) {\n      for (let agent in map.userAgentOverrides) {\n        if (navigator.userAgent.includes(agent)) {\n          let override = map.userAgentOverrides[agent];\n\n          for (let key in override) {\n            if (key in map) {\n              // If the key already exists, merge the override values into the\n              // existing dictionary.\n              Object.assign(map[key], override[key]);\n            } else {\n              // If the base mapping doesn't have this key, insert the override\n              // values wholesale.\n              map[key] = override[key];\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    let axes = new Array(map.axes && map.axes.length ? map.axes.length : gamepad.axes.length);\n    let buttons = new Array(map.buttons && map.buttons.length ? map.buttons.length : gamepad.buttons.length);\n\n    let gripTransform = null;\n    if (map.gripTransform) {\n      let orientation = map.gripTransform.orientation || [0, 0, 0, 1];\n      gripTransform = mat4.create();\n      mat4.fromRotationTranslation(\n        gripTransform,\n        quat.normalize(orientation, orientation),\n        map.gripTransform.position || [0, 0, 0]\n      );\n    }\n\n    let targetRayTransform = null;\n    if (map.targetRayTransform) {\n      let orientation =  map.targetRayTransform.orientation || [0, 0, 0, 1];\n      targetRayTransform = mat4.create();\n      mat4.fromRotationTranslation(\n        targetRayTransform,\n        quat.normalize(orientation, orientation),\n        map.targetRayTransform.position || [0, 0, 0]\n      );\n    }\n\n    let profiles = map.profiles;\n    if (map.displayProfiles) {\n      if (display.displayName in map.displayProfiles) {\n        profiles = map.displayProfiles[display.displayName];\n      }\n    }\n\n    this[PRIVATE] = {\n      gamepad,\n      map,\n      profiles: profiles || [gamepad.id],\n      mapping: map.mapping || gamepad.mapping,\n      axes,\n      buttons,\n      gripTransform,\n      targetRayTransform,\n    };\n\n    this._update();\n  }\n\n  _update() {\n    let gamepad = this[PRIVATE].gamepad;\n    let map = this[PRIVATE].map;\n\n    let axes = this[PRIVATE].axes;\n    for (let i = 0; i < axes.length; ++i) {\n      if (map.axes && i in map.axes) {\n        if (map.axes[i] === null) {\n          axes[i] = 0;\n        } else {\n          axes[i] = gamepad.axes[map.axes[i]];\n        }\n      } else {\n        axes[i] = gamepad.axes[i];\n      }\n    }\n\n    if (map.axes && map.axes.invert) {\n      for (let axis of map.axes.invert) {\n        if (axis < axes.length) {\n          axes[axis] *= -1;\n        }\n      }\n    }\n\n    let buttons = this[PRIVATE].buttons;\n    for (let i = 0; i < buttons.length; ++i) {\n      if (map.buttons && i in map.buttons) {\n        if (map.buttons[i] === null) {\n          buttons[i] = PLACEHOLDER_BUTTON;\n        } else {\n          buttons[i] = gamepad.buttons[map.buttons[i]];\n        }\n      } else {\n        buttons[i] = gamepad.buttons[i];\n      }\n    }\n  }\n\n  get id() {\n    return '';\n  }\n\n  get _profiles() {\n    return this[PRIVATE].profiles;\n  }\n\n  get index() {\n    return -1; \n  }\n\n  get connected() {\n    return this[PRIVATE].gamepad.connected;\n  }\n\n  get timestamp() {\n    return this[PRIVATE].gamepad.timestamp;\n  }\n\n  get mapping() {\n    return this[PRIVATE].mapping;\n  }\n\n  get axes() {\n    return this[PRIVATE].axes;\n  }\n\n  get buttons() {\n    return this[PRIVATE].buttons;\n  }\n\n  // Non-standard extension\n  get hapticActuators() {\n    return this[PRIVATE].gamepad.hapticActuators;\n  }\n}\n\nexport default class GamepadXRInputSource {\n  constructor(polyfill, display, primaryButtonIndex = 0, primarySqueezeButtonIndex = -1) {\n    this.polyfill = polyfill;\n    this.display = display;\n    this.nativeGamepad = null;\n    this.gamepad = null;\n    this.inputSource = new XRInputSource(this);\n    this.lastPosition = vec3.create();\n    this.emulatedPosition = false;\n    this.basePoseMatrix = mat4.create();\n    this.outputMatrix = mat4.create();\n    this.primaryButtonIndex = primaryButtonIndex;\n    this.primaryActionPressed = false;\n    this.primarySqueezeButtonIndex = primarySqueezeButtonIndex;\n    this.primarySqueezeActionPressed = false;\n    this.handedness = '';\n    this.targetRayMode = 'gaze';\n    this.armModel = null;\n  }\n\n  get profiles() {\n    return this.gamepad ? this.gamepad._profiles : [];\n  }\n\n  updateFromGamepad(gamepad) {\n    if (this.nativeGamepad !== gamepad) {\n      this.nativeGamepad = gamepad;\n      if (gamepad) {\n        this.gamepad = new XRRemappedGamepad(gamepad, this.display, GamepadMappings[gamepad.id]);\n      } else {\n        this.gamepad = null;\n      }\n    }\n    this.handedness = gamepad.hand === '' ? 'none' : gamepad.hand\n\n    if (this.gamepad) {\n      this.gamepad._update();\n    }\n\n    if (gamepad.pose) {\n      this.targetRayMode = 'tracked-pointer';\n      this.emulatedPosition = !gamepad.pose.hasPosition;\n    } else if (gamepad.hand === '') {\n      this.targetRayMode = 'gaze';\n      this.emulatedPosition = false;\n    }\n  }\n\n  updateBasePoseMatrix() {\n    if (this.nativeGamepad && this.nativeGamepad.pose) {\n      let pose = this.nativeGamepad.pose;\n      let position = pose.position;\n      let orientation = pose.orientation;\n      // On initialization, we might not have any values\n      if (!position && !orientation) {\n        return;\n      }\n      if (!position) {\n        if (!pose.hasPosition) {\n          if (!this.armModel) {\n            this.armModel = new OrientationArmModel();\n          }\n\n          this.armModel.setHandedness(this.nativeGamepad.hand);\n          this.armModel.update(orientation, this.polyfill.getBasePoseMatrix());\n          position = this.armModel.getPosition();\n        } else {\n          position = this.lastPosition;\n        }\n      } else {\n        // This is if we temporarily lose tracking, so the controller doesn't\n        // snap back to the origin.\n        this.lastPosition[0] = position[0];\n        this.lastPosition[1] = position[1];\n        this.lastPosition[2] = position[2];\n      }\n      mat4.fromRotationTranslation(this.basePoseMatrix, orientation, position);\n    } else {\n      mat4.copy(this.basePoseMatrix, this.polyfill.getBasePoseMatrix());\n    }\n    return this.basePoseMatrix;\n  }\n\n  /**\n   * @param {XRReferenceSpace} coordinateSystem\n   * @param {string} poseType\n   * @return {XRPose?}\n   */\n  getXRPose(coordinateSystem, poseType) {\n    this.updateBasePoseMatrix();\n\n    switch(poseType) {\n      case \"target-ray\":\n        coordinateSystem._transformBasePoseMatrix(this.outputMatrix, this.basePoseMatrix);\n        if (this.gamepad && this.gamepad[PRIVATE].targetRayTransform) {\n          mat4.multiply(this.outputMatrix, this.outputMatrix, this.gamepad[PRIVATE].targetRayTransform);\n        }\n        break;\n      case \"grip\":\n        if (!this.nativeGamepad || !this.nativeGamepad.pose) {\n          return null;\n        }\n        // TODO: Does the grip matrix need to be tweaked?\n        coordinateSystem._transformBasePoseMatrix(this.outputMatrix, this.basePoseMatrix);\n        if (this.gamepad && this.gamepad[PRIVATE].gripTransform) {\n          mat4.multiply(this.outputMatrix, this.outputMatrix, this.gamepad[PRIVATE].gripTransform);\n        }\n        break;\n      default:\n        return null;\n    }\n\n    coordinateSystem._adjustForOriginOffset(this.outputMatrix);\n\n    return new XRPose(new XRRigidTransform(this.outputMatrix), this.emulatedPosition);\n  }\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as mat4 from 'gl-matrix/src/gl-matrix/mat4';\nimport XRDevice from './XRDevice';\nimport GamepadXRInputSource from './GamepadXRInputSource';\nimport {\n  isImageBitmapSupported,\n  applyCanvasStylesForMinimalRendering\n} from '../utils';\n\nconst PRIVATE = Symbol('@@webxr-polyfill/WebVRDevice');\nconst TEST_ENV = process.env.NODE_ENV === 'test';\n\nconst EXTRA_PRESENTATION_ATTRIBUTES = {\n  // Non-standard attribute to enable running at the native device refresh rate\n  // on the Oculus Go.\n  highRefreshRate: true,\n};\n\n// If a gamepad id string includes the name of the key from the map, the button\n// index given will be the one used as that controller's primary action button\n// rather than the default of button 0.\nconst PRIMARY_BUTTON_MAP = {\n  oculus: 1,\n  openvr: 1,\n  'spatial controller (spatial interaction source)': 1\n};\n\n/**\n * A Session helper class to mirror an XRSession and correlate\n * between an XRSession, and tracking sessions in a XRDevice.\n * Mostly referenced via `session.id` due to needing to verify\n * session creation is possible on the XRDevice before\n * the XRSession can be created.\n */\nlet SESSION_ID = 0;\nclass Session {\n  constructor(mode, enabledFeatures, polyfillOptions={}) {\n    this.mode = mode;\n    this.enabledFeatures = enabledFeatures;\n    this.outputContext = null;\n    this.immersive = mode == 'immersive-vr' || mode == 'immersive-ar';\n    this.ended = null;\n    this.baseLayer = null;\n    this.id = ++SESSION_ID;\n    // A flag indicating whether or not the canvas used for\n    // XRWebGLLayer was injected into the DOM to work around\n    // Firefox Desktop bug: https://bugzil.la/1435339\n    this.modifiedCanvasLayer = false;\n\n    // Since XRPresentationContext is created outside of the main API\n    // and does not expose the real 2d/bitmaprender context, manually fetch\n    // it and store it.\n    if (this.outputContext && !TEST_ENV) {\n      const renderContextType = polyfillOptions.renderContextType || '2d';\n      this.renderContext = this.outputContext.canvas.getContext(renderContextType);\n    }\n  }\n};\n\nexport default class WebVRDevice extends XRDevice {\n  /**\n   * Takes a VRDisplay instance and a VRFrameData\n   * constructor from the WebVR 1.1 spec.\n   *\n   * @param {VRDisplay} display\n   * @param {VRFrameData} VRFrameData\n   */\n  constructor(global, display) {\n    const { canPresent } = display.capabilities;\n    super(global);\n\n    this.display = display;\n    this.frame = new global.VRFrameData();\n    this.sessions = new Map();\n    this.immersiveSession = null;\n    this.canPresent = canPresent;\n    this.baseModelMatrix = mat4.create();\n    this.gamepadInputSources = {};\n    this.tempVec3 = new Float32Array(3);\n\n    this.onVRDisplayPresentChange = this.onVRDisplayPresentChange.bind(this);\n\n    global.window.addEventListener('vrdisplaypresentchange', this.onVRDisplayPresentChange);\n\n    this.CAN_USE_GAMEPAD = global.navigator && ('getGamepads' in global.navigator);\n    this.HAS_BITMAP_SUPPORT = isImageBitmapSupported(global);\n  }\n\n  /**\n   * @return {number}\n   */\n  get depthNear() { return this.display.depthNear; }\n\n  /**\n   * @param {number}\n   */\n  set depthNear(val) { this.display.depthNear = val; }\n\n  /**\n   * @return {number}\n   */\n  get depthFar() { return this.display.depthFar; }\n\n  /**\n   * @param {number}\n   */\n  set depthFar(val) { this.display.depthFar = val; }\n\n  /**\n   * Called when a XRSession has a `baseLayer` property set.\n   *\n   * @param {number} sessionId\n   * @param {XRWebGLLayer} layer\n   */\n  onBaseLayerSet(sessionId, layer) {\n    const session = this.sessions.get(sessionId);\n    const canvas = layer.context.canvas;\n\n    // If we're in an immersive session, replace the dummy layer on\n    // the 1.1 device.\n    if (session.immersive) {\n      // Wait for this to resolve before setting session.baseLayer,\n      // but we can still safely return this function synchronously\n      // We have to set the underlying canvas to the size\n      // requested by the 1.1 device.\n      const left = this.display.getEyeParameters('left');\n      const right = this.display.getEyeParameters('right');\n\n      // Generate height/width due to optics as per 1.1 spec\n      canvas.width = Math.max(left.renderWidth, right.renderWidth) * 2;\n      canvas.height = Math.max(left.renderHeight, right.renderHeight);\n      this.display.requestPresent([{\n          source: canvas, attributes: EXTRA_PRESENTATION_ATTRIBUTES\n        }]).then(() => {\n        // If canvas is not in the DOM, we must inject it anyway,\n        // due to a bug in Firefox Desktop, and ensure it is visible,\n        // so style it to be 1x1 in the upper left corner.\n        // https://bugzil.la/1435339\n        // Our test environment doesn't have the canvas package, skip\n        // in tests for now.\n        if (!TEST_ENV && !this.global.document.body.contains(canvas)) {\n          session.modifiedCanvasLayer = true;\n          this.global.document.body.appendChild(canvas);\n          applyCanvasStylesForMinimalRendering(canvas);\n        }\n        session.baseLayer = layer;\n      });\n    }\n    // If a non-immersive session that has an outputContext\n    // we only have a magic window.\n    else {\n      session.baseLayer = layer;\n    }\n  }\n\n  /**\n   * If a 1.1 VRDisplay cannot present, it could be a 6DOF device\n   * that doesn't have its own way to present, but used in magic\n   * window mode. So in WebXR lingo, this cannot support an\n   * \"immersive\" session.\n   *\n   * @param {XRSessionMode} mode\n   * @return {boolean}\n   */\n  isSessionSupported(mode) {\n    // AR is not supported by the WebVRDevice\n    if (mode == 'immersive-ar') {\n      return false;\n    }\n    if (mode == 'immersive-vr' && this.canPresent === false) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @param {string} featureDescriptor\n   * @return {boolean}\n   */\n  isFeatureSupported(featureDescriptor) {\n    switch(featureDescriptor) {\n      case 'viewer': return true;\n      case 'local': return true;\n      case 'local-floor': return true;\n\n      // TODO: We *can* support 'bounded-floor' reference spaces with what WebVR\n      // gives us, but it'll take some additional work and may have tricky\n      // timing issues.\n      case 'bounded': return false;\n\n      // 'unbounded' is unlikely to ever be supported by the polyfill, since\n      // it's pretty much impossible to do correctly without native support.\n      case 'unbounded': return false;\n      default: return false;\n    }\n  }\n\n  /**\n   * Returns a promise of a session ID if creating a session is successful.\n   * Usually used to set up presentation in the device.\n   * We can't start presenting in a 1.1 device until we have a canvas\n   * layer, so use a dummy layer until `onBaseLayerSet` is called.\n   * May reject if session is not supported, or if an error is thrown\n   * when calling `requestPresent`.\n   *\n   * @param {XRSessionMode} mode\n   * @param {Set<string>} enabledFeatures\n   * @return {Promise<number>}\n   */\n  async requestSession(mode, enabledFeatures) {\n    if (!this.isSessionSupported(mode)) {\n      return Promise.reject();\n    }\n\n    let immersive = mode == 'immersive-vr';\n\n    // If we're going to present to device, immediately call `requestPresent`\n    // since this needs to be inside of a user gesture for Cardboard\n    // (requires a user gesture for `requestFullscreen`), as well as\n    // WebVR 1.1 requiring to be in a user gesture. Use a dummy canvas,\n    // until we get the real canvas to present via `onBaseLayerSet`.\n    if (immersive) {\n      const canvas = this.global.document.createElement('canvas');\n\n      // Our test environment doesn't have the canvas package, nor this\n      // restriction, so skip.\n      if (!TEST_ENV) {\n        // Create and discard a context to avoid\n        // \"DOMException: Layer source must have a WebGLRenderingContext\"\n        const ctx = canvas.getContext('webgl');\n      }\n      await this.display.requestPresent([{\n          source: canvas, attributes: EXTRA_PRESENTATION_ATTRIBUTES }]);\n    }\n\n    const session = new Session(mode, enabledFeatures, {\n      renderContextType: this.HAS_BITMAP_SUPPORT ? 'bitmaprenderer' : '2d'\n    });\n\n    this.sessions.set(session.id, session);\n\n    if (immersive) {\n      this.immersiveSession = session;\n      this.dispatchEvent('@@webxr-polyfill/vr-present-start', session.id);\n    }\n\n    return Promise.resolve(session.id);\n  }\n\n  /**\n   * @return {Function}\n   */\n  requestAnimationFrame(callback) {\n    return this.display.requestAnimationFrame(callback);\n  }\n\n  getPrimaryButtonIndex(gamepad) {\n    let primaryButton = 0;\n    let name = gamepad.id.toLowerCase();\n    for (let key in PRIMARY_BUTTON_MAP) {\n      if (name.includes(key)) {\n        primaryButton = PRIMARY_BUTTON_MAP[key];\n        break;\n      }\n    }\n    // Make sure the index is actually in the button range.\n    return Math.min(primaryButton, gamepad.buttons.length - 1);\n  }\n\n  onFrameStart(sessionId, renderState) {\n    this.display.depthNear = renderState.depthNear;\n    this.display.depthFar = renderState.depthFar\n\n    this.display.getFrameData(this.frame);\n\n    const session = this.sessions.get(sessionId);\n\n    if (session.immersive && this.CAN_USE_GAMEPAD) {\n      // Update inputs from gamepad data\n      let prevInputSources = this.gamepadInputSources;\n      this.gamepadInputSources = {};\n      let gamepads = this.global.navigator.getGamepads();\n      for (let i = 0; i < gamepads.length; ++i) {\n        let gamepad = gamepads[i];\n        // Supposedly the gamepad's displayId should match the VRDisplay's id,\n        // but in practice anything with a non-zero displayId is an XR\n        // controller, which is almost certainly associated with any VRDisplay\n        // we were able to get.\n        if (gamepad && gamepad.displayId > 0) {\n          // Found a gamepad input source for this index.\n          let inputSourceImpl = prevInputSources[i];\n          if (!inputSourceImpl) {\n            inputSourceImpl = new GamepadXRInputSource(this, this.display, this.getPrimaryButtonIndex(gamepad));\n          }\n          inputSourceImpl.updateFromGamepad(gamepad);\n          this.gamepadInputSources[i] = inputSourceImpl;\n\n          // Process the primary action for the controller\n          if (inputSourceImpl.primaryButtonIndex != -1) {\n            let primaryActionPressed = gamepad.buttons[inputSourceImpl.primaryButtonIndex].pressed;\n            if (primaryActionPressed && !inputSourceImpl.primaryActionPressed) {\n              this.dispatchEvent('@@webxr-polyfill/input-select-start', { sessionId: session.id, inputSource: inputSourceImpl.inputSource });\n            } else if (!primaryActionPressed && inputSourceImpl.primaryActionPressed) {\n              // This will also fire a select event\n              this.dispatchEvent('@@webxr-polyfill/input-select-end', { sessionId: session.id, inputSource: inputSourceImpl.inputSource });\n            }\n            inputSourceImpl.primaryActionPressed = primaryActionPressed;\n          }\n          if (inputSourceImpl.primarySqueezeButtonIndex != -1) {\n            let primarySqueezeActionPressed = gamepad.buttons[inputSourceImpl.primarySqueezeButtonIndex].pressed;\n            if (primarySqueezeActionPressed && !inputSourceImpl.primarySqueezeActionPressed) {\n              this.dispatchEvent('@@webxr-polyfill/input-squeeze-start', { sessionId: session.id, inputSource: inputSourceImpl.inputSource });\n            } else if (!primarySqueezeActionPressed && inputSourceImpl.primarySqueezeActionPressed) {\n              // This will also fire a select event\n              this.dispatchEvent('@@webxr-polyfill/input-squeeze-end', { sessionId: session.id, inputSource: inputSourceImpl.inputSource });\n            }\n            inputSourceImpl.primarySqueezeActionPressed = primarySqueezeActionPressed;\n          }\n        }\n      }\n    }\n\n    // @TODO Our test environment doesn't have the canvas package for now,\n    // but this could be something we add to the tests.\n    if (TEST_ENV) {\n      return;\n    }\n\n    // If the session is inline make sure the projection matrix matches the \n    // aspect ratio of the underlying WebGL canvas.\n    if (!session.immersive && session.baseLayer) {\n      const canvas = session.baseLayer.context.canvas;\n      // Update the projection matrix.\n      mat4.perspective(this.frame.leftProjectionMatrix, renderState.inlineVerticalFieldOfView,\n          canvas.width/canvas.height, renderState.depthNear, renderState.depthFar);\n    }\n  }\n\n  onFrameEnd(sessionId) {\n    const session = this.sessions.get(sessionId);\n\n    // Discard if this session is already ended, or if it does\n    // not yet have a baseLayer.\n    if (session.ended || !session.baseLayer) {\n      return;\n    }\n\n    // If session is has an outputContext, whether magic window\n    // or mirroring (session.immersive === true), copy the baseLayer\n    // pixels to the XRPresentationContext\n    // However, abort if this a mirrored context, and our VRDisplay\n    // does not have an external display; this kills performance rather\n    // quickly on mobile for a canvas that's not seen.\n    if (session.outputContext &&\n        !(session.immersive && !this.display.capabilities.hasExternalDisplay)) {\n      const mirroring =\n        session.immersive && this.display.capabilities.hasExternalDisplay;\n\n      const iCanvas = session.baseLayer.context.canvas;\n      const iWidth = mirroring ? iCanvas.width / 2 : iCanvas.width;\n      const iHeight = iCanvas.height;\n\n      // @TODO Our test environment doesn't have the canvas package for now,\n      // but this could be something we add to the tests.\n      if (!TEST_ENV) {\n        const oCanvas = session.outputContext.canvas;\n        const oWidth = oCanvas.width;\n        const oHeight = oCanvas.height;\n\n        // The real underlying RenderContext that will display content\n        // for the polyfilled XRPresentationContext\n        const renderContext = session.renderContext;\n\n        // If we're using an ImageBitmapRenderingContext as our XRPresentationContext\n        if (this.HAS_BITMAP_SUPPORT) {\n          // If the developer is using an OffscreenCanvas, and ImageBitmapRenderingContext\n          // is supported, transfer the bitmap directly.\n          if (iCanvas.transferToImageBitmap) {\n            renderContext.transferFromImageBitmap(iCanvas.transferToImageBitmap());\n          }\n          // Otherwise we're using an HTMLCanvasElement, so we async generate\n          // a bitmap and then transfer the bitmap directly.\n          // @TODO does this technique result in always being a frame behind?\n          else {\n            this.global.createImageBitmap(iCanvas, 0, 0, iWidth, iHeight, {\n              resizeWidth: oWidth,\n              resizeHeight: oHeight,\n            }).then(bitmap => renderContext.transferFromImageBitmap(bitmap));\n          }\n        } else {\n\n          // We want to render only half of the layer context (left eye)\n          // proportional to the size of the outputContext canvas.\n          // ctx.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n          renderContext.drawImage(iCanvas, 0, 0, iWidth, iHeight,\n                                           0, 0, oWidth, oHeight);\n        }\n      }\n    }\n\n    // Only submit frame if we're presenting an immersive session.\n    // on a session will start presenting in 1.1 but we still have\n    // to set up the width/height correctly and wait for `baseLayer` to\n    // be set.\n    if (session.immersive && session.baseLayer) {\n      this.display.submitFrame();\n    }\n  }\n\n  /**\n   * @param {number} handle\n   */\n  cancelAnimationFrame(handle) {\n    this.display.cancelAnimationFrame(handle);\n  }\n\n  /**\n   * @TODO Spec\n   */\n  async endSession(sessionId) {\n    const session = this.sessions.get(sessionId);\n\n    if (session.ended) {\n      return;\n    }\n\n    // If this is an immersive session, end presenting;\n    // the vrdisplaypresentchange event will flip the `ended` bit.\n    if (session.immersive) {\n      return this.display.exitPresent();\n    } else {\n      session.ended = true;\n    }\n  }\n\n  /**\n   * @param {number} sessionId\n   * @param {XRReferenceSpaceType} type\n   * @return {boolean}\n   */\n  doesSessionSupportReferenceSpace(sessionId, type) {\n    const session = this.sessions.get(sessionId);\n    if (session.ended) {\n      return false;\n    }\n\n    return session.enabledFeatures.has(type);\n  }\n\n  /**\n   * If the VRDisplay has stage parameters, convert them\n   * to an array of X, Z pairings.\n   *\n   * @return {Object?}\n   */\n  requestStageBounds() {\n    if (this.display.stageParameters) {\n      const width = this.display.stageParameters.sizeX;\n      const depth = this.display.stageParameters.sizeZ;\n      const data = [];\n\n      data.push(-width / 2); // X\n      data.push(-depth / 2); // Z\n      data.push(width / 2); // X\n      data.push(-depth / 2); // Z\n      data.push(width / 2); // X\n      data.push(depth / 2); // Z\n      data.push(-width / 2); // X\n      data.push(depth / 2); // Z\n\n      return data;\n    }\n    return null;\n  }\n\n  /**\n   * Returns a promise resolving to a transform if XRDevice\n   * can support frame of reference and provides its own values.\n   * Can resolve to `undefined` if the polyfilled API can provide\n   * a default. Rejects if this XRDevice cannot\n   * support the frame of reference.\n   *\n   * @param {XRFrameOfReferenceType} type\n   * @param {XRFrameOfReferenceOptions} options\n   * @return {Promise<float32rray>}\n   */\n  async requestFrameOfReferenceTransform(type, options) {\n    if ((type === 'local-floor' || type === 'bounded-floor') &&\n        this.display.stageParameters &&\n        this.display.stageParameters.sittingToStandingTransform) {\n      return this.display.stageParameters.sittingToStandingTransform;\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {XREye} eye\n   * @return {Float32Array}\n   */\n  getProjectionMatrix(eye) {\n    if (eye === 'left') {\n      return this.frame.leftProjectionMatrix;\n    } else if (eye === 'right') {\n      return this.frame.rightProjectionMatrix;\n    } else if (eye === 'none') {\n      return this.frame.leftProjectionMatrix;\n    } else {\n      throw new Error(`eye must be of type 'left' or 'right'`);\n    }\n  }\n\n  /**\n   * Takes a XREye and a target to apply properties of\n   * `x`, `y`, `width` and `height` on. Returns a boolean\n   * indicating if it successfully was able to populate\n   * target's values.\n   *\n   * @param {number} sessionId\n   * @param {XREye} eye\n   * @param {XRWebGLLayer} layer\n   * @param {Object?} target\n   * @return {boolean}\n   */\n  getViewport(sessionId, eye, layer, target) {\n    // @TODO can we have another layer passed in that\n    // wasn't the same one as the `baseLayer`?\n\n    const session = this.sessions.get(sessionId);\n    const { width, height } = layer.context.canvas;\n\n    // If this is a non-immersive session, return the\n    // whole canvas as the viewport\n    if (!session.immersive) {\n      target.x = target.y = 0;\n      target.width = width;\n      target.height = height;\n      return true;\n    }\n\n    // WebGL 1.1 viewports are just\n    if (eye === 'left' || eye === 'none') {\n      target.x = 0;\n    } else if (eye === 'right') {\n      target.x = width / 2;\n    } else {\n      return false;\n    }\n\n    target.y = 0;\n    target.width = width / 2;\n    target.height = height;\n\n    return true;\n  }\n\n  /**\n   * Get model matrix unaffected by frame of reference.\n   *\n   * @return {Float32Array}\n   */\n  getBasePoseMatrix() {\n    let { position, orientation } = this.frame.pose;\n    // On initialization, we might not have any values\n    if (!position && !orientation) {\n      return this.baseModelMatrix;\n    }\n    if (!position) {\n      position = this.tempVec3;\n      position[0] = position[1] = position[2] = 0;\n    }\n    mat4.fromRotationTranslation(this.baseModelMatrix, orientation, position);\n    return this.baseModelMatrix;\n  }\n\n  /**\n   * Get view matrix unaffected by frame of reference.\n   *\n   * @param {XREye} eye\n   * @return {Float32Array}\n   */\n  getBaseViewMatrix(eye) {\n    if (eye === 'left' || eye === 'none') {\n      return this.frame.leftViewMatrix;\n    } else if (eye === 'right') {\n      return this.frame.rightViewMatrix;\n    } else {\n      throw new Error(`eye must be of type 'left' or 'right'`);\n    }\n  }\n\n  getInputSources() {\n    let inputSources = [];\n    for (let i in this.gamepadInputSources) {\n      inputSources.push(this.gamepadInputSources[i].inputSource);\n    }\n    return inputSources;\n  }\n\n  getInputPose(inputSource, coordinateSystem, poseType) {\n    if (!coordinateSystem) {\n      return null;\n    }\n\n    for (let i in this.gamepadInputSources) {\n      let inputSourceImpl = this.gamepadInputSources[i];\n      if (inputSourceImpl.inputSource === inputSource) {\n        return inputSourceImpl.getXRPose(coordinateSystem, poseType);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Triggered on window resize.\n   *\n   */\n  onWindowResize() {\n  }\n\n  /**\n   * Listens to the Native 1.1 `window.addEventListener('vrdisplaypresentchange')`\n   * event.\n   *\n   * @param {Event} event\n   */\n  onVRDisplayPresentChange(e) {\n    if (!this.display.isPresenting) {\n      this.sessions.forEach(session => {\n        if (session.immersive && !session.ended) {\n          // If we injected and modified the canvas layer\n          // due to https://bugzil.la/1435339, then remove it from the DOM\n          // and remove styles.\n          if (session.modifiedCanvasLayer) {\n            const canvas = session.baseLayer.context.canvas;\n            document.body.removeChild(canvas);\n            canvas.setAttribute('style', '');\n          }\n          if (this.immersiveSession === session) {\n            this.immersiveSession = null;\n          }\n          this.dispatchEvent('@@webxr-polyfill/vr-present-end', session.id);\n        }\n      });\n    }\n  }\n}\n", "/*\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as mat4 from 'gl-matrix/src/gl-matrix/mat4';\nimport XRDevice from './XRDevice';\n\nconst TEST_ENV = process.env.NODE_ENV === 'test';\n\n/**\n * A Session helper class to mirror an XRSession and correlate\n * between an XRSession, and tracking sessions in a XRDevice.\n * Mostly referenced via `session.id` due to needing to verify\n * session creation is possible on the XRDevice before\n * the XRSession can be created.\n */\nlet SESSION_ID = 0;\nclass Session {\n  constructor(mode, enabledFeatures) {\n    this.mode = mode;\n    this.enabledFeatures = enabledFeatures;\n    this.ended = null;\n    this.baseLayer = null;\n    this.id = ++SESSION_ID;\n  }\n};\n\n/**\n * An XRDevice which only supports sensorless inline sessions, used as a\n * fallback when no other type of XRDevice is available as a way to satisfy the\n * spec requirement that inline sessions are always supported.\n */\nexport default class InlineDevice extends XRDevice {\n  /**\n   * Constructs an inline-only XRDevice\n   */\n  constructor(global) {\n    super(global);\n\n    this.sessions = new Map();\n    this.projectionMatrix = mat4.create();\n    this.identityMatrix = mat4.create();\n  }\n\n  /**\n   * Called when a XRSession has a `baseLayer` property set.\n   *\n   * @param {number} sessionId\n   * @param {XRWebGLLayer} layer\n   */\n  onBaseLayerSet(sessionId, layer) {\n    const session = this.sessions.get(sessionId);\n    session.baseLayer = layer;\n  }\n\n  /**\n   * Returns true if the requested mode is inline\n   *\n   * @param {XRSessionMode} mode\n   * @return {boolean}\n   */\n  isSessionSupported(mode) {\n    return mode == 'inline';\n  }\n\n  /**\n   * @param {string} featureDescriptor\n   * @return {boolean}\n   */\n  isFeatureSupported(featureDescriptor) {\n    switch(featureDescriptor) {\n      // Only viewer reference spaces are supported\n      case 'viewer': return true;\n      default: return false;\n    }\n  }\n\n  /**\n   * Returns a promise of a session ID if creating a session is successful.\n   *\n   * @param {XRSessionMode} mode\n   * @param {Set<string>} enabledFeatures\n   * @return {Promise<number>}\n   */\n  async requestSession(mode, enabledFeatures) {\n    if (!this.isSessionSupported(mode)) {\n      return Promise.reject();\n    }\n\n    const session = new Session(mode, enabledFeatures);\n\n    this.sessions.set(session.id, session);\n\n    return Promise.resolve(session.id);\n  }\n\n  /**\n   * @return {Function}\n   */\n  requestAnimationFrame(callback) {\n    return window.requestAnimationFrame(callback);\n  }\n\n  /**\n   * @param {number} handle\n   */\n  cancelAnimationFrame(handle) {\n    window.cancelAnimationFrame(handle);\n  }\n\n  onFrameStart(sessionId, renderState) {\n    // @TODO Our test environment doesn't have the canvas package for now,\n    // but this could be something we add to the tests.\n    if (TEST_ENV) {\n      return;\n    }\n\n    const session = this.sessions.get(sessionId);\n\n    // If the session is inline make sure the projection matrix matches the \n    // aspect ratio of the underlying WebGL canvas.\n    if (session.baseLayer) {\n      const canvas = session.baseLayer.context.canvas;\n      // Update the projection matrix.\n      mat4.perspective(this.projectionMatrix, renderState.inlineVerticalFieldOfView,\n          canvas.width/canvas.height, renderState.depthNear, renderState.depthFar);\n    }\n  }\n\n  onFrameEnd(sessionId) {\n    // Nothing to do here because inline always renders to the canvas backbuffer\n    // directly.\n  }\n\n  /**\n   * @TODO Spec\n   */\n  async endSession(sessionId) {\n    const session = this.sessions.get(sessionId);\n    session.ended = true;\n  }\n\n  /**\n   * @param {number} sessionId\n   * @param {XRReferenceSpaceType} type\n   * @return {boolean}\n   */\n  doesSessionSupportReferenceSpace(sessionId, type) {\n    const session = this.sessions.get(sessionId);\n    if (session.ended) {\n      return false;\n    }\n\n    return session.enabledFeatures.has(type);\n  }\n\n  /**\n   * Inline sessions don't have stage bounds\n   *\n   * @return {Object?}\n   */\n  requestStageBounds() {\n    return null;\n  }\n\n  /**\n   * Inline sessions don't have multiple frames of reference\n   *\n   * @param {XRFrameOfReferenceType} type\n   * @param {XRFrameOfReferenceOptions} options\n   * @return {Promise<Float32Array>}\n   */\n  async requestFrameOfReferenceTransform(type, options) {\n    return null;\n  }\n\n  /**\n   * @param {XREye} eye\n   * @return {Float32Array}\n   */\n  getProjectionMatrix(eye) {\n    return this.projectionMatrix;\n  }\n\n  /**\n   * Takes a XREye and a target to apply properties of\n   * `x`, `y`, `width` and `height` on. Returns a boolean\n   * indicating if it successfully was able to populate\n   * target's values.\n   *\n   * @param {number} sessionId\n   * @param {XREye} eye\n   * @param {XRWebGLLayer} layer\n   * @param {Object?} target\n   * @return {boolean}\n   */\n  getViewport(sessionId, eye, layer, target) {\n    // @TODO can we have another layer passed in that\n    // wasn't the same one as the `baseLayer`?\n\n    const session = this.sessions.get(sessionId);\n    const { width, height } = layer.context.canvas;\n\n    // Inline sessions return the whole canvas as the viewport\n    target.x = target.y = 0;\n    target.width = width;\n    target.height = height;\n    return true;\n  }\n\n  /**\n   * Get model matrix unaffected by frame of reference.\n   *\n   * @return {Float32Array}\n   */\n  getBasePoseMatrix() {\n    return this.identityMatrix;\n  }\n\n  /**\n   * Get view matrix unaffected by frame of reference.\n   *\n   * @param {XREye} eye\n   * @return {Float32Array}\n   */\n  getBaseViewMatrix(eye) {\n    return this.identityMatrix;\n  }\n\n  /**\n   * No persistent input sources for the inline session\n   */\n  getInputSources() {\n    return [];\n  }\n\n  getInputPose(inputSource, coordinateSystem, poseType) {\n    return null;\n  }\n\n  /**\n   * Triggered on window resize.\n   */\n  onWindowResize() {\n  }\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CardboardXRDevice from './devices/CardboardXRDevice';\nimport InlineDevice from './devices/InlineDevice';\nimport WebVRDevice from './devices/WebVRDevice';\n\nimport { isMobile } from './utils';\n\n/**\n * Queries browser to see if any VRDisplay exists.\n * Resolves to a polyfilled XRDevice or null.\n */\nconst getWebVRDevice = async function (global) {\n  let device = null;\n  if ('getVRDisplays' in global.navigator) {\n    try {\n      const displays = await global.navigator.getVRDisplays();\n      if (displays && displays.length) {\n        device = new WebVRDevice(global, displays[0]);\n      }\n    } catch (e) {}\n  }\n\n  return device;\n};\n\n/**\n * Return an XRDevice interface based off of configuration\n * and platform.\n *\n * @param {Object} global\n * @param {Object} config\n * @return {Promise<XRDevice?>}\n */\nexport const requestXRDevice = async function (global, config) {\n  // Check for a 1.1 VRDisplay.\n  if (config.webvr) {\n    let xr = await getWebVRDevice(global);\n    if (xr) {\n      return xr;\n    }\n  }\n\n  // If no WebVR devices are present, check to see if a Cardboard device is\n  // allowed and if so return that.\n  // TODO: This probably requires more changes to allow creating an\n  // immersive session in a headset that gets connected later.\n  let mobile = isMobile(global);\n  if ((mobile && config.cardboard) ||\n      (!mobile && config.allowCardboardOnDesktop)) {\n    // If we're on Cardboard, make sure that VRFrameData is a global\n    if (!global.VRFrameData) {\n      global.VRFrameData = function () {\n        this.rightViewMatrix = new Float32Array(16);\n        this.leftViewMatrix = new Float32Array(16);\n        this.rightProjectionMatrix = new Float32Array(16);\n        this.leftProjectionMatrix = new Float32Array(16);\n        this.pose = null;\n      };\n    }\n\n    return new CardboardXRDevice(global, config.cardboardConfig);\n  }\n\n  // Inline sessions are always allowed, so if no other device is available\n  // create one that only supports sensorless inline sessions.\n  return new InlineDevice(global);\n}\n", "/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport GLOBAL from './lib/global';\nimport API from './api/index';\nimport {\n  polyfillMakeXRCompatible,\n  polyfillGetContext\n} from './polyfill-globals';\nimport { isImageBitmapSupported, isMobile } from './utils';\nimport { requestXRDevice } from './devices';\n\nconst CONFIG_DEFAULTS = {\n  // The default global to use for needed APIs.\n  global: GLOBAL,\n  // Whether support for a browser implementing WebVR 1.1 is enabled.\n  // If enabled, XR support is powered by native WebVR 1.1 VRDisplays,\n  // exposed as XRDevices.\n  webvr: true,\n  // Whether a CardboardXRDevice should be discoverable if on\n  // a mobile device, and no other native (1.1 VRDisplay if `webvr` on,\n  // or XRDevice) found.\n  cardboard: true,\n  // The configuration to be used for CardboardVRDisplay when used.\n  // Has no effect if `cardboard: false` or another XRDevice is used.\n  // Configuration can be found: https://github.com/immersive-web/cardboard-vr-display/blob/master/src/options.js\n  cardboardConfig: null,\n  // Whether a CardboardXRDevice should be created if no WebXR API found\n  // on desktop or not. Stereoscopic rendering with a gyro often does not make sense on desktop, and probably only useful for debugging.\n  allowCardboardOnDesktop: false,\n};\n\nconst partials = ['navigator', 'HTMLCanvasElement', 'WebGLRenderingContext'];\n\nexport default class WebXRPolyfill {\n  /**\n   * @param {object?} config\n   */\n  constructor(config={}) {\n    this.config = Object.freeze(Object.assign({}, CONFIG_DEFAULTS, config));\n    this.global = this.config.global;\n    this.nativeWebXR = 'xr' in this.global.navigator;\n    this.injected = false;\n\n    // If no native WebXR implementation found, inject one\n    if (true || !this.nativeWebXR) {\n      this._injectPolyfill(this.global);\n    } else {\n      this._injectCompatibilityShims(this.global);\n    }\n  }\n\n  _injectPolyfill(global) {\n    if (!partials.every(iface => !!global[iface])) {\n      throw new Error(`Global must have the following attributes : ${partials}`);\n    }\n\n    // Apply classes as globals\n    for (const className of Object.keys(API)) {\n      if (global[className] !== undefined) {\n        console.warn(`${className} already defined on global.`);\n      } else {\n        global[className] = API[className];\n      }\n    }\n\n    // Test environment does not have rendering contexts\n    if (process.env.NODE_ENV !== 'test') {\n      // Attempts to polyfill WebGLRenderingContext's `makeXRCompatible`\n      // if it does not exist.\n      const polyfilledCtx = polyfillMakeXRCompatible(global.WebGLRenderingContext);\n\n      // If we polyfilled `makeXRCompatible`, also polyfill the context creation\n      // parameter `{ xrCompatible }`.\n      if (polyfilledCtx) {\n        polyfillGetContext(global.HTMLCanvasElement);\n\n        // If OffscreenCanvas is available, patch its `getContext` method as well\n        // for the compatible XRDevice bit.\n        if (global.OffscreenCanvas) {\n          polyfillGetContext(global.OffscreenCanvas);\n        }\n\n        // If we needed to polyfill WebGLRenderingContext, do the same\n        // for WebGL2 contexts if it exists.\n        if (global.WebGL2RenderingContext){\n          polyfillMakeXRCompatible(global.WebGL2RenderingContext);\n        }\n\n        if (!window.isSecureContext) {\n          console.warn(`WebXR Polyfill Warning:\nThis page is not running in a secure context (https:// or localhost)!\nThis means that although the page may be able to use the WebXR Polyfill it will\nnot be able to use native WebXR implementations, and as such will not be able to\naccess dedicated VR or AR hardware, and will not be able to take advantage of\nany performance improvements a native WebXR implementation may offer. Please\nhost this content on a secure origin for the best user experience.\n`);\n        }\n      }\n    }\n\n    this.injected = true;\n\n    this._patchNavigatorXR();\n  }\n\n  _patchNavigatorXR() {\n    // Request a polyfilled XRDevice.\n    let devicePromise = requestXRDevice(this.global, this.config);\n\n    // Create `navigator.xr` instance populated with the XRDevice promise\n    // requested above. The promise resolve will be monitored by the XR object.\n    this.xr = new API.XRSystem(devicePromise);\n    Object.defineProperty(this.global.navigator, 'xr', {\n      value: this.xr,\n      configurable: true,\n    });\n  }\n\n  _injectCompatibilityShims(global) {\n    if (!partials.every(iface => !!global[iface])) {\n      throw new Error(`Global must have the following attributes : ${partials}`);\n    }\n\n    // Patch for Chrome 76-78: exposed supportsSession rather than\n    // isSessionSupported. Wraps the function to ensure the promise properly\n    // resolves with a boolean.\n    if (global.navigator.xr &&\n        'supportsSession' in global.navigator.xr &&\n        !('isSessionSupported' in global.navigator.xr)) {\n      let originalSupportsSession = global.navigator.xr.supportsSession;\n      global.navigator.xr.isSessionSupported = function(mode) {\n        return originalSupportsSession.call(this, mode).then(() => {\n          return true;\n        }).catch(() => {\n          return false;\n        });\n      }\n\n      global.navigator.xr.supportsSession = function(mode) {\n        console.warn(\"navigator.xr.supportsSession() is deprecated. Please \" +\n        \"call navigator.xr.isSessionSupported() instead and check the boolean \" +\n        \"value returned when the promise resolves.\");\n        return originalSupportsSession.call(this, mode);\n      }\n    }\n  }\n}\n", "/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}", "import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;", "var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar cbor = createCommonjsModule(function (module) {\n/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2014 Patrick Gansterer <paroga@paroga.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n(function(global, undefined$1) {var POW_2_24 = Math.pow(2, -24),\r\n    POW_2_32 = Math.pow(2, 32),\r\n    POW_2_53 = Math.pow(2, 53);\r\n\r\nfunction encode(value) {\r\n  var data = new ArrayBuffer(256);\r\n  var dataView = new DataView(data);\r\n  var lastLength;\r\n  var offset = 0;\r\n\r\n  function ensureSpace(length) {\r\n    var newByteLength = data.byteLength;\r\n    var requiredLength = offset + length;\r\n    while (newByteLength < requiredLength)\r\n      newByteLength *= 2;\r\n    if (newByteLength !== data.byteLength) {\r\n      var oldDataView = dataView;\r\n      data = new ArrayBuffer(newByteLength);\r\n      dataView = new DataView(data);\r\n      var uint32count = (offset + 3) >> 2;\r\n      for (var i = 0; i < uint32count; ++i)\r\n        dataView.setUint32(i * 4, oldDataView.getUint32(i * 4));\r\n    }\r\n\r\n    lastLength = length;\r\n    return dataView;\r\n  }\r\n  function write() {\r\n    offset += lastLength;\r\n  }\r\n  function writeFloat64(value) {\r\n    write(ensureSpace(8).setFloat64(offset, value));\r\n  }\r\n  function writeUint8(value) {\r\n    write(ensureSpace(1).setUint8(offset, value));\r\n  }\r\n  function writeUint8Array(value) {\r\n    var dataView = ensureSpace(value.length);\r\n    for (var i = 0; i < value.length; ++i)\r\n      dataView.setUint8(offset + i, value[i]);\r\n    write();\r\n  }\r\n  function writeUint16(value) {\r\n    write(ensureSpace(2).setUint16(offset, value));\r\n  }\r\n  function writeUint32(value) {\r\n    write(ensureSpace(4).setUint32(offset, value));\r\n  }\r\n  function writeUint64(value) {\r\n    var low = value % POW_2_32;\r\n    var high = (value - low) / POW_2_32;\r\n    var dataView = ensureSpace(8);\r\n    dataView.setUint32(offset, high);\r\n    dataView.setUint32(offset + 4, low);\r\n    write();\r\n  }\r\n  function writeTypeAndLength(type, length) {\r\n    if (length < 24) {\r\n      writeUint8(type << 5 | length);\r\n    } else if (length < 0x100) {\r\n      writeUint8(type << 5 | 24);\r\n      writeUint8(length);\r\n    } else if (length < 0x10000) {\r\n      writeUint8(type << 5 | 25);\r\n      writeUint16(length);\r\n    } else if (length < 0x100000000) {\r\n      writeUint8(type << 5 | 26);\r\n      writeUint32(length);\r\n    } else {\r\n      writeUint8(type << 5 | 27);\r\n      writeUint64(length);\r\n    }\r\n  }\r\n  \r\n  function encodeItem(value) {\r\n    var i;\r\n\r\n    if (value === false)\r\n      return writeUint8(0xf4);\r\n    if (value === true)\r\n      return writeUint8(0xf5);\r\n    if (value === null)\r\n      return writeUint8(0xf6);\r\n    if (value === undefined$1)\r\n      return writeUint8(0xf7);\r\n  \r\n    switch (typeof value) {\r\n      case \"number\":\r\n        if (Math.floor(value) === value) {\r\n          if (0 <= value && value <= POW_2_53)\r\n            return writeTypeAndLength(0, value);\r\n          if (-POW_2_53 <= value && value < 0)\r\n            return writeTypeAndLength(1, -(value + 1));\r\n        }\r\n        writeUint8(0xfb);\r\n        return writeFloat64(value);\r\n\r\n      case \"string\":\r\n        var utf8data = [];\r\n        for (i = 0; i < value.length; ++i) {\r\n          var charCode = value.charCodeAt(i);\r\n          if (charCode < 0x80) {\r\n            utf8data.push(charCode);\r\n          } else if (charCode < 0x800) {\r\n            utf8data.push(0xc0 | charCode >> 6);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else if (charCode < 0xd800) {\r\n            utf8data.push(0xe0 | charCode >> 12);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          } else {\r\n            charCode = (charCode & 0x3ff) << 10;\r\n            charCode |= value.charCodeAt(++i) & 0x3ff;\r\n            charCode += 0x10000;\r\n\r\n            utf8data.push(0xf0 | charCode >> 18);\r\n            utf8data.push(0x80 | (charCode >> 12)  & 0x3f);\r\n            utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\r\n            utf8data.push(0x80 | charCode & 0x3f);\r\n          }\r\n        }\r\n\r\n        writeTypeAndLength(3, utf8data.length);\r\n        return writeUint8Array(utf8data);\r\n\r\n      default:\r\n        var length;\r\n        if (Array.isArray(value)) {\r\n          length = value.length;\r\n          writeTypeAndLength(4, length);\r\n          for (i = 0; i < length; ++i)\r\n            encodeItem(value[i]);\r\n        } else if (value instanceof Uint8Array) {\r\n          writeTypeAndLength(2, value.length);\r\n          writeUint8Array(value);\r\n        } else {\r\n          var keys = Object.keys(value);\r\n          length = keys.length;\r\n          writeTypeAndLength(5, length);\r\n          for (i = 0; i < length; ++i) {\r\n            var key = keys[i];\r\n            encodeItem(key);\r\n            encodeItem(value[key]);\r\n          }\r\n        }\r\n    }\r\n  }\r\n  \r\n  encodeItem(value);\r\n\r\n  if (\"slice\" in data)\r\n    return data.slice(0, offset);\r\n  \r\n  var ret = new ArrayBuffer(offset);\r\n  var retView = new DataView(ret);\r\n  for (var i = 0; i < offset; ++i)\r\n    retView.setUint8(i, dataView.getUint8(i));\r\n  return ret;\r\n}\r\n\r\nfunction decode(data, tagger, simpleValue) {\r\n  var dataView = new DataView(data);\r\n  var offset = 0;\r\n  \r\n  if (typeof tagger !== \"function\")\r\n    tagger = function(value) { return value; };\r\n  if (typeof simpleValue !== \"function\")\r\n    simpleValue = function() { return undefined$1; };\r\n\r\n  function read(value, length) {\r\n    offset += length;\r\n    return value;\r\n  }\r\n  function readArrayBuffer(length) {\r\n    return read(new Uint8Array(data, offset, length), length);\r\n  }\r\n  function readFloat16() {\r\n    var tempArrayBuffer = new ArrayBuffer(4);\r\n    var tempDataView = new DataView(tempArrayBuffer);\r\n    var value = readUint16();\r\n\r\n    var sign = value & 0x8000;\r\n    var exponent = value & 0x7c00;\r\n    var fraction = value & 0x03ff;\r\n    \r\n    if (exponent === 0x7c00)\r\n      exponent = 0xff << 10;\r\n    else if (exponent !== 0)\r\n      exponent += (127 - 15) << 10;\r\n    else if (fraction !== 0)\r\n      return fraction * POW_2_24;\r\n    \r\n    tempDataView.setUint32(0, sign << 16 | exponent << 13 | fraction << 13);\r\n    return tempDataView.getFloat32(0);\r\n  }\r\n  function readFloat32() {\r\n    return read(dataView.getFloat32(offset), 4);\r\n  }\r\n  function readFloat64() {\r\n    return read(dataView.getFloat64(offset), 8);\r\n  }\r\n  function readUint8() {\r\n    return read(dataView.getUint8(offset), 1);\r\n  }\r\n  function readUint16() {\r\n    return read(dataView.getUint16(offset), 2);\r\n  }\r\n  function readUint32() {\r\n    return read(dataView.getUint32(offset), 4);\r\n  }\r\n  function readUint64() {\r\n    return readUint32() * POW_2_32 + readUint32();\r\n  }\r\n  function readBreak() {\r\n    if (dataView.getUint8(offset) !== 0xff)\r\n      return false;\r\n    offset += 1;\r\n    return true;\r\n  }\r\n  function readLength(additionalInformation) {\r\n    if (additionalInformation < 24)\r\n      return additionalInformation;\r\n    if (additionalInformation === 24)\r\n      return readUint8();\r\n    if (additionalInformation === 25)\r\n      return readUint16();\r\n    if (additionalInformation === 26)\r\n      return readUint32();\r\n    if (additionalInformation === 27)\r\n      return readUint64();\r\n    if (additionalInformation === 31)\r\n      return -1;\r\n    throw \"Invalid length encoding\";\r\n  }\r\n  function readIndefiniteStringLength(majorType) {\r\n    var initialByte = readUint8();\r\n    if (initialByte === 0xff)\r\n      return -1;\r\n    var length = readLength(initialByte & 0x1f);\r\n    if (length < 0 || (initialByte >> 5) !== majorType)\r\n      throw \"Invalid indefinite length element\";\r\n    return length;\r\n  }\r\n\r\n  function appendUtf16data(utf16data, length) {\r\n    for (var i = 0; i < length; ++i) {\r\n      var value = readUint8();\r\n      if (value & 0x80) {\r\n        if (value < 0xe0) {\r\n          value = (value & 0x1f) <<  6\r\n                | (readUint8() & 0x3f);\r\n          length -= 1;\r\n        } else if (value < 0xf0) {\r\n          value = (value & 0x0f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 2;\r\n        } else {\r\n          value = (value & 0x0f) << 18\r\n                | (readUint8() & 0x3f) << 12\r\n                | (readUint8() & 0x3f) << 6\r\n                | (readUint8() & 0x3f);\r\n          length -= 3;\r\n        }\r\n      }\r\n\r\n      if (value < 0x10000) {\r\n        utf16data.push(value);\r\n      } else {\r\n        value -= 0x10000;\r\n        utf16data.push(0xd800 | (value >> 10));\r\n        utf16data.push(0xdc00 | (value & 0x3ff));\r\n      }\r\n    }\r\n  }\r\n\r\n  function decodeItem() {\r\n    var initialByte = readUint8();\r\n    var majorType = initialByte >> 5;\r\n    var additionalInformation = initialByte & 0x1f;\r\n    var i;\r\n    var length;\r\n\r\n    if (majorType === 7) {\r\n      switch (additionalInformation) {\r\n        case 25:\r\n          return readFloat16();\r\n        case 26:\r\n          return readFloat32();\r\n        case 27:\r\n          return readFloat64();\r\n      }\r\n    }\r\n\r\n    length = readLength(additionalInformation);\r\n    if (length < 0 && (majorType < 2 || 6 < majorType))\r\n      throw \"Invalid length\";\r\n\r\n    switch (majorType) {\r\n      case 0:\r\n        return length;\r\n      case 1:\r\n        return -1 - length;\r\n      case 2:\r\n        if (length < 0) {\r\n          var elements = [];\r\n          var fullArrayLength = 0;\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0) {\r\n            fullArrayLength += length;\r\n            elements.push(readArrayBuffer(length));\r\n          }\r\n          var fullArray = new Uint8Array(fullArrayLength);\r\n          var fullArrayOffset = 0;\r\n          for (i = 0; i < elements.length; ++i) {\r\n            fullArray.set(elements[i], fullArrayOffset);\r\n            fullArrayOffset += elements[i].length;\r\n          }\r\n          return fullArray;\r\n        }\r\n        return readArrayBuffer(length);\r\n      case 3:\r\n        var utf16data = [];\r\n        if (length < 0) {\r\n          while ((length = readIndefiniteStringLength(majorType)) >= 0)\r\n            appendUtf16data(utf16data, length);\r\n        } else\r\n          appendUtf16data(utf16data, length);\r\n        return String.fromCharCode.apply(null, utf16data);\r\n      case 4:\r\n        var retArray;\r\n        if (length < 0) {\r\n          retArray = [];\r\n          while (!readBreak())\r\n            retArray.push(decodeItem());\r\n        } else {\r\n          retArray = new Array(length);\r\n          for (i = 0; i < length; ++i)\r\n            retArray[i] = decodeItem();\r\n        }\r\n        return retArray;\r\n      case 5:\r\n        var retObject = {};\r\n        for (i = 0; i < length || length < 0 && !readBreak(); ++i) {\r\n          var key = decodeItem();\r\n          retObject[key] = decodeItem();\r\n        }\r\n        return retObject;\r\n      case 6:\r\n        return tagger(decodeItem(), length);\r\n      case 7:\r\n        switch (length) {\r\n          case 20:\r\n            return false;\r\n          case 21:\r\n            return true;\r\n          case 22:\r\n            return null;\r\n          case 23:\r\n            return undefined$1;\r\n          default:\r\n            return simpleValue(length);\r\n        }\r\n    }\r\n  }\r\n\r\n  var ret = decodeItem();\r\n  if (offset !== data.byteLength)\r\n    throw \"Remaining bytes\";\r\n  return ret;\r\n}\r\n\r\nvar obj = { encode: encode, decode: decode };\r\n\r\nif (typeof undefined$1 === \"function\" && undefined$1.amd)\r\n  undefined$1(\"cbor/cbor\", obj);\r\nelse if ( module.exports)\r\n  module.exports = obj;\r\nelse if (!global.CBOR)\r\n  global.CBOR = obj;\r\n\r\n})(commonjsGlobal);\n});\n\n/**\n * This files defines the HoloPlayClient class and Message class.\n *\n * Copyright (c) [2019] [Looking Glass Factory]\n *\n * @link    https://lookingglassfactory.com/\n * @file    This files defines the HoloPlayClient class and Message class.\n * @author  Looking Glass Factory.\n * @version 0.0.8\n * @license SEE LICENSE IN LICENSE.md\n */\n\n// Polyfill WebSocket for nodejs applications.\nconst WebSocket =\n    typeof window === 'undefined' ? require('ws') : window.WebSocket;\n\n/** Class representing a client to communicates with the HoloPlayService. */\nclass Client {\n  /**\n   * Establish a client to talk to HoloPlayService.\n   * @constructor\n   * @param {function} initCallback - optional; a function to trigger when\n   *     response is received\n   * @param {function} errCallback - optional; a function to trigger when there\n   *     is a connection error\n   * @param {function} closeCallback - optional; a function to trigger when the\n   *     socket is closed\n   * @param {boolean} debug - optional; default is false\n   * @param {string}  appId - optional\n   * @param {boolean} isGreedy - optional\n   * @param {string}  oncloseBehavior - optional, can be 'wipe', 'hide', 'none'\n   */\n  constructor(\n      initCallback, errCallback, closeCallback, debug = false, appId, isGreedy,\n      oncloseBehavior) {\n    this.reqs = [];\n    this.reps = [];\n    this.requestId = this.getRequestId();\n    this.debug = debug;\n    this.isGreedy = isGreedy;\n    this.errCallback = errCallback;\n    this.closeCallback = closeCallback;\n    this.alwaysdebug = false;\n    this.isConnected = false;\n    let initCmd = null;\n    if (appId || isGreedy || oncloseBehavior) {\n      initCmd = new InitMessage(appId, isGreedy, oncloseBehavior, this.debug);\n    } else {\n      if (debug) this.alwaysdebug = true;\n      if (typeof initCallback == 'function') initCmd = new InfoMessage();\n    }\n    this.openWebsocket(initCmd, initCallback);\n  }\n  /**\n   * Send a message over the websocket to HoloPlayService.\n   * @public\n   * @param {Message} msg - message object\n   * @param {integer} timeoutSecs - optional, default is 60 seconds\n   */\n  sendMessage(msg, timeoutSecs = 60) {\n    if (this.alwaysdebug) msg.cmd.debug = true;\n    let cborData = msg.toCbor();\n    return this.sendRequestObj(cborData, timeoutSecs);\n  }\n  /**\n   * Disconnects from the web socket.\n   * @public\n   */\n  disconnect() {\n    this.ws.close();\n  }\n  /**\n   * Open a websocket and set handlers\n   * @private\n   */\n  openWebsocket(firstCmd = null, initCallback = null) {\n    this.ws =\n        new WebSocket('ws://localhost:11222/driver', ['rep.sp.nanomsg.org']);\n    this.ws.parent = this;\n    this.ws.binaryType = 'arraybuffer';\n    this.ws.onmessage = this.messageHandler;\n    this.ws.onopen = (() => {\n      this.isConnected = true;\n      if (this.debug) {\n        console.log('socket open');\n      }\n      if (firstCmd != null) {\n        this.sendMessage(firstCmd).then(initCallback);\n      }\n    });\n    this.ws.onerror = this.onSocketError;\n    this.ws.onclose = this.onClose;\n  }\n  /**\n   * Send a request object over websocket\n   * @private\n   */\n  sendRequestObj(data, timeoutSecs) {\n    return new Promise((resolve, reject) => {\n      let reqObj = {\n        id: this.requestId++,\n        parent: this,\n        payload: data,\n        success: resolve,\n        error: reject,\n        send: function() {\n          if (this.debug)\n            console.log('attemtping to send request with ID ' + this.id);\n          this.timeout = setTimeout(reqObj.send.bind(this), timeoutSecs * 1000);\n          let tmp = new Uint8Array(data.byteLength + 4);\n          let view = new DataView(tmp.buffer);\n          view.setUint32(0, this.id);\n          tmp.set(new Uint8Array(this.payload), 4);\n          this.parent.ws.send(tmp.buffer);\n        }\n      };\n      this.reqs.push(reqObj);\n      reqObj.send();\n    });\n  }\n  /**\n   * Handles a message when received\n   * @private\n   */\n  messageHandler(event) {\n    console.log('message');\n    let data = event.data;\n    if (data.byteLength < 4) return;\n    let view = new DataView(data);\n    let replyId = view.getUint32(0);\n    if (replyId < 0x80000000) {\n      this.parent.err('bad nng header');\n      return;\n    }\n    let i = this.parent.findReqIndex(replyId);\n    if (i == -1) {\n      this.parent.err('got reply that doesn\\'t match known request!');\n      return;\n    }\n    let rep = {id: replyId, payload: cbor.decode(data.slice(4))};\n    if (rep.payload.error == 0) {\n      this.parent.reqs[i].success(rep.payload);\n    } else {\n      this.parent.reqs[i].error(rep.payload);\n    }\n    clearTimeout(this.parent.reqs[i].timeout);\n    this.parent.reqs.splice(i, 1);\n    this.parent.reps.push(rep);\n    if (this.debug) {\n      console.log(rep.payload);\n    }\n  }\n  getRequestId() {\n    return Math.floor(this.prng() * (0x7fffffff)) + 0x80000000;\n  }\n  onClose(event) {\n    this.parent.isConnected = false;\n    if (this.parent.debug) {\n      console.log('socket closed');\n    }\n    if (typeof this.parent.closeCallback == 'function')\n      this.parent.closeCallback(event);\n  }\n  onSocketError(error) {\n    if (this.parent.debug) {\n      console.log(error);\n    }\n    if (typeof this.parent.errCallback == 'function') {\n      this.parent.errCallback(error);\n    }\n  }\n  err(errorMsg) {\n    if (this.debug) {\n      console.log('[DRIVER ERROR]' + errorMsg);\n    }\n    // TODO : make this return an event obj rather than a string\n    // if (typeof this.errCallback == 'function')\n    //   this.errCallback(errorMsg);\n  }\n  findReqIndex(replyId) {\n    let i = 0;\n    for (; i < this.reqs.length; i++) {\n      if (this.reqs[i].id == replyId) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  prng() {\n    if (this.rng == undefined) {\n      this.rng = generateRng();\n    }\n    return this.rng();\n  }\n}\n\n/** A class to represent messages being sent over to HoloPlay Service */\nclass Message {\n  /**\n   * Construct a barebone message.\n   * @constructor\n   */\n  constructor(cmd, bin) {\n    this.cmd = cmd;\n    this.bin = bin;\n  }\n  /**\n   * Convert the class instance to the CBOR format\n   * @public\n   * @returns {CBOR} - cbor object of the message\n   */\n  toCbor() {\n    return cbor.encode(this);\n  }\n}\n/** Message to init. Extends the base Message class. */\nclass InitMessage extends Message {\n  /**\n   * @constructor\n   * @param {string}  appId - a unique id for app\n   * @param {boolean} isGreedy - will it take over screen\n   * @param {string}  oncloseBehavior - can be 'wipe', 'hide', 'none'\n   */\n  constructor(appId = '', isGreedy = false, onclose = '', debug = false) {\n    let cmd = {'init': {}};\n    if (appId != '') cmd['init'].appid = appId;\n    if (onclose != '') cmd['init'].onclose = onclose;\n    if (isGreedy) cmd['init'].greedy = true;\n    if (debug) cmd['init'].debug = true;\n    super(cmd, null);\n  }\n}\n/** Delete a quilt from HoloPlayService. Extends the base Message class. */\nclass DeleteMessage extends Message {\n  /**\n   * @constructor\n   * @param {string} name - name of the quilt\n   */\n  constructor(name = '') {\n    let cmd = {'delete': {'name': name}};\n    super(cmd, null);\n  }\n}\n/** Check if a quilt exist in cache. Extends the base Message class. */\nclass CheckMessage extends Message {\n  /**\n   * @constructor\n   * @param {string} name - name of the quilt\n   */\n  constructor(name = '') {\n    let cmd = {'check': {'name': name}};\n    super(cmd, null);\n  }\n}\n/** Wipes the image in Looking Glass and displays the background image */\nclass WipeMessage extends Message {\n  /**\n   * @constructor\n   * @param {number} targetDisplay - optional, if not provided, default is 0\n   */\n  constructor(targetDisplay = null) {\n    let cmd = {'wipe': {}};\n    if (targetDisplay != null) cmd['wipe'].targetDisplay = targetDisplay;\n    super(cmd, null);\n  }\n}\n/** Get info from the HoloPlayService */\nclass InfoMessage extends Message {\n  /**\n   * @constructor\n   */\n  constructor() {\n    let cmd = {'info': {}};\n    super(cmd, null);\n  }\n}\n/** Get shader uniforms from HoloPlayService */\nclass UniformsMessage extends Message {\n  /**\n   * @constructor\n   * @param {object}\n   */\n  constructor() {\n    let cmd = {'uniforms': {}};\n    super(cmd, bindata);\n  }\n}\n/** Get GLSL shader code from HoloPlayService */\nclass ShaderMessage extends Message {\n  /**\n   * @constructor\n   * @param {object}\n   */\n  constructor() {\n    let cmd = {'shader': {}};\n    super(cmd, bindata);\n  }\n}\n/** Show a quilt in the Looking Glass with the binary data of quilt provided */\nclass ShowMessage extends Message {\n  /**\n   * @constructor\n   * @param {object}\n   */\n  constructor(\n      settings = {vx: 5, vy: 9, aspect: 1.6}, bindata = '',\n      targetDisplay = null) {\n    let cmd = {\n      'show': {\n        'source': 'bindata',\n        'quilt': {'type': 'image', 'settings': settings}\n      }\n    };\n    if (targetDisplay != null) cmd['show']['targetDisplay'] = targetDisplay;\n    super(cmd, bindata);\n  }\n}\n/** extends the base Message class */\nclass CacheMessage extends Message {\n  constructor(\n      name, settings = {vx: 5, vy: 9, aspect: 1.6}, bindata = '',\n      show = false) {\n    let cmd = {\n      'cache': {\n        'show': show,\n        'quilt': {\n          'name': name,\n          'type': 'image',\n          'settings': settings,\n        }\n      }\n    };\n    super(cmd, bindata);\n  }\n}\n\nclass ShowCachedMessage extends Message {\n  constructor(name, targetDisplay = null, settings = null) {\n    let cmd = {'show': {'source': 'cache', 'quilt': {'name': name}}};\n    if (targetDisplay != null) cmd['show']['targetDisplay'] = targetDisplay;\n    if (settings != null) cmd['show']['quilt'].settings = settings;\n    super(cmd, null);\n  }\n}\n/* helper function */\nfunction generateRng() {\n  function xmur3(str) {\n    for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\n      h = Math.imul(h ^ str.charCodeAt(i), 3432918353), h = h << 13 | h >>> 19;\n    return function() {\n      h = Math.imul(h ^ h >>> 16, 2246822507);\n      h = Math.imul(h ^ h >>> 13, 3266489909);\n      return (h ^= h >>> 16) >>> 0;\n    }\n  }\n  function xoshiro128ss(a, b, c, d) {\n    return (() => {\n      var t = b << 9, r = a * 5;\n      r = (r << 7 | r >>> 25) * 9;\n      c ^= a;\n      d ^= b;\n      b ^= c;\n      a ^= d;\n      c ^= t;\n      d = d << 11 | d >>> 21;\n      return (r >>> 0) / 4294967296;\n    })\n  }  var state = Date.now();\n  var seed = xmur3(state.toString());\n  return xoshiro128ss(seed(), seed(), seed(), seed());\n}\n\nexport { CacheMessage, CheckMessage, Client, DeleteMessage, InfoMessage, InitMessage, Message, ShaderMessage, ShowCachedMessage, ShowMessage, UniformsMessage, WipeMessage };\n", "/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as HoloPlayCore from 'holoplay-core/dist/holoplaycore.module.js';\n\nexport const kDefaultEyeHeight = 1.6;\n\nlet config;\nexport const getHoloPlayConfig = () => {\n  if (config === undefined) config = makeConfig();\n  return config;\n};\n\nconst kFakeCalibration = {\n  configVersion: \"1.0\",\n  pitch: { value: 45 },\n  slope: { value: -5 },\n  center: { value: -0.5 },\n  viewCone: { value: 40 },\n  invView: { value: 1 },\n  verticalAngle: { value: 0 },\n  DPI: { value: 338 },\n  screenW: { value: 250 },\n  screenH: { value: 250 },\n  flipImageX: { value: 0 },\n  flipImageY: { value: 0 },\n  flipSubp: { value: 0 },\n};\n\nconst makeConfig = () => new class extends EventTarget {\n  constructor() {\n    super();\n\n    const fireChanged = (dispatch) => {\n      if (dispatch) this.dispatchEvent(new Event('on-config-changed'));\n      const changePromise = new Promise(r => { this._ensureConfigChangeEvent = r; });\n      changePromise.then(() => fireChanged(true));\n    };\n    fireChanged(false);\n\n    // Placeholder values while we wait for the HoloPlay service.\n    this.calibration = kFakeCalibration;\n\n    const client = new HoloPlayCore.Client(\n      (msg) => {\n        if (msg.devices.length < 1) {\n          console.error('No HoloPlay devices found!');\n          return;\n        }\n        if (msg.devices.length > 1) {\n          console.warn('More than one HoloPlay device found... using the first one');\n        }\n        this.calibration = msg.devices[0].calibration;\n      },\n      (err) => {\n        console.error('Error creating HoloPlay client:', err);\n      });\n\n    // Set defaults for configurable things\n    this.tileHeight = 320;\n    this.numViews = 2;\n    this.trackballX = 0;\n    this.trackballY = 0;\n    this.targetX = 0;\n    this.targetY = kDefaultEyeHeight;\n    this.targetZ = -0.5;\n    this.targetDiam = 2.0;\n    this.fovy = 13.0 / 180 * Math.PI;\n    this.debugView = false;\n  }\n\n  get calibration() { return this._calibration; }\n  set calibration(v) { this._calibration = deepFreeze(v); this._ensureConfigChangeEvent(); }\n\n  // configurable\n\n  get tileHeight() { return this._tileHeight; } set tileHeight(v) { this._tileHeight = v; this._ensureConfigChangeEvent(); }\n  get numViews  () { return this._numViews;   } set numViews  (v) { this._numViews   = v; this._ensureConfigChangeEvent(); }\n  get targetX   () { return this._targetX;    } set targetX   (v) { this._targetX    = v; this._ensureConfigChangeEvent(); }\n  get targetY   () { return this._targetY;    } set targetY   (v) { this._targetY    = v; this._ensureConfigChangeEvent(); }\n  get targetZ   () { return this._targetZ;    } set targetZ   (v) { this._targetZ    = v; this._ensureConfigChangeEvent(); }\n  get trackballX() { return this._trackballX; } set trackballX(v) { this._trackballX = v; this._ensureConfigChangeEvent(); }\n  get trackballY() { return this._trackballY; } set trackballY(v) { this._trackballY = v; this._ensureConfigChangeEvent(); }\n  get targetDiam() { return this._targetDiam; } set targetDiam(v) { this._targetDiam = v; this._ensureConfigChangeEvent(); }\n  get fovy      () { return this._fovy;       } set fovy      (v) { this._fovy       = v; this._ensureConfigChangeEvent(); }\n  get debugView () { return this._debugView;  } set debugView (v) { this._debugView  = v; this._ensureConfigChangeEvent(); }\n\n  // computed\n\n  get aspect() { return this.calibration.screenW.value / this.calibration.screenH.value; }\n  get tileWidth() { return Math.round(this.tileHeight * this.aspect); }\n  get framebufferWidth() {\n    const numPixels = this.tileWidth * this.tileHeight * this.numViews;\n    return 2 ** Math.ceil(Math.log2(Math.max(Math.sqrt(numPixels), this.tileWidth)));\n  }\n  get quiltWidth() { return Math.floor(this.framebufferWidth / this.tileWidth); }\n  get quiltHeight() { return Math.ceil(this.numViews / this.quiltWidth); }\n  get framebufferHeight() { return 2 ** Math.ceil(Math.log2(this.quiltHeight * this.tileHeight)); }\n\n  get viewCone() { return this.calibration.viewCone.value / 180 * Math.PI; }\n  get tilt() {\n    return this.calibration.screenH.value /\n      (this.calibration.screenW.value * this.calibration.slope.value) *\n      (this.calibration.flipImageX.value ? -1 : 1);\n  }\n  get subp() { return 1 / (this.calibration.screenW.value * 3); }\n  get pitch() {\n    const screenInches = this.calibration.screenW.value / this.calibration.DPI.value;\n    return this.calibration.pitch.value * screenInches *\n      Math.cos(Math.atan(1.0 / this.calibration.slope.value));\n  }\n};\n\nfunction deepFreeze(o) {\n  Object.freeze(o);\n  if (o === undefined) {\n    return o;\n  }\n\n  Object.getOwnPropertyNames(o).forEach(function (prop) {\n    if (o[prop] !== null\n      && (typeof o[prop] === 'object' || typeof o[prop] === 'function')\n      && !Object.isFrozen(o[prop])) {\n      deepFreeze(o[prop]);\n    }\n  });\n\n  return o;\n};\n", "/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport XRWebGLLayer, { PRIVATE as XRWebGLLayer_PRIVATE } from 'webxr-polyfill/src/api/XRWebGLLayer';\nimport { getHoloPlayConfig } from './HoloPlayConfig';\n\nexport const PRIVATE = Symbol('HoloPlayXRWebGLLayer');\n\nexport default class HoloPlayXRWebGLLayer extends XRWebGLLayer {\n  constructor(session, gl, layerInit) {\n    super(session, gl, layerInit);\n\n    const cfg = getHoloPlayConfig();\n\n    // Set up framebuffer/texture.\n\n    const config = this[XRWebGLLayer_PRIVATE].config;\n    const texture = gl.createTexture();\n    let depthStencil, dsConfig;\n    const framebuffer = gl.createFramebuffer();\n    const glEnable = gl.enable.bind(gl);\n    const glDisable = gl.disable.bind(gl);\n\n    const OES_VAO = gl.getExtension('OES_vertex_array_object');\n    const GL_VERTEX_ARRAY_BINDING = 0x85B5;\n    const glBindVertexArray = OES_VAO ? OES_VAO.bindVertexArrayOES.bind(OES_VAO) : gl.bindVertexArray.bind(gl);\n\n    const allocateFramebufferAttachments = () => {\n      const oldTextureBinding = gl.getParameter(gl.TEXTURE_BINDING_2D);\n      {\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA,\n          cfg.framebufferWidth, cfg.framebufferHeight,\n          0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      }\n      gl.bindTexture(gl.TEXTURE_2D, oldTextureBinding);\n\n      if (depthStencil) {\n        const oldRenderbufferBinding = gl.getParameter(gl.RENDERBUFFER_BINDING);\n        {\n          gl.bindRenderbuffer(gl.RENDERBUFFER, depthStencil);\n          gl.renderbufferStorage(gl.RENDERBUFFER, dsConfig.format,\n            cfg.framebufferWidth, cfg.framebufferHeight);\n        }\n        gl.bindRenderbuffer(gl.RENDERBUFFER, oldRenderbufferBinding);\n      }\n    };\n\n    if (config.depth || config.stencil) {\n      if (config.depth && config.stencil) {\n        dsConfig = { format: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\n      } else if (config.depth) {\n        dsConfig = { format: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\n      } else if (config.stencil) {\n        dsConfig = { format: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\n      }\n      depthStencil = gl.createRenderbuffer();\n    }\n    allocateFramebufferAttachments();\n    cfg.addEventListener('on-config-changed', allocateFramebufferAttachments);\n\n    const oldFramebufferBinding = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n    {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n      if (config.depth || config.stencil) {\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, dsConfig.attachment, gl.RENDERBUFFER, depthStencil);\n      }\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, oldFramebufferBinding);\n\n    // Set up blit from texture to screen.\n\n    const program = gl.createProgram();\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.attachShader(program, vs);\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.attachShader(program, fs);\n\n    {\n      const vsSource = `\n        attribute vec2 a_position;\n        varying vec2 v_texcoord;\n        void main() {\n          gl_Position = vec4(a_position * 2.0 - 1.0, 0.0, 1.0);\n          v_texcoord = a_position;\n        }\n      `;\n      gl.shaderSource(vs, vsSource);\n      gl.compileShader(vs);\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) console.warn(gl.getShaderInfoLog(vs));\n    }\n\n    let lastGeneratedFSSource;\n    let a_location;\n    const recompileProgram = () => {\n      const fsSource = glslifyNumbers`\n        // Shader copied from HoloPlay.js\n\n        precision mediump float;\n\n        uniform sampler2D u_texture;\n        varying vec2 v_texcoord;\n\n        const float pitch    = ${cfg.pitch};\n        const float tilt     = ${cfg.tilt};\n        const float center   = ${cfg.calibration.center.value};\n        const float invView  = ${cfg.calibration.invView.value};\n        const float flipX    = ${cfg.calibration.flipImageX.value};\n        const float flipY    = ${cfg.calibration.flipImageY.value};\n        const float subp     = ${cfg.subp};\n        const float numViews = ${cfg.numViews};\n        const float tilesX   = ${cfg.quiltWidth};\n        const float tilesY   = ${cfg.quiltHeight};\n        const vec2 quiltViewPortion = vec2(\n          ${cfg.quiltWidth * cfg.tileWidth / cfg.framebufferWidth},\n          ${cfg.quiltHeight * cfg.tileHeight / cfg.framebufferHeight});\n\n        vec2 texArr(vec3 uvz) {\n          float z = floor(uvz.z * numViews);\n          float x = (mod(z, tilesX) + uvz.x) / tilesX;\n          float y = (floor(z / tilesX) + uvz.y) / tilesY;\n          return vec2(x, y) * quiltViewPortion;\n        }\n\n        float remap(float value, float from1, float to1, float from2, float to2) {\n          return (value - from1) / (to1 - from1) * (to2 - from2) + from2;\n        }\n\n        void main() {\n          vec4 rgb[3];\n          vec3 nuv = vec3(v_texcoord.xy, 0.0);\n\n          // Flip UVs if necessary\n          nuv.x = (1.0 - flipX) * nuv.x + flipX * (1.0 - nuv.x);\n          nuv.y = (1.0 - flipY) * nuv.y + flipY * (1.0 - nuv.y);\n\n          for (int i = 0; i < 3; i++) {\n            nuv.z = (v_texcoord.x + float(i) * subp + v_texcoord.y * tilt) * pitch - center;\n            nuv.z = mod(nuv.z + ceil(abs(nuv.z)), 1.0);\n            nuv.z = (1.0 - invView) * nuv.z + invView * (1.0 - nuv.z);\n            rgb[i] = texture2D(u_texture, texArr(vec3(v_texcoord.x, v_texcoord.y, nuv.z)));\n          }\n\n          gl_FragColor = ${cfg.debugView ?\n          'texture2D(u_texture, v_texcoord)' :\n          'vec4(rgb[0].r, rgb[1].g, rgb[2].b, 1)'};\n        }\n      `;\n      if (fsSource === lastGeneratedFSSource) return;\n      lastGeneratedFSSource = fsSource;\n\n      gl.shaderSource(fs, fsSource);\n      gl.compileShader(fs);\n      if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        console.warn(gl.getShaderInfoLog(fs));\n        return;\n      }\n\n      gl.linkProgram(program);\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        console.warn(gl.getProgramInfoLog(program));\n        return;\n      }\n\n      a_location = gl.getAttribLocation(program, 'a_position');\n      const u_texture = gl.getUniformLocation(program, 'u_texture');\n\n      const oldProgram = gl.getParameter(gl.CURRENT_PROGRAM);\n      {\n        gl.useProgram(program);\n        gl.uniform1i(u_texture, 0); // Always use texture unit 0 for u_texture\n      }\n      gl.useProgram(oldProgram);\n    };\n    cfg.addEventListener('on-config-changed', recompileProgram);\n\n    const vao = OES_VAO ? OES_VAO.createVertexArrayOES() : gl.createVertexArray();\n    const vbo = gl.createBuffer();\n    const oldBufferBinding = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n    const oldVAO = gl.getParameter(GL_VERTEX_ARRAY_BINDING);\n    {\n      glBindVertexArray(vao);\n      gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n        0, 0, 1, 0, 0, 1,\n        0, 1, 1, 0, 1, 1,\n      ]), gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(a_location);\n      gl.vertexAttribPointer(a_location, 2, gl.FLOAT, false, 0, 0);\n    }\n    glBindVertexArray(oldVAO);\n    gl.bindBuffer(gl.ARRAY_BUFFER, oldBufferBinding);\n\n    const clearFramebuffer = () => {\n      console.assert(this[PRIVATE].holoplayEnabled);\n\n      // If session is not an inline session, XRWebGLLayer's composition disabled boolean\n      // should be false and then framebuffer should be marked as opaque.\n      // The buffers attached to an opaque framebuffer must be cleared prior to the\n      // processing of each XR animation frame.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      const currentClearColor = gl.getParameter(gl.COLOR_CLEAR_VALUE);\n      const currentClearDepth = gl.getParameter(gl.DEPTH_CLEAR_VALUE);\n      const currentClearStencil = gl.getParameter(gl.STENCIL_CLEAR_VALUE);\n      gl.clearColor(0.0, 0.0, 0.0, 0.0);\n      gl.clearDepth(1.0);\n      gl.clearStencil(0);\n      gl.clear(gl.DEPTH_BUFFER_BIT | gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n      gl.clearColor(currentClearColor[0], currentClearColor[1], currentClearColor[2], currentClearColor[3]);\n      gl.clearDepth(currentClearDepth);\n      gl.clearStencil(currentClearStencil);\n    };\n\n    const canvas = gl.canvas;\n    const controls = makeControls();\n    const placeholder = document.createElement('canvas');\n\n    const blitTextureToDefaultFramebufferIfNeeded = () => {\n      if (!this[PRIVATE].holoplayEnabled) return;\n\n      // Make sure the default framebuffer has the correct size (undo any resizing the host page did,\n      // and updating for the latest calibration value).\n      canvas.width = cfg.calibration.screenW.value;\n      canvas.height = cfg.calibration.screenH.value;\n\n      const oldVAO = gl.getParameter(GL_VERTEX_ARRAY_BINDING);\n      const oldCullFace = gl.getParameter(gl.CULL_FACE);\n      const oldBlend = gl.getParameter(gl.BLEND);\n      const oldDepthTest = gl.getParameter(gl.DEPTH_TEST);\n      const oldStencilTest = gl.getParameter(gl.STENCIL_TEST);\n      const oldScissorTest = gl.getParameter(gl.SCISSOR_TEST);\n      const oldViewport = gl.getParameter(gl.VIEWPORT);\n      const oldFramebufferBinding = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n      const oldRenderbufferBinding = gl.getParameter(gl.RENDERBUFFER_BINDING);\n      const oldProgram = gl.getParameter(gl.CURRENT_PROGRAM);\n      const oldActiveTexture = gl.getParameter(gl.ACTIVE_TEXTURE);\n      {\n        const oldTextureBinding = gl.getParameter(gl.TEXTURE_BINDING_2D);\n        {\n          gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n          gl.useProgram(program);\n\n          glBindVertexArray(vao);\n\n          gl.activeTexture(gl.TEXTURE0);\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n\n          gl.disable(gl.BLEND);\n          gl.disable(gl.CULL_FACE);\n          gl.disable(gl.DEPTH_TEST);\n          gl.disable(gl.STENCIL_TEST);\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.drawArrays(gl.TRIANGLES, 0, 6);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, oldTextureBinding);\n      }\n      gl.activeTexture(oldActiveTexture);\n      gl.useProgram(oldProgram);\n      gl.bindRenderbuffer(gl.RENDERBUFFER, oldRenderbufferBinding);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, oldFramebufferBinding);\n      gl.viewport(...oldViewport);\n      (oldScissorTest ? glEnable : glDisable)(gl.SCISSOR_TEST);\n      (oldStencilTest ? glEnable : glDisable)(gl.STENCIL_TEST);\n      (oldDepthTest ? glEnable : glDisable)(gl.DEPTH_TEST);\n      (oldBlend ? glEnable : glDisable)(gl.BLEND);\n      (oldCullFace ? glEnable : glDisable)(gl.CULL_FACE);\n      glBindVertexArray(oldVAO);\n    };\n\n    let popup;\n    window.addEventListener('unload', () => {\n      if (popup) popup.close();\n      popup = undefined;\n    });\n    const ondblclick = function () {\n      this.requestFullscreen();\n    };\n    const moveCanvasToWindow = (enabled, onbeforeunload) => {\n      if (!!popup == enabled) return;\n\n      if (enabled) {\n        recompileProgram();\n\n        placeholder.width = canvas.width;\n        placeholder.height = canvas.height;\n        placeholder.classList = canvas.classList;\n        placeholder.style.cssText = canvas.style.cssText;\n        {\n          placeholder.style.backgroundColor = 'lightgray';\n          placeholder.style.backgroundSize = '14px 14px';\n          placeholder.style.backgroundPosition = 'center';\n          placeholder.style.backgroundImage = 'radial-gradient(steelblue 1px, lightgray 1px)';\n        }\n\n        canvas.classList = [];\n        canvas.style.cssText = '';\n        canvas.style.position = 'fixed';\n        canvas.style.top = '0';\n        canvas.style.left = '0';\n        canvas.style.width = '100%';\n        canvas.style.height = '100%';\n        canvas.addEventListener('dblclick', ondblclick);\n\n        canvas.width = cfg.calibration.screenW.value;\n        canvas.height = cfg.calibration.screenH.value;\n\n        if (canvas.parentElement) {\n          canvas.parentElement.replaceChild(placeholder, canvas);\n        }\n        document.body.appendChild(controls);\n\n        popup = window.open('', undefined, 'width=400,height=400');\n        popup.document.title = 'HoloPlay Window (fullscreen me on Looking Glass!)';\n        popup.document.body.appendChild(canvas);\n        console.assert(onbeforeunload);\n        popup.onbeforeunload = onbeforeunload;\n      } else {\n        if (placeholder.parentElement) {\n          placeholder.parentElement.replaceChild(canvas, placeholder);\n        }\n        controls.parentElement.removeChild(controls);\n\n        // Roughly reset the canvas size. This won't work if the page attempted to resize\n        // the canvas while the popup was open.\n        canvas.width = placeholder.width;\n        canvas.height = placeholder.height;\n        canvas.classList = placeholder.classList;\n        canvas.style.cssText = placeholder.style.cssText;\n        canvas.removeEventListener('dblclick', ondblclick);\n\n        popup.onbeforeunload = undefined;\n        popup.close();\n        popup = undefined;\n      }\n    };\n\n    this[PRIVATE] = {\n      holoplayEnabled: false,\n      framebuffer,\n      clearFramebuffer,\n      blitTextureToDefaultFramebufferIfNeeded,\n      moveCanvasToWindow,\n    };\n  }\n\n  get framebuffer() { return this[PRIVATE].holoplayEnabled ? this[PRIVATE].framebuffer : null; }\n  get framebufferWidth() { return getHoloPlayConfig().framebufferWidth; }\n  get framebufferHeight() { return getHoloPlayConfig().framebufferHeight; }\n}\n\nfunction glslifyNumbers(strings, ...values) {\n  let s = strings[0];\n  for (let i = 1; i < strings.length; ++i) {\n    const v = values[i - 1];\n    s += typeof v === 'number' ? v.toPrecision(10) : v;\n    s += strings[i];\n  }\n  return s;\n}\n\nfunction makeControls() {\n  const cfg = getHoloPlayConfig();\n\n  const styleElement = document.createElement('style');\n  document.head.appendChild(styleElement);\n  styleElement.sheet.insertRule(\n    '#HoloPlayWebXRControls * { all: revert; font-family: sans-serif }');\n\n  const c = document.createElement('div');\n  c.id = 'HoloPlayWebXRControls';\n  c.style.position = 'fixed';\n  c.style.zIndex = 1000;\n  c.style.padding = '4px';\n  c.style.width = '315px';\n  c.style.height = '280px';\n  c.style.maxWidth = 'calc(100vw - 18px)';\n  c.style.maxHeight = 'calc(100vh - 18px)';\n  c.style.whiteSpace = 'nowrap';\n  c.style.overflowY = 'scroll';\n  c.style.scrollbarWidth = 'thin';\n  c.style.scrollbarColor = 'thistle transparent';\n  c.style.background = 'rgba(0, 0, 0, 0.6)';\n  c.style.color = 'white';\n  c.style.padding = '2px';\n  c.style.border = '3px solid black';\n  c.style.right = '6px';\n  c.style.bottom = '6px';\n\n  const title = document.createElement('div');\n  c.appendChild(title);\n  title.style.width = '100%';\n  title.style.textAlign = 'center';\n  title.style.fontWeight = 'bold';\n  title.innerText = 'HoloPlay View Controls ';\n\n  const lrToggle = document.createElement('input');\n  title.appendChild(lrToggle);\n  lrToggle.type = 'button';\n  lrToggle.value = '\u2190';\n  lrToggle._otherValue = '\u2192';\n  lrToggle.onclick = () => {\n    [c.style.right, c.style.left] = [c.style.left, c.style.right];\n    [lrToggle.value, lrToggle._otherValue] = [lrToggle._otherValue, lrToggle.value];\n  };\n\n  const controlListDiv = document.createElement('div');\n  c.appendChild(controlListDiv);\n\n  const addControl = (name, options, rest) => {\n    const stringify = rest.stringify;\n\n    const controlLineDiv = document.createElement('div');\n    controlListDiv.appendChild(controlLineDiv);\n\n    const controlID = name;\n    const initialValue = cfg[name];\n\n    const label = document.createElement('label');\n    controlLineDiv.appendChild(label);\n    label.innerText = rest.label;\n    label.setAttribute('for', controlID);\n    label.style.width = '80px';\n    label.style.display = 'inline-block';\n    label.style.textDecoration = 'dotted underline 1px';\n    label.title = rest.title;\n\n    if (options.type !== 'checkbox') {\n      const reset = document.createElement('input');\n      controlLineDiv.appendChild(reset);\n      reset.type = 'button';\n      reset.value = '\u238C';\n      reset.alt = 'reset';\n      reset.title = 'Reset value to default';\n      reset.style.padding = '0 4px';\n      reset.onclick = () => {\n        control.value = initialValue;\n        control.oninput();\n      };\n    }\n\n    const control = document.createElement('input');\n    controlLineDiv.appendChild(control);\n    Object.assign(control, options);\n    control.id = controlID;\n    control.value = options.value !== undefined ? options.value : initialValue;\n    const updateValue = newValue => {\n      cfg[name] = newValue;\n      updateNumberText(newValue);\n    };\n    control.oninput = () => {\n      const newValue =\n        options.type === 'range' ? parseFloat(control.value) :\n          options.type === 'checkbox' ? control.checked :\n            control.value;\n      updateValue(newValue);\n    };\n    if (options.type === 'range') {\n      control.style.width = '110px';\n      control.style.height = '16px';\n      control.onwheel = ev => {\n        const newValue = parseFloat(control.value) + Math.sign(ev.deltaX - ev.deltaY) * options.step;\n        control.value = newValue;\n        updateValue(newValue);\n      };\n    }\n\n    let updateNumberText = () => { };\n    if (stringify) {\n      const numberText = document.createElement('span');\n      controlLineDiv.appendChild(numberText);\n      updateNumberText = v => { numberText.innerHTML = stringify(v); };\n      updateNumberText(initialValue);\n    }\n  };\n\n  addControl('tileHeight',\n    { type: 'range', min: 160, max: 455, step: 1 },\n    {\n      label: 'resolution',\n      title: 'resolution of each view',\n      stringify: v => `${(v * cfg.aspect).toFixed()}&times;${v.toFixed()}`\n    });\n  addControl('numViews',\n    { type: 'range', min: 1, max: 145, step: 1 },\n    {\n      label: '# views',\n      title: 'number of different viewing angles to render',\n      stringify: v => v.toFixed()\n    });\n\n  addControl('trackballX',\n    { type: 'range', min: -Math.PI, max: 1.0001 * Math.PI, step: 0.5 / 180 * Math.PI },\n    {\n      label: 'trackball x',\n      title: 'camera trackball x',\n      stringify: v => `${(v / Math.PI * 180).toFixed()}&deg;`\n    });\n  addControl('trackballY',\n    { type: 'range', min: -0.5 * Math.PI, max: 0.5001 * Math.PI, step: 1.0 / 180 * Math.PI },\n    {\n      label: 'trackball y',\n      title: 'camera trackball y',\n      stringify: v => `${(v / Math.PI * 180).toFixed()}&deg;`\n    });\n\n  addControl('targetX',\n    { type: 'range', min: -20, max: 20, step: 0.1 },\n    {\n      label: 'target x',\n      title: 'target position x',\n      stringify: v => v.toFixed(2) + ' m'\n    });\n  addControl('targetY',\n    { type: 'range', min: -20, max: 20, step: 0.1 },\n    {\n      label: 'target y',\n      title: 'target position y',\n      stringify: v => v.toFixed(2) + ' m'\n    });\n  addControl('targetZ',\n    { type: 'range', min: -20, max: 20, step: 0.1 },\n    {\n      label: 'target z',\n      title: 'target position z',\n      stringify: v => v.toFixed(2) + ' m'\n    });\n  addControl('targetDiam',\n    { type: 'range', min: 0.2, max: 20, step: 0.1 },\n    {\n      label: 'target size',\n      title: 'diameter of the target sphere to fit in the screen',\n      stringify: v => `${(v * 100).toFixed()} cm`\n    });\n\n  addControl('fovy',\n    { type: 'range', min: 1.0 / 180 * Math.PI, max: 120.1 / 180 * Math.PI, step: 1.0 / 180 * Math.PI },\n    {\n      label: 'fov',\n      title: 'perspective fov (degrades stereo effect)',\n      stringify: v => {\n        const xdeg = (v / Math.PI * 180);\n        const ydeg = Math.atan(Math.tan(v / 2) * cfg.aspect) * 2 / Math.PI * 180;\n        return `${xdeg.toFixed()}&deg;&times;${ydeg.toFixed()}&deg;`;\n      }\n    });\n\n  addControl('debugView',\n    { type: 'checkbox' },\n    {\n      label: 'debug',\n      title: 'enable \"quilted\" debug view',\n    });\n\n  return c;\n}\n", "/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport XRDevice from 'webxr-polyfill/src/devices/XRDevice';\nimport XRSpace from 'webxr-polyfill/src/api/XRSpace'\nimport { vec3, quat, mat4 } from 'gl-matrix';\nimport { PRIVATE as HoloPlayXRWebGLLayer_PRIVATE } from './HoloPlayXRWebGLLayer';\nimport { getHoloPlayConfig, kDefaultEyeHeight } from './HoloPlayConfig';\n\nexport default class HoloPlayXRDevice extends XRDevice {\n  constructor(global) {\n    super(global);\n\n    this.sessions = new Map();\n\n    this.viewSpaces = [];\n    this.basePoseMatrix = mat4.create();\n    this.inlineProjectionMatrix = mat4.create();\n    this.inlineInverseViewMatrix = mat4.create();\n    this.holoplayProjectionMatrices = [];\n    this.holoplayInverseViewMatrices = [];\n  }\n\n  onBaseLayerSet(sessionId, layer) {\n    const session = this.sessions.get(sessionId);\n    session.baseLayer = layer;\n\n    const baseLayerPrivate = layer[HoloPlayXRWebGLLayer_PRIVATE];\n    baseLayerPrivate.holoplayEnabled = session.immersive;\n    if (session.immersive) {\n      baseLayerPrivate.moveCanvasToWindow(true, () => {\n        this.endSession(sessionId);\n      });\n    }\n  }\n\n  isSessionSupported(mode) {\n    return mode === 'inline' || mode === 'immersive-vr';\n  }\n\n  isFeatureSupported(featureDescriptor) {\n    switch (featureDescriptor) {\n      case 'viewer': return true;\n      case 'local': return true;\n      case 'local-floor': return true;\n      case 'bounded-floor': return false;\n      case 'unbounded': return false;\n      default:\n        console.warn('HoloPlayXRDevice.isFeatureSupported: feature not understood:', featureDescriptor);\n        return false;\n    }\n  }\n\n  async requestSession(mode, enabledFeatures) {\n    if (!this.isSessionSupported(mode)) {\n      return Promise.reject();\n    }\n    const immersive = mode !== 'inline';\n    const session = new Session(mode, enabledFeatures);\n    this.sessions.set(session.id, session);\n    if (immersive) {\n      this.dispatchEvent('@@webxr-polyfill/vr-present-start', session.id);\n    }\n    return Promise.resolve(session.id);\n  }\n\n  requestAnimationFrame(callback) {\n    return this.global.requestAnimationFrame(callback);\n  }\n\n  cancelAnimationFrame(handle) {\n    this.global.cancelAnimationFrame(handle);\n  }\n\n  onFrameStart(sessionId, renderState) {\n    const session = this.sessions.get(sessionId);\n    const cfg = getHoloPlayConfig();\n\n    if (session.immersive) {\n      const tanHalfFovy = Math.tan(0.5 * cfg.fovy);\n      // Distance from frustum's vertex to target.\n      const focalDistance = 0.5 * cfg.targetDiam / tanHalfFovy;\n      const clipPlaneBias = focalDistance - cfg.targetDiam;\n\n      const mPose = this.basePoseMatrix;\n      mat4.fromTranslation(mPose, [cfg.targetX, cfg.targetY, cfg.targetZ]);\n      mat4.rotate(mPose, mPose, cfg.trackballX, [0, 1, 0]);\n      mat4.rotate(mPose, mPose, -cfg.trackballY, [1, 0, 0]);\n      mat4.translate(mPose, mPose, [0, 0, focalDistance]);\n\n      for (let i = 0; i < cfg.numViews; ++i) {\n        const fractionAlongViewCone = (i + 0.5) / cfg.numViews - 0.5; // -0.5 < this < 0.5\n        const tanAngleToThisCamera = Math.tan(cfg.viewCone * fractionAlongViewCone);\n        const offsetAlongBaseline = focalDistance * tanAngleToThisCamera;\n\n        const mView = (this.holoplayInverseViewMatrices[i] = this.holoplayInverseViewMatrices[i] || mat4.create());\n        mat4.translate(mView, mPose, [offsetAlongBaseline, 0, 0]);\n        mat4.invert(mView, mView);\n\n        // depthNear/Far are the distances from the view origin to the near/far planes.\n        // l/r/t/b/n/f are as in the usual OpenGL perspective matrix formulation.\n        const n = Math.max(clipPlaneBias + renderState.depthNear, 0.01);\n        const f = clipPlaneBias + renderState.depthFar;\n        const halfYRange = n * tanHalfFovy;\n        const t = halfYRange, b = -halfYRange;\n        const midpointX = n * -tanAngleToThisCamera;\n        const halfXRange = cfg.aspect * halfYRange;\n        const r = midpointX + halfXRange, l = midpointX - halfXRange;\n        const mProj = (this.holoplayProjectionMatrices[i] = this.holoplayProjectionMatrices[i] || mat4.create());\n        mat4.set(mProj,\n          2 * n / (r - l), 0, 0, 0,\n          0, 2 * n / (t - b), 0, 0,\n          (r + l) / (r - l), (t + b) / (t - b), -(f + n) / (f - n), -1,\n          0, 0, -2 * f * n / (f - n), 0);\n      }\n\n      const baseLayerPrivate = session.baseLayer[HoloPlayXRWebGLLayer_PRIVATE];\n      baseLayerPrivate.clearFramebuffer();\n    } else {\n      const gl = session.baseLayer.context;\n\n      // Projection\n      const aspect = gl.drawingBufferWidth / gl.drawingBufferHeight;\n      mat4.perspective(this.inlineProjectionMatrix, renderState.inlineVerticalFieldOfView, aspect,\n        renderState.depthNear, renderState.depthFar);\n\n      // View\n      mat4.fromTranslation(this.basePoseMatrix, [0, kDefaultEyeHeight, 0]);\n      mat4.invert(this.inlineInverseViewMatrix, this.basePoseMatrix);\n    }\n  }\n\n  onFrameEnd(sessionId) {\n    const session = this.sessions.get(sessionId);\n    session.baseLayer[HoloPlayXRWebGLLayer_PRIVATE].blitTextureToDefaultFramebufferIfNeeded();\n  }\n\n  async requestFrameOfReferenceTransform(type, options) {\n    const matrix = mat4.create();\n    switch (type) {\n      case 'viewer':\n      case 'local':\n        mat4.fromTranslation(matrix, [0, -kDefaultEyeHeight, 0]);\n        return matrix;\n      case 'local-floor':\n        return matrix;\n      default:\n        throw new Error('XRReferenceSpaceType not understood');\n    }\n  }\n\n  endSession(sessionId) {\n    const session = this.sessions.get(sessionId);\n    if (session.immersive && session.baseLayer) {\n      session.baseLayer[HoloPlayXRWebGLLayer_PRIVATE].moveCanvasToWindow(false);\n      this.dispatchEvent('@@webxr-polyfill/vr-present-end', sessionId);\n    }\n    session.ended = true;\n  }\n\n  doesSessionSupportReferenceSpace(sessionId, type) {\n    const session = this.sessions.get(sessionId);\n    if (session.ended) {\n      return false;\n    }\n    return session.enabledFeatures.has(type);\n  }\n\n  getViewSpaces(mode) {\n    if (mode === 'immersive-vr') {\n      const cfg = getHoloPlayConfig();\n\n      // Fill up viewSpaces to the necessary size if it's too short.\n      for (let i = this.viewSpaces.length; i < cfg.numViews; ++i) {\n        this.viewSpaces[i] = new HoloPlayXRSpace(i);\n      }\n      // And trim it down if it's too long.\n      this.viewSpaces.length = cfg.numViews;\n      return this.viewSpaces;\n    }\n\n    return undefined;\n  }\n\n  getViewport(sessionId, eye, layer, target, viewIndex) {\n    if (viewIndex === undefined) {\n      const session = this.sessions.get(sessionId);\n      const gl = session.baseLayer.context;\n\n      target.x = 0;\n      target.y = 0;\n      target.width = gl.drawingBufferWidth;\n      target.height = gl.drawingBufferHeight;\n    } else {\n      const cfg = getHoloPlayConfig();\n      const col = viewIndex % cfg.quiltWidth;\n      const row = Math.floor(viewIndex / cfg.quiltWidth);\n\n      target.x = cfg.tileWidth * col;\n      target.y = cfg.tileHeight * row;\n      target.width = cfg.tileWidth;\n      target.height = cfg.tileHeight;\n    }\n    return true;\n  }\n\n  getProjectionMatrix(eye, viewIndex) {\n    if (viewIndex === undefined) { return this.inlineProjectionMatrix; }\n    return this.holoplayProjectionMatrices[viewIndex] || mat4.create();\n  }\n\n  getBasePoseMatrix() {\n    return this.basePoseMatrix;\n  }\n\n  getBaseViewMatrix() {\n    // Only used for inline mode.\n    return this.inlineInverseViewMatrix;\n  }\n\n  _getViewMatrixByIndex(viewIndex) {\n    return (this.holoplayInverseViewMatrices[viewIndex] = this.holoplayInverseViewMatrices[viewIndex] || mat4.create());\n  }\n\n  getInputSources() { return []; }\n\n  getInputPose(inputSource, coordinateSystem, poseType) { return null; }\n\n  onWindowResize() { }\n};\n\nlet SESSION_ID = 0;\nclass Session {\n  constructor(mode, enabledFeatures) {\n    this.mode = mode;\n    this.immersive = mode === 'immersive-vr' || mode === 'immersive-ar';\n    this.id = ++SESSION_ID;\n    this.baseLayer = null;\n    this.inlineVerticalFieldOfView = Math.PI * 0.5;\n    this.ended = false;\n    this.enabledFeatures = enabledFeatures;\n  }\n}\n\nclass HoloPlayXRSpace extends XRSpace {\n  constructor(viewIndex) {\n    super();\n    this.viewIndex = viewIndex;\n  }\n\n  get eye() { return 'none'; }\n\n  _onPoseUpdate(device) {\n    this._inverseBaseMatrix = device._getViewMatrixByIndex(this.viewIndex);\n  }\n}\n", "/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebXRPolyfill from 'webxr-polyfill/src/WebXRPolyfill';\nimport XRSystem from 'webxr-polyfill/src/api/XRSystem';\nimport API from 'webxr-polyfill/src/api/index';\nimport HoloPlayXRDevice from './HoloPlayXRDevice';\nimport HoloPlayXRWebGLLayer from './HoloPlayXRWebGLLayer';\n\nexport default class HoloPlayWebXRPolyfill extends WebXRPolyfill {\n  constructor(message) {\n    super();\n\n    console.warn(message || 'HoloPlay WebXR \"polyfill\" overriding native WebXR API.');\n    for (const className in API) {\n      this.global[className] = API[className];\n    }\n    this.global.XRWebGLLayer = HoloPlayXRWebGLLayer;\n\n    this.injected = true;\n\n    const devicePromise = Promise.resolve(new HoloPlayXRDevice(this.global));\n    this.xr = new XRSystem(devicePromise);\n    Object.defineProperty(this.global.navigator, 'xr', {\n      value: this.xr,\n      configurable: true,\n    });\n  }\n}\n", "import * as THREE from \"three/src/Three.js\";\nimport { VRButton } from \"three/examples/jsm/webxr/VRButton.js\";\nimport HoloPlayWebXRPolyfill from \"holoplay-webxr/src/HoloPlayWebXRPolyfill.js\";\nimport { getHoloPlayConfig } from \"holoplay-webxr/src/HoloPlayConfig.js\";\n\nconst config = getHoloPlayConfig();\nconfig.tileHeight = 512;\nconfig.numViews = 45;\nconfig.targetY = 0;\nconfig.targetZ = 0;\nconfig.targetDiam = 3;\nconfig.fovy = 40 * Math.PI/180;\nnew HoloPlayWebXRPolyfill();\n\nconst scene = new THREE.Scene();\n\nconst cube = new THREE.Mesh(new THREE.BoxGeometry(2, 0.1, 0.1), new THREE.MeshStandardMaterial({ color: \"red\" }));\n\nscene.add(cube);\n\nscene.add(new THREE.AmbientLight(0xaaaaaa));\nconst directionalLight = new THREE.DirectionalLight(0xffffff);\ndirectionalLight.position.set(3, 3, 3);\nscene.add(directionalLight);\n\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\ndocument.body.append(renderer.domElement);\nrenderer.xr.enabled = true;\n\nconst camera = new THREE.PerspectiveCamera();\ncamera.position.z = 3;\n\nrenderer.setAnimationLoop(() => {\n  cube.rotation.z += 0.01;\n  cube.rotation.x += 0.02;\n  renderer.render(scene, camera);\n});\n\ndocument.body.append(VRButton.createButton(renderer));\n\nfunction resize() {\n  renderer.setSize(innerWidth, innerHeight);\n  camera.aspect = innerWidth / innerHeight;\n  camera.updateProjectionMatrix();\n}\nresize();\nwindow.addEventListener(\"resize\", resize);\n"],
  "mappings": "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A;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,oCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,yCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,kCAAkB;AAAA;AAAA;;;ACAzB,MAAO,uCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,+BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,2CAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,oCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,kCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,6BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,0BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,+BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,4BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,iCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,yCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,iCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,sCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,qCAAkzB,MAAO,iCAAkzB,MAAO,6CAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,oCAAkB;AAAA;AAAA;AAAA;;;ACAzB,MAAO,yCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,qCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,0CAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,wCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,6CAAkzB,MAAO,qCAAkzB,MAAO,oCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,mCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,oCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,yCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,uCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,kCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,4BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,iCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,qCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,0CAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,qCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,0CAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,kCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,uCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,kCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,qCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,oCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,oCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,kCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,6BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,uCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,+CAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,8CAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,uCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,+BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,uBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,4CAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,8BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,kCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,uCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,qCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,0CAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,uCAAkzB,MAAO,qCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,gCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,wCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,+BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAzB,MAAO,oCAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA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;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCzB,MAAM,YAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACvC3B,MAAM,UAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAezB,MAAM,YAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACf3B,MAAM,UAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BzB,MAAM,YAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AC5B3B,MAAM,UAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0CzB,MAAM,YAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AC1C3B,MAAM,UAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoDzB,MAAM,YAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACpD3B,MAAM,UAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CzB,MAAM,YAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AC3C3B,MAAM,WAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CzB,MAAM,aAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AC9C3B,MAAM,WAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkDzB,MAAM,aAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AClD3B,MAAM,WAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2DzB,MAAM,aAAqmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDzB,MAAM,aAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;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",
  "names": []
}
